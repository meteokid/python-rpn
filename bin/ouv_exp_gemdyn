#!/bin/ksh

myself=$0
DESC='Open a new RDE experiment with pre-set SRCPATH'
USAGE="USAGE: ${myself##*/} [-h] [-v] [--dodeps]"

#---- Functions ------------------------------------------------------
#====
usage_long() {
         toto=$(echo -e $USAGE)
         more <<EOF
$DESC

$toto

Options:
    -h, --help     : print this help
    -v, --verbose  :  
        --dodeps   : add known dependencies to the src path
Will produce SRCPATH for all known ARCH \$(rdevar rde_known_base_arch_list)

EOF
}

myverbose=
dodeps=0
EC_ARCH_LIST="$(rdevar rde_known_base_arch_list)"
#TODO: 
while [[ $# -gt 0 ]] ; do
   case $1 in
      (-h|--help) usage_long; exit 0;;
      (-v|--verbose) myverbose=-v ;;
      (--dodeps) dodeps=1 ;;
      (-*|*) echo "ERROR: Unrecognized option $1"
         echo -e $USAGE
         echo "---- ABORT ----"
         exit 1;;
   esac
   shift
done

if [[ x$modelutils == x  ]] ; then
	 cat <<EOF
ERROR: \$modelutils not defined or does not exists
       modelutils=$modelutils
       Cannot setup the experiment diretory

       Please make sure you loaded the full GEM development environment
---- ABORT ----
EOF
	 exit 1
fi
if [[ x$rpnphy == x  ]] ; then
	 cat <<EOF
ERROR: \$rpnphy not defined or does not exists
       rpnphy=$rpnphy
       Cannot setup the experiment diretory

       Please make sure you loaded the full GEM development environment
---- ABORT ----
EOF
	 exit 1
fi
if [[ x$gemdyn == x || ! -d $gemdyn/src ]] ; then
	 cat <<EOF
ERROR: \$gemdyn not defined or src subdir does not exists
       gemdyn=$gemdyn
       Cannot setup the experiment diretory

       Please make sure you loaded the full GEM development environment
---- ABORT ----
EOF
	 exit 1
fi


SRCLIST="${modelutils}/include ${rpnphy}/include ${gemdyn}/include ${gemdyn}/src"
TOPDIRS="${gemdyn}"
if [[ $dodeps == 1 ]] ; then
   SRCLIST="${modelutils}/include ${modelutils}/src ${rpnphy}/include ${rpnphy}/src ${gemdyn}/include ${gemdyn}/src"
   TOPDIRS="${modelutils} ${rpnphy} ${gemdyn}"
fi

rm -f $(rdevar srcpathfile)
for myarch in $EC_ARCH_LIST ; do
   myarchold=$(rdevar --arch ${myarch} base_arch)
   rdeaddsrc ${myverbose} -R --arch ${myarchold} --reset --topdirs "${TOPDIRS}" ${SRCLIST}
done
