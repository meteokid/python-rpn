!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r itf_phy_uvgridscal_ad - ADJ of itf_phy_uvgridscal 
!                               (variant for OPENMP LAM) 
!
#include "model_macros_f.h"
!
      subroutine itf_phy_uvgridscal_ad (F_put,F_pvt,DIST_DIM,nkphy,vers)
!
      implicit none
!
      integer DIST_DIM,nkphy
      real F_put (DIST_SHAPE,nkphy), F_pvt (DIST_SHAPE,nkphy)
      logical vers
!
!author
!     Stephane Laroche     - Janvier 2001
!
!revision
! v3_00 - Laroche S.       - initial MPI version
! v3_21 - Tanguay M.       - Revision Openmp 
! v3_30 - Tanguay M.       - Revision Openmp LAM 
! v4_03 - Tanguay M.       - Staggered version TL/AD
! v4_40 - Tanguay M.       - Revision TL/AD
!
!object
!	ADJ of Cubic interpolation of the dynamics fields from their own grid
!	to the grid where the physics tendencies are computed
!	
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! F_put       
! F_pvt
! vers          I          .true.  wind grid ---> scalar grid    
!                          .false. wind grid <--- scalar grid 
!----------------------------------------------------------------
!    
!implicits
#include "glb_ld.cdk"
#include "schm.cdk"
#include "intuv.cdk"
#include "inuvl.cdk"
!
      integer i,j,k,i0u,j0u,inu,jnu,i0v,j0v,inv,jnv
      integer nsu,ndu,nsv,ndv
      real, dimension(LDIST_SHAPE,nkphy) :: wk_u, wk_v
      real*8, parameter :: ZERO_8 = 0.0
!
!     ---------------------------------------------------------------
!
!     ZERO adjoint variables
!     ----------------------
      wk_u = 0.
      wk_v = 0.
!
      if(vers) then
       nsu = 1
       ndu = 0
       nsv = 2
       ndv = 0
      else
       nsu = 0
       ndu = 1
       nsv = 0
       ndv = 2
      endif
!
!     TRAJECTORY
!     ----------
      call uv_acg2g_tr(nsv,ndv,i0v,inv,j0v,jnv)
      call uv_acg2g_tr(nsu,ndu,i0u,inu,j0u,jnu)
!
!$omp parallel do
      do k=1,nkphy
         do j= j0v, jnv
         do i= i0v, inv
            wk_v (i,j,k) = F_pvt(i,j,k) + wk_v(i,j,k)
            F_pvt(i,j,k) = ZERO_8
         end do
         end do
         do j= j0u, jnu
         do i= i0u, inu
            wk_u (i,j,k) = F_put(i,j,k) + wk_u(i,j,k)
            F_put(i,j,k) = ZERO_8
         end do
         end do
      end do
!$omp end parallel do
!
!     ADJOINT of 
!     y component
!     -----------
      call uv_acg2g_ad (wk_v,F_pvt,nsv,ndv,LDIST_DIM,nkphy,i0v,inv,j0v,jnv)
!
!     ADJOINT of 
!     x component
!     -----------
      call uv_acg2g_ad (wk_u,F_put,nsu,ndu,LDIST_DIM,nkphy,i0u,inu,j0u,jnu)
!
!     ---------------------------------------------------------------
!
      return
      end
