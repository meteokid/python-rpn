!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r nli_tr - Equivalent to nli for TRAJECTORY 
!
#include "model_macros_f.h"
!
      subroutine nli_tr()
!
      implicit none
!
!author M.Tanguay
!
!revision
! v2_10 - Tanguay M.        - initial MPI version
! v2_21 - Tanguay M.        - reduce standard output as in model 
! v2_30 - Edouard S.        - replace Schm_elast_L by Schm_cptop_L
! v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate 
! v3_03 - Tanguay M.        - Adjoint NoHyd configuration 
! v3_11 - Tanguay M.        - AIXport+Opti+OpenMP for TLM-ADJ
! v4_04 - Tanguay M.        - Staggered version TL/AD 
! v4_10 - Tanguay M.        - Open top TL/AD
! v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
! v4_12 - Tanguay M.        - TL/AD Open top
! v4_40 - Tanguay M.        - Revision TL/AD
!
!object
!    see id section
!
!implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "p_geof.cdk"
#include "rhsc_m.cdk"
#include "nl_m.cdk"
#include "cori.cdk"
#include "vt0_m.cdk"
#include "vtx_m.cdk"
#include "ptopo.cdk"
#include "lctl.cdk"
#include "lam.cdk"
!
!     ______________________________________________________
!
      if (Lun_debug_L)  write(Lun_out,1000)
!
      gmmstat = gmm_get(gmmk_rhsp_m_s,rhsp_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(rhsp_m)'
      gmmstat = gmm_get(gmmk_rhsc_m_s,rhsc_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(rhsc_m)'
      gmmstat = gmm_get(gmmk_tt0_m_s,tt0_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(tt0_m)'
      gmmstat = gmm_get(gmmk_st0_m_s,st0_m,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(st0_m)'
      gmmstat = gmm_get(gmmk_bspqtx_m_s,bspqtx_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(bspqtx_m)'
      gmmstat = gmm_get(gmmk_fiptx_m_s,fiptx_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(fiptx_m)'
      gmmstat = gmm_get(gmmk_zdt0_m_s,zdt0_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(zdt0_m)'
      if (.not. Schm_hydro_L) then
         gmmstat = gmm_get(gmmk_mutx_m_s,mutx_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(mutx_m)'
      endif

!     - - - - - - - - - - - - - - -
      gmmstat = gmm_get(gmmk_fis0_s,fis0,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(fis0)'
      if (.not. Schm_hydro_L) then
         gmmstat = gmm_get(gmmk_qt0_m_s,qt0_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(qt0_m)'
      else
         nullify(qt0_m)
      endif
      if (Cori_cornl_L) then
         gmmstat = gmm_get(gmmk_ut0_m_s,ut0_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(ut0_m)'
         gmmstat = gmm_get(gmmk_vt0_m_s,vt0_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'nli_tr ERROR at gmm_get(vt0_m)'
      else
         nullify(ut0_m,vt0_m)
      endif
!
      call diag_var( bspqtx_m, mutx_m, st0_m, qt0_m, &
                     1,l_ni,1,l_nj,Lam_gbpil_t+1,l_nk)
!
      call diag_fip( fiptx_m, st0_m, tt0_m, qt0_m, fis0, LDIST_DIM, l_nk)
!
      call nlip_2 ( nl_m_u, nl_m_v, nl_m_t  , nl_m_c, nl_m_w, nl_m_f, nl_m_b , &
                    ut0_m , vt0_m , tt0_m   , st0_m , qt0_m , zdt0_m, fiptx_m, &
                    rhsp_m, rhsc_m, bspqtx_m, mutx_m, &
                    LDIST_DIM, l_nk )
!
 1000 format(5X,'TRAJ of COMPUTE NON-LINEAR RHS: (S/R NLI_TR)')
!
!     __________________________________________________________________
!
      return
      end
