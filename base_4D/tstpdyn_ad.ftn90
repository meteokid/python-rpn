!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r tstpdyn_ad -  ADJ of tstpdyn_tl 
!
#include "model_macros_f.h"
!
      subroutine tstpdyn_ad ( F_fnitraj )
!
      implicit none
!
      integer F_fnitraj
!
!author M.Tanguay
!
!revision
! v2_10 - Tanguay M.        - initial MPI version
! v2_21 - Tanguay M.        - ADJ of HO option
!                           - ADJ of vertical sponge layer
! v2_31 - Tanguay M.        - adapt ADJ to new advection code,
!                             hybrid coord., tracer tr3d and
!                             diffusion in gem_run 
! v3_00 - Tanguay M.        - adapt to restructured adw_main 
! v3_02 - Tanguay M.        - ADJ of Eigv_parity_L and Hspng_main done
! v3_03 - Tanguay M.        - Adjoint NoHyd configuration 
! v3_20 - Tanguay M.        - Option of storing instead of redoing TRAJ 
! v3_21 - Tanguay M.        - Revision Openmp
! v3_30 - Tanguay M.        - add parameter iln in sol_main
! v4_04 - Tanguay M.        - Staggered version TL/AD 
! v4_10 - Tanguay M.        - Open top TL/AD
! v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
! v4_11 - Tanguay M.        - TEMPORAIRE OPENMP ADW not completed
! v4_30 - Tanguay M.        - Revision
!
!object
!     see id section
!
!arguments
!     see tstpdyn
!
!implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "orh.cdk"
#include "nl.cdk"
#include "nl_m.cdk"
#include "rhsc_m.cdk"
#include "orh_m.cdk"
#include "tr3d.cdk"
#include "vt0_m.cdk"
#include "vtx_m.cdk"
#include "vtopo.cdk"
#include "ptopo.cdk"
#include "step.cdk"
#include "lctl.cdk"
      include "v4dg.inc"
!
      integer iln, dim, dimt, dimb, ilntrj, err
!
      real w_st0_m(LDIST_SHAPE),w_fiptx_m(LDIST_SHAPE,0:l_nk+1)
      real w_tt0_m(LDIST_SHAPE,l_nk+2)
      real w_qt0_m(LDIST_SHAPE,0:l_nk+1)
!
!     ______________________________________________________
!
      if (Vtopo_L) call handle_error(-1,'tstpdyn_ad','Vtopo_L not done')
!
      if (Lun_debug_L) write(Lun_out,1000)
!
!     Recover TRAJ predictive variables 
!     ---------------------------------
      call v4d_rwtraj (2) 
!
!     Calculate (Orh_icn=Schm_itcn) or Recover TRAJ RHS
!     -------------------------------------------------
      call rhs_tr 
!
!     Recover TRAJ Positions TH
!     -------------------------
      IF (.FALSE.) call v4d_rwtraj (3)
!
!     Recover TRAJ Winds TH
!     ---------------------
      IF (.TRUE.) call v4d_rwtraj (4)
!
!     Recover TRAJ SL Advection
!     -------------------------
!!!   call itf_adx_main_tr (F_fnitraj)
!
      call pre_tr ()
!
      dim = (l_maxx-l_minx+1)*(l_maxy-l_miny+1)*l_nk
      dimb= (l_maxx-l_minx+1)*(l_maxy-l_miny+1)
      dimt= (l_maxx-l_minx+1)*(l_maxy-l_miny+1)*(l_nk+1)
      call hpalloc (nl_m_u_, dim, err,1)
      call hpalloc (nl_m_v_, dim, err,1)
      call hpalloc (nl_m_t_, dimt,err,1)
      call hpalloc (nl_m_c_, dim, err,1)
      call hpalloc (nl_m_f_, dimt,err,1)
      call hpalloc (nl_m_b_, dimb,err,1)
      nl_m_w_ = 0
      if ( .not. Schm_hydro_L ) then
         call hpalloc (nl_m_w_, dimt, err,1)
      endif
!
      if (Lun_debug_L) write (Lun_out,1005) Schm_itnlh
!
!     ADJ
!     ---
      dim = (l_maxx-l_minx+1)*(l_maxy-l_miny+1)*l_nk
      dimt= (l_maxx-l_minx+1)*(l_maxy-l_miny+1)*(l_nk+1)
      call hpalloc (nl_u_, dim, err,1)
      call hpalloc (nl_v_, dim, err,1)
      call hpalloc (nl_t_, dimt,err,1)
      call hpalloc (nl_c_, dim, err,1)
      call hpalloc (nl_f_, dimt, err,1)
      call hpalloc (nl_b_, dimb,err,1)
      nl_w_ = 0
      if ( .not. Schm_hydro_L ) then
         call hpalloc (nl_w_, dimt, err,1)
      endif
!
!     Zero adjoint variables
!     ----------------------
      nl_u = 0.
      nl_v = 0.
      nl_c = 0.
      nl_t = 0.
      nl_f = 0.
      nl_b = 0.
      if (.not. Schm_hydro_L) then
          nl_w = 0.
      endif
!
      do 100 iln=Schm_itnlh,1,-1
!
         ilntrj = 1
!
         if (Orh_icn.ne.1) then
!
!           Recover TRAJ modified by BAC at previous Orh_icn 
!           ------------------------------------------------
            call v4d_rwtraj (7)
!
         else
!
            call frstgss_tr
!
         endif
!
         if (iln.gt.1) then
!
            do ilntrj=1,iln-1
!
               call nli_tr ()
!
!              Recover TRAJ requested to build BAC_TR
!              --------------------------------------
               V4dg_iln = ilntrj
               call v4d_rwtraj (8)
!
               call bac_tr ( ilntrj, Schm_itnlh )
!
            enddo
!
         endif
!
!        Store TRAJ in WORK_TRAJ for NLI_AD
!        ----------------------------------
         gmmstat = gmm_get(gmmk_st0_m_s,st0_m,meta2d)
         if (GMM_IS_ERROR(gmmstat)) print *,'tstpdyn_ad ERROR at gmm_get(st0_m)'
         gmmstat = gmm_get(gmmk_fiptx_m_s,fiptx_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'tstpdyn_ad ERROR at gmm_get(fiptx_m)'
         gmmstat = gmm_get(gmmk_tt0_m_s,tt0_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'tstpdyn_ad ERROR at gmm_get(tt0_m)'
!
         if (.not. Schm_hydro_L) then
             gmmstat = gmm_get(gmmk_qt0_m_s,qt0_m,meta3d)
             if (GMM_IS_ERROR(gmmstat)) print *,'tstpdyn_ad ERROR at gmm_get(qt0_m)'
         endif
!
         w_st0_m   = st0_m
         w_fiptx_m = fiptx_m
         w_tt0_m   = tt0_m
         if (.not. Schm_hydro_L) w_qt0_m = qt0_m
!
!        ----------------------------------
!
         call nli_tr ()
!
!        Recover TRAJ requested during BAC_AD
!        ------------------------------------
         V4dg_iln = iln
         call v4d_rwtraj (9)
!
!        --------------
!        END TRAJECTORY
!        --------------
         call bac_ad ( iln, Schm_itnlh )
!
         call sol_main_ad (iln)
!
!        Recover TRAJ from WORK_TRAJ for NLI_AD
!        --------------------------------------
         gmmstat = gmm_get(gmmk_st0_m_s,st0_m,meta2d)
         if (GMM_IS_ERROR(gmmstat)) print *,'tstpdyn_ad ERROR at gmm_get(st0_m)'
         gmmstat = gmm_get(gmmk_fiptx_m_s,fiptx_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'tstpdyn_ad ERROR at gmm_get(fiptx_m)'
         gmmstat = gmm_get(gmmk_tt0_m_s,tt0_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'tstpdyn_ad ERROR at gmm_get(tt0_m)'
!
         if (.not. Schm_hydro_L) then
             gmmstat = gmm_get(gmmk_qt0_m_s,qt0_m,meta3d)
             if (GMM_IS_ERROR(gmmstat)) print *,'tstpdyn_ad ERROR at gmm_get(qt0_m)'
         endif
!
         st0_m   = w_st0_m
         fiptx_m = w_fiptx_m
         tt0_m   = w_tt0_m
         if (.not. Schm_hydro_L) qt0_m = w_qt0_m
!
!        --------------------------------------
!
         call nli_ad ()
!
  100 continue
!
!     TRAJECTORY
!     ----------
      call hpdeallc(nl_m_u_, err,1)
      call hpdeallc(nl_m_v_, err,1)
      call hpdeallc(nl_m_t_, err,1)
      call hpdeallc(nl_m_c_, err,1)
      call hpdeallc(nl_m_f_, err,1)
      call hpdeallc(nl_m_b_, err,1)
      if ( .not. Schm_hydro_L ) then
         call hpdeallc(nl_m_w_, err,1)
      endif
!
!     ADJ
!     ---
      call hpdeallc(nl_u_, err,1)
      call hpdeallc(nl_v_, err,1)
      call hpdeallc(nl_t_, err,1)
      call hpdeallc(nl_c_, err,1)
      call hpdeallc(nl_f_, err,1)
      call hpdeallc(nl_b_, err,1)
      if ( .not. Schm_hydro_L ) then
         call hpdeallc(nl_w_, err,1)
      endif
!
      call pre_ad ()
!
!     ADJ of
!     SL Advection
!     ------------
!!!   call itf_adx_main_ad (F_fnitraj)
!
!     ADJ of
!     Compute the average of the t1 and t0 winds (uth,vth,zdth)
!     ---------------------------------------------------------
      call wndth_ad ()
!
!     ADJ of
!     Compute RHS
!
      if ( Orh_icn .eq. 1 ) call rhs_ad ()
!
!     ---------------------------------------------------------------
!
 1000 format( &
       3X,'ADJ of PERFORM A DYNAMICAL STEP: (S/R TSTPDYN_AD)', &
      /3X,'=================================================',/)
!
 1005 format( &
      3X,'ADJ of ITERATING SCHM_ITNLH=',I3,' TIMES TO SOLVE NON-LINEAR ', &
         'HELMHOLTZ PROBLEM',/)
!
      return
      end
