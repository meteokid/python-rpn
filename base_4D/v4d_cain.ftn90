!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r v4d_cain - Canonical injection
!
#include "model_macros_f.h"
!
      subroutine v4d_cain (Ndim,F_px)
!
      implicit none
#include <arch_specific.hf>
!
      integer Ndim
      real F_px(Ndim)
!
!author M.Tanguay
!
!revision
! v2_10 - Tanguay M.        - initial MPI version
!                             (based on CAIN of IFS/ARPEGE)
! v2_31 - Tanguay M.        - adapt for tracers in tr3d  
! v3_03 - Tanguay M.        - Adjoint NoHyd configuration
! v4_04 - Tanguay M.        - Staggered version TL/AD 
! v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
! v4_30 - Tanguay M.        - Revision
!
!object
!     see id section
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! Ndim         I                   Dimension of F_px  
! F_px         I                   Control variable 
!----------------------------------------------------------------
!
!implicits
#include "gmm.hf"
#include "glb_ld.cdk"
#include "lun.cdk"
#include "vt1.cdk"
#include "tr3d.cdk"
!
      type(gmm_metadata) :: meta2d,meta3d
      integer :: gmmstat
      real, pointer, dimension(:,:,:) :: tr1
      integer i,j,k,n,m
!
!     Get fields in memory
!     --------------------
      gmmstat = gmm_get(gmmk_ut1_s,ut1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_cain ERROR at gmm_get(ut1)'
      gmmstat = gmm_get(gmmk_vt1_s,vt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_cain ERROR at gmm_get(vt1)'
      gmmstat = gmm_get(gmmk_tt1_s,tt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_cain ERROR at gmm_get(tt1)'
      gmmstat = gmm_get(gmmk_st1_s,st1,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_cain ERROR at gmm_get(st1)'
!     --------------------
!
      m = 0
      do k=1,l_nk+1
      do j=1,l_nj
      do i=1,l_niu
         m = m+1
         ut1(i,j,k) = F_px(m)
      end do
      end do
      end do
!
      do k=1,l_nk+1
      do j=1,l_njv
      do i=1,l_ni
         m = m+1
         vt1(i,j,k) = F_px(m)
      end do
      end do
      end do
!
      do k=1,l_nk+2
      do j=1,l_nj
      do i=1,l_ni
         m = m+1
         tt1(i,j,k) = F_px(m)
      end do
      end do
      end do
!
      do j=1,l_nj
      do i=1,l_ni
         m = m+1
         st1(i,j) = F_px(m)
      end do
      end do
!
      do n=1,Tr3d_ntr
!
         gmmstat = gmm_get('TR/'//trim(Tr3d_name_S(n))//':P',tr1,meta3d)
!
         do k=1,l_nk+2
         do j=1,l_nj
         do i=1,l_ni
            m = m+1
            tr1(i,j,k) = F_px(m) 
         end do
         end do
         end do
!
      enddo
!     ______________________________________________________
!
      if(m.ne.Ndim) call handle_error(-1,'v4d_cain','m.ne.Ndim')
!     ______________________________________________________
!
      return
      end
