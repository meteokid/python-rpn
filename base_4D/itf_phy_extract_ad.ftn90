!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r itf_phy_extract - Fill the slice workspace variable for the physics
!
#include "model_macros_f.h"
!
      subroutine itf_phy_extract_ad (F_busvol, F_jdo, nk)
      implicit none
!
      integer F_jdo, nk
      real F_busvol(*)
  !
  !author
  !     Lubos Spacek    - Nov 2010 
  !
  !revision
  ! v4_20 - Spacek, L.       - Initial revision
  !
  !Object
  !	Fill the slice workspace variable for the physics.
  !
#include "glb_ld.cdk"
#include "itf_phy_buses.cdk"
!
!notes
!
!!!   integer i, j, k, n, ii, indx, soit,lght,indx_n,cnt
      integer n,cnt,offbo,offbb,i, j, k, ii, indx
!*
!     ---------------------------------------------------------------
!
      cnt = 0
      j   = F_jdo 

      do n=1,p_bvol_top
         if (volnm(n)(1:5) .eq. 'PHYTD') then
            cnt = cnt + 1
!!!         call getindx (volnm(n),  'V', indx_n, lght, soit)
            do k= 1, Nk
            do i= 1, p_ni
               indx = (k-1)*p_ni+i-1
               ii   = i + p_offi
!!!            F_busvol(indx_n + indx) = F_busvol(indx_n + indx) +          &
!!!                                      phy_tend(ii,F_jdo, k,cnt)
               F_busvol(phy_idxtdy(cnt) + indx) = F_busvol(phy_idxtdy(cnt) + indx) +          &
                                                  phy_tend(ii,F_jdo, k,cnt)
               phy_tend(ii,F_jdo, k,cnt) = 0.0
            end do
            end do
         endif
       end do
!
!     ---------------------------------------------------------------
!
      return
    end subroutine itf_phy_extract_ad
