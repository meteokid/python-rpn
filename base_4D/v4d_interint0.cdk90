!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

      module v4d_interint0
      interface
      subroutine v4d_scint0 (fldscint,px,py,npts,fldsc,ax,ay,cx,cy,wx_8, & 
                             i1,i2,j1,j2,nk,grtypi,degree,var)
!
      use v4d_interzone
!
      implicit none
!
      integer npts,i1,i2,j1,j2,nk,degree
!
      real,   pointer, dimension(:,:) :: fldscint
      real,   pointer, dimension(:)   :: px,py
!
      real fldsc(i1:i2,j1:j2,nk),ax(i1:i2),ay(j1:j2),cx(i1:i2,6),cy(j1:j2,6)
!
      character*2 var
!
      character*1 grtypi
!
      real*8 wx_8(*)
!
      end subroutine v4d_scint0 
!
      subroutine v4d_uvint0 (flduint,fldvint,px,py,npts,fldu,fldv,ax,ay,cx,cy, &
                             wx_8,cox_8,six_8,siy_8,i1,i2,j1,j2,nk,grtypi,degree,var)
!
      use v4d_interzone
!
      implicit none
!
      integer npts,i1,i2,j1,j2,nk,degree
!
      real,   pointer, dimension(:,:) :: flduint,fldvint
      real,   pointer, dimension(:)   :: px,py
!
      real fldu(i1:i2,j1:j2,nk),fldv(i1:i2,j1:j2,nk), &
           ax(i1:i2),ay(j1:j2),cx(i1:i2,6),cy(j1:j2,6)
!
      character*2 var
!
      character*1 grtypi
!
      real*8 wx_8(*),cox_8(*),six_8(*),siy_8(*)
!
      end subroutine v4d_uvint0 
!
      subroutine v4d_scint0_ad (fldscint,px,py,npts,fldsc,ax,ay,cx,cy,wx_8, &
                                i1,i2,j1,j2,nk,grtypi,degree,var)
!
      use v4d_interzone
!
      implicit none
!
      integer npts,i1,i2,j1,j2,nk,degree
!
      real,   pointer, dimension(:,:) :: fldscint
      real,   pointer, dimension(:)   :: px,py
!
      real fldsc(i1:i2,j1:j2,nk),ax(i1:i2),ay(j1:j2),cx(i1:i2,6),cy(j1:j2,6)
!
      character*2 var
!
      character*1 grtypi
!
      real*8 wx_8(*)
!
      end subroutine v4d_scint0_ad 
!
      subroutine v4d_uvint0_ad (flduint,fldvint,px,py,npts,fldu,fldv,ax,ay,cx,cy, &
                                wx_8,cox_8,six_8,siy_8,i1,i2,j1,j2,nk,            &
                                grtypi,degree,var)
!
      use v4d_interzone
!
      implicit none
!
      integer npts,i1,i2,j1,j2,nk,degree
!
      real,   pointer, dimension(:,:) :: flduint,fldvint
      real,   pointer, dimension(:)   :: px,py
!
      real fldu(i1:i2,j1:j2,nk),fldv(i1:i2,j1:j2,nk), &
           ax(i1:i2),ay(j1:j2),cx(i1:i2,6),cy(j1:j2,6)
!
      character*2 var
!
      character*1 grtypi
!
      real*8 wx_8(*),cox_8(*),six_8(*),siy_8(*)
!
      end subroutine v4d_uvint0_ad 
!
      end interface
      end module v4d_interint0
