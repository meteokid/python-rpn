!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r v4d_rwfld - Read (Write) a specific field (HEART only) from (on) WA file 
!
#include "model_macros_f.h"
!
      subroutine v4d_rwfld (F_field,DIST_DIM,Nk, &
                            F_addr,F_diag_L,F_name_S,F_adjoint_L,F_diff,F_icode)
!
      implicit none
#include <arch_specific.hf>
!
      integer DIST_DIM,Nk,F_icode
      real F_field(DIST_SHAPE,Nk)
!
      integer F_addr,F_diff
      logical F_diag_L,F_adjoint_L
      character*8 F_name_S
!
!author M.Tanguay
!
!revision
! v2_10 - Tanguay M.        - initial MPI version
! v2_31 - Tanguay M.        - change parameters of v4d_rwfld 
!                           - WA files incore 
! v3_00 - Tanguay M         - incore option for Conversion WA file 
! v3_00 - Laroche S.        - adapted for simplified physics
! v3_02 - Buehner M.        - added section for ref state file for NLMX event (SV job)
! v3_11 - Tanguay M.        - Diagnostics 
! v3_21 - Tanguay M.        - Revision Openmp
! v3_30 - Tanguay M.        - Validation for LAM version 
! v4_04 - Tanguay M.        - Staggered version TL/AD 
! v4_40 - Tanguay M.        - Revision TL/AD
!
!object
!     see id section
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! F_field      I/O                 Field with HALO
! DIST_DIM     I                   Horizontal dim. of F_field
! Nk           I                   Vertical   dim. of F
! F_addr       I/O                 Position in WA file
! F_diag_L     I                   Give diagnostics if TRUE 
! F_name_S     I                   Name of the field
! F_adjoint_L  I                   TRUE if adjoint run
! F_diff       I                   To be subtracted from position if adjoint run 
! F_icode      I                   If F_icode.GT.0 -Transfer F_field (HEART only) in F_work
!                                                  -Write F_work in WA file 
!                                  If F_icode.LE.0 -Read F_work from WA file
!                                                  -Transfer F_work in F_field (HEART only)
!----------------------------------------------------------------
!
!implicits
#include "glb_ld.cdk"
#include "lun.cdk"
      include "v4dg.inc"
!
      integer i,j,k,ind
!
      if (F_icode.gt.0) then
!
!         Write F_field INCORE
!         --------------------
             if(V4dg_trsize.lt.F_addr + l_ni*l_nj*Nk - 1) then
                write(*,*)V4dg_trsize,F_addr,l_ni,l_nj,Nk
                if(F_diag_L) write(Lun_out,*) & 
                            'WA FILE: wawrit ','Waf_adr = ',F_addr,'for ',F_name_S
                call handle_error(-1,'v4d_rwfld','v4d_rwfld ARRAY TRINCORE TOO SMALL')
             endif
!
!$omp parallel do
             do k=1,Nk
             do j=1,l_nj
             do i=1,l_ni
                ind = l_ni*l_nj*(k-1) + l_ni*(j-1)+i
                V4dg_trincore(F_addr + ind - 1) = F_field(i,j,k) 
             enddo
             enddo
             enddo
!$omp end parallel do
!
!         Diagnostics
!         -----------
          if(F_diag_L) write(Lun_out,*) & 
                       'WA FILE: wawrit ','Waf_adr = ',F_addr,'for ',F_name_S
!
!         Update address
!         --------------
          F_addr = F_addr + l_ni*l_nj*Nk
!
      else
!
!         Read F_field INCORE
!         -------------------
!$omp parallel do
             do k=1,Nk
             do j=1,l_nj
             do i=1,l_ni
                ind = l_ni*l_nj*(k-1) + l_ni*(j-1)+i
                F_field(i,j,k) = V4dg_trincore(F_addr + ind - 1)
             enddo
             enddo
             enddo
!$omp end parallel do
!
!         Diagnostics
!         -----------
          if(F_diag_L) write(Lun_out,*) &
                       'WA FILE: waread ','Waf_adr = ',F_addr,'for ',F_name_S
!
!         Update address
!         --------------
          if(     F_adjoint_L) F_addr = F_addr - F_diff 
          if(.not.F_adjoint_L) F_addr = F_addr + l_ni*l_nj*Nk 
!
      endif
!
!     ---------------------------------------------------------------
!
      return
      end
