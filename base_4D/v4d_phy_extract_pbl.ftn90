!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r itf_phy_extract_pbl - Save the pbl trajectory
!
#include "model_macros_f.h"
!
      subroutine v4d_phy_extract_pbl (F_busvol, F_jdo, F_step, nk)
      implicit none
!
      integer F_jdo, F_step, nk
      real F_busvol(*) 
!
!author 
!     Lubos Spacek - September 2009
!
!revision
! v4_12 - Spacek L.  - initial GMM version
!
!object
!	Save the pbl variables for TL/AD
!
#include "glb_ld.cdk"
#include "itf_phy_buses.cdk"
   include "v4dg.inc"
!
!notes
!
      integer i, k, n, ii, indx, index, numtr, lght, soit
      integer km,kt,bm,bt
      real con
!
!     ---------------------------------------------------------------
!
      if(.not.(V4dg_conf.ne.0 .and. V4dg_oktr_L.and.  &
               V4dg_phy_pbl.eq.2 .and. F_step.gt.0))return
!
      do n=1,p_bvol_top
       if (volnm(n)(1:2).eq.'KM')call getindx2(volnm(n),'VOL',km,lght,soit)
       if (volnm(n)(1:2).eq.'KT')call getindx2(volnm(n),'VOL',kt,lght,soit)
       if (volnm(n)(1:2).eq.'BM')call getindx2(volnm(n),'VOL',bm,lght,soit)
       if (volnm(n)(1:2).eq.'KT')call getindx2(volnm(n),'VOL',bt,lght,soit)
      end do

         numtr=22
         index=0;     call v4d_wtrnch                                       &
        (F_busvol,km,numtr,index,F_jdo,p_offi,p_ni,nk)
         index=nk;    call v4d_wtrnch                                       &
        (F_busvol,kt,numtr,index,F_jdo,p_offi,p_ni,nk)
         index=nk+1;  call v4d_wtrnch                                       &
        (F_busvol,bm,numtr,index,F_jdo,p_offi,p_ni,1)
         index=nk+2;  call v4d_wtrnch                                       &
        (F_busvol,bt,numtr,index,F_jdo,p_offi,p_ni,1)
!
!     ---------------------------------------------------------------
!
      return
      end

