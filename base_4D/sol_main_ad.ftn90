!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r sol_main_ad - ADJ of sol_main 
!
#include "model_macros_f.h"
!
      subroutine sol_main_ad (iln)
!
      implicit none
!
      integer iln
!
!author M.Tanguay
!
!revision
! v2_10 - Tanguay M.        - initial MPI version
! v2_21 - Tanguay M.        - reduce standard output as in model 
! v2_31 - Tanguay M.        - adapt to f90 native dynamic memory allocation 
! v3_11 - Tanguay M.        - AIXport+Opti+OpenMP for TLM-ADJ
! v3_21 - Tanguay M.        - Revision Openmp
! v3_30 - Tanguay M.        - add parameter iln in sol_main
! v4_04 - Tanguay M.        - Staggered version TL/AD 
! v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
! v4_30 - Tanguay M.        - Revision
!
!object
!     see id section
!	
!implicits
#include "gmm.hf"
#include "glb_ld.cdk"
#include "lam.cdk"
#include "ldnh.cdk"
#include "lun.cdk"
#include "vtx.cdk"
#include "rhsc.cdk"
#include "trp.cdk"
#include "ptopo.cdk"
#include "lctl.cdk"
#include "fft.cdk"
!
      type(gmm_metadata) :: mymeta
      integer dim,istat
!      
      real*8, dimension ((ldnh_maxx-ldnh_minx+1)*(ldnh_maxy-ldnh_miny+1)*l_nk) :: rhs,sol,wk1,wk2
      real*8 fdg1((ldnh_maxy -ldnh_miny +1)*(trp_12smax-trp_12smin+1)*(G_ni+Ptopo_npex))
      real*8 fdg2((trp_12smax-trp_12smin+1)*(trp_22max -trp_22min +1)*(G_nj+Ptopo_npey))
      real*8 fdwfft((ldnh_maxy -ldnh_miny +1)*(trp_12smax-trp_12smin+1)*(G_ni+2+Ptopo_npex))
!
      real*8, parameter :: ZERO_8 = 0.0
!
!     ---------------------------------------------------------------
      if (.not.Fft_fast_L) call handle_error(-1,'sol_main_ad','.not.Fft_fast_L NOT DONE')
!
      if (Lun_debug_L) write(Lun_out,1000)
!
!     Zero adjoint variables
!     ----------------------
      rhs    = 0.
      sol    = 0.
      wk1    = 0.
      wk2    = 0.
      fdg1   = 0.
      fdg2   = 0.
      fdwfft = 0.
!
!     Get needed fields in memory
!     ---------------------------
      istat = gmm_get(gmmk_rhsp_s,rhsp,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'sol_main_ad ERROR at gmm_get(rhsp)'
      istat = gmm_get(gmmk_fiptx_s,fiptx,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'sol_main_ad ERROR at gmm_get(fiptx)'
!
! ADJ of
! Transfering sol (real*8 without halo) into fiptx (real*4 with halo)
! -------------------------------------------------------------------
      call sol_trsf_ad (sol,fiptx(l_minx,l_miny,1), &
                        ldnh_minx,ldnh_maxx,ldnh_miny,ldnh_maxy, &
                        LDIST_DIM,l_nk,-1)
!
! ADJ of
! Computing elliptic problem solution (sol)
! ----------------------------------------- 
      call sol_hcr_ad  (sol,rhs,wk1,wk2,fdg1,fdg2,fdwfft,iln, &
                        ldnh_minx,ldnh_maxx, &
                        ldnh_miny,ldnh_maxy,ldnh_ni,ldnh_nj,l_nk)
!
! ADJ of
! Transfering rhsp (real*4 with halo) into rhs (real*8 without halo)
! ------------------------------------------------------------------
      call sol_trsf_ad (rhs,rhsp,ldnh_minx,ldnh_maxx,ldnh_miny,ldnh_maxy, &
                        LDIST_DIM,l_nk, 1)
!
!*********************************************************************
!
 1000 format( &
      5X,' ADJ of SOLVING LINEAR HELMHOLTZ PROBLEM: (S/R SOL_MAIN_AD)')
!
      return
      end
