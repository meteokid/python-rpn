!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r v4d_cainin_ad - ADJ of v4d_cainin
!
#include "model_macros_f.h"
!
      subroutine v4d_cainin_ad (Ndim,F_px)
!
      implicit none
!
      integer Ndim
      real F_px(Ndim)
!
!author M.Tanguay
!
!revision
! v2_10 - Tanguay M.        - initial MPI version
!                             (Based on CAININAD of IFS/ARPEGE)
! v2_31 - Tanguay M.        - adapt for tracers in tr3d  
! v3_03 - Tanguay M.        - Adjoint NoHyd configuration
! v4_04 - Tanguay M.        - Staggered version TL/AD 
! v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
! v4_40 - Tanguay M.        - Revision TL/AD
!
!object
!     see id section
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! Ndim         I                   Dimension of F_px
! F_px         I/O                 Control variable
!----------------------------------------------------------------
!
!implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "lun.cdk"
#include "vt1.cdk"
#include "v4dc.cdk"
#include "tr3d.cdk"
!
      real, pointer, dimension(:,:,:) :: tr1
      integer i,j,k,n,m
!
!     Get fields in memory
!     --------------------
      gmmstat = gmm_get(gmmk_ut1_s,ut1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_cainin_ad ERROR at gmm_get(ut1)'
      gmmstat = gmm_get(gmmk_vt1_s,vt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_cainin_ad ERROR at gmm_get(vt1)'
      gmmstat = gmm_get(gmmk_tt1_s,tt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_cainin_ad ERROR at gmm_get(tt1)'
      gmmstat = gmm_get(gmmk_st1_s,st1,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_cainin_ad ERROR at gmm_get(st1)'
!     --------------------
!
!     Change the metric
!     -----------------
      do m = 1,Ndim
         F_px(m) = F_px(m)*V4dc_scalp(m)
      end do
!
      m = 0
      do k=1,l_nk+1
      do j=1,l_nj
      do i=1,l_niu
         m = m+1
         ut1(i,j,k) = F_px(m) + ut1(i,j,k)
         F_px(m)    = 0.
      end do
      end do
      end do
!
      do k=1,l_nk+1
      do j=1,l_njv
      do i=1,l_ni
         m = m+1
         vt1(i,j,k) = F_px(m) + vt1(i,j,k)
         F_px(m)    = 0.
      end do
      end do
      end do
!
      do k=1,l_nk+2
      do j=1,l_nj
      do i=1,l_ni
         m = m+1
         tt1(i,j,k)  = F_px(m) + tt1(i,j,k)
         F_px(m)     = 0.
      end do
      end do
      end do
!
      do j=1,l_nj
      do i=1,l_ni
         m = m+1
         st1(i,j) = F_px(m) + st1(i,j)
         F_px(m)  = 0.
      end do
      end do
!
      do n=1,Tr3d_ntr
!
         gmmstat = gmm_get('TR/'//trim(Tr3d_name_S(n))//':P',tr1,meta3d)
!
         do k=1,l_nk+2
         do j=1,l_nj
         do i=1,l_ni
            m = m+1
            tr1(i,j,k) = F_px(m) + tr1(i,j,k)
            F_px(m)    = 0.
         end do
         end do
         end do
!
      enddo
!
!     ______________________________________________________
!
      if(m.ne.Ndim) call handle_error(-1,'v4d_cainin_ad','m.ne.Ndim')
!     ______________________________________________________
!
      return
      end
