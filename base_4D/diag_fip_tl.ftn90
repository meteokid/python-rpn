!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r diag_fip_tl - TLM of diag_fip 
!
#include "model_macros_f.h"
!
      subroutine diag_fip_tl(F_fip  ,F_s  ,F_t  ,F_q, &
                             F_fip_m,F_s_m,F_t_m,F_q_m,F_fis,DIST_DIM,nk)
!     
      implicit none
#include <arch_specific.hf>
!     
      integer DIST_DIM,nk
      real F_fip(DIST_SHAPE,0:Nk+1),F_q(DIST_SHAPE,0:Nk+1)
      real F_s  (DIST_SHAPE)       ,F_t(DIST_SHAPE,Nk+2)
      real F_fis(DIST_SHAPE)
!
      real F_fip_m(DIST_SHAPE,0:Nk+1),F_q_m(DIST_SHAPE,0:Nk+1)
      real F_s_m  (DIST_SHAPE)       ,F_t_m(DIST_SHAPE,Nk+2)
!
!author M.Tanguay
!
!revision
! v4_04 - Tanguay M.        - initial MPI version
! v4_04 - Tanguay M.        - Staggered version TL/AD
! v4_12 - Tanguay M.        - OPENMP TL/AD
! v4_40 - Tanguay M.        - Revision TL/AD
!
!object
!       see id section
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! F_fip        O    - perturbation hydrostatic geopotential height
!                     Note the virtual levels!
! F_s          I    - log(pis/pistars)
! F_t          I    - temperature
! F_fis        I    - surface geopotential height
!
!implicits
#include "glb_ld.cdk"
#include "cstv.cdk"
#include "ver.cdk"
#include "schm.cdk"
!     
!*
      integer i,j,k
      real*8  ONE_8,yyy_8,qbar_8
      real*8, dimension(l_ni,l_nj):: xtmp_8, ytmp_8, xtmp_m_8, ytmp_m_8
!
      parameter( ONE_8 = 1.d0 )
!     ---------------------------------------------------------------
!
      if (.not.Schm_hydro_L) call handle_error(-1,'diag_fip_tl','.not.Schm_hydro_L: need to be revised')
!
!$omp parallel private (qbar_8,yyy_8,xtmp_8,ytmp_8,xtmp_m_8,ytmp_m_8)
!
!$omp do 
      do j=1,l_nj
      do i=1,l_ni

!        TRAJECTORY
!        ----------
         F_fip_m(i,j,G_nk+1)=F_fis(i,j)
!
!        TLM
!        ---
         F_fip(i,j,G_nk+1)=0.0
!
      end do
      end do
!$omp enddo
!
!     Note that index on F_fip goes to zero.
      do k= G_nk+1,1,-1
         !if(.not.Schm_hydro_L.and.Schm_pior_L) then
         if(.not.Schm_hydro_L) then
!$omp do
            do j=1,l_nj
            do i=1,l_ni
               qbar_8=(Ver_wp_8%t(k)*F_q(i,j,k)+Ver_wm_8%t(k)*F_q(i,j,k-1))
               xtmp_8(i,j)=-qbar_8
            end do
            end do
!$omp enddo
            call vexp(ytmp_8,xtmp_8,l_ni*l_nj)
!$omp do
            do j=1,l_nj
            do i=1,l_ni
               xtmp_8(i,j)=ytmp_8(i,j)*(ONE_8+Ver_dbdz_8%t(k)*F_s(i,j))
            end do
            end do
!$omp enddo
         else
!$omp do
            do j=1,l_nj
            do i=1,l_ni
!
!              TRAJECTORY
!              ----------
               xtmp_m_8(i,j)=ONE_8+Ver_dbdz_8%t(k)*F_s_m(i,j)
!
!              TLM
!              ---
               xtmp_8(i,j)=Ver_dbdz_8%t(k)*F_s(i,j)
!
            end do
            end do
!$omp enddo
         endif
         yyy_8=Cstv_RTstr_8*Ver_dz_8%t(k)/Cstv_Tstr_8
!$omp do
         do j=1,l_nj
         do i=1,l_ni
!
!           TLM
!           ---
            F_fip(i,j,k-1)=F_fip(i,j,k)+yyy_8*(F_t_m(i,j,k)*xtmp_8(i,j)+F_t(i,j,k)*xtmp_m_8(i,j))
!
!           TRAJECTORY
!           ----------
            F_fip_m(i,j,k-1)=F_fip_m(i,j,k)+yyy_8*(F_t_m(i,j,k)*xtmp_m_8(i,j)-Cstv_Tstr_8)
!
         end do
         end do
!$omp enddo
      end do
!
!$omp end parallel
!
!     ---------------------------------------------------------------
!
      return
      end
