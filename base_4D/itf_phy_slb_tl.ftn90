!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!** s/p itf_phy_slb
!!!Subroutine itf_phy_slb_tl ( geofld ,Phy_busdyn3D ,Phy_busper3D ,Phy_busvol3D ,&
!!!Subroutine itf_phy_slb_tl ( geofld ,    busdyn3D ,    busper3D ,    busvol3D ,&
   Subroutine itf_phy_slb_tl ( busent3D,   busdyn3D ,    busper3D ,    busvol3D ,&
                     esiz,dsiz,fsiz,vsiz,dt,kount,ni,nj,nk,pslic )
  implicit none
#include <arch_specific.hf>

  Integer esiz,dsiz,fsiz,vsiz,kount,ni,nj,nk,pslic,nthreads
!!Real, Dimension(:), Pointer ::  geofld, Phy_busdyn3D, Phy_busper3D, &
!!                                Phy_busvol3D
  Real, Dimension(:,:), Pointer:: busent3D, busdyn3D, busper3D, busvol3D
!!Real, Dimension(:,:), Pointer:: busdyn3D, busper3D, busvol3D
!!Real, Dimension(:  ), Pointer:: geofld
  Real dt
  !
  !author
  !     Lubos Spacek    - Nov 2010 
  !
  !revision
  ! v4_20 - Spacek, L.       - Initial revision
  ! v4_40 - Tanguay,M.       - BUSDYN_3d
  !
  !Object
  !          The main physics subroutine
  !
  !Arguments
  !
  !          - Input -
  ! Geofld        - entry    input field
  ! Phy_busdyn3D  - dynamics input field
  !
  !          - Input/Output -
  ! Phy_busper3D  - historic variables for the physics
  !
  !          - Output -
  ! Phy_busvol3D  - physics tendencies and other output fields from the physics
  !
  !          - Input -
  ! esiz     dimension of e
  ! dsiz     dimension of d
  ! fsiz     dimension of f
  ! vsiz     dimension of v
  ! dt       timestep (sec.)
  ! kount    timestep number
  ! ni       horizontal running length
  ! nj       number of slices
  ! nk       vertical dimension


  Integer jdo, ithread, ione
!!real busent, busdyn, busper, busvol, sltime
!!real busent, sltime
  real         sltime
!!pointer (pabusent,busent(*))
!!pointer (pabusdyn,busdyn(*))
!!pointer (pabusper,busper(*))
!!pointer (pabusvol,busvol(*))

  !

  ithread=1

100 Continue
!$omp critical
  pslic= pslic+1
  jdo  = pslic
!$omp end critical
  If(jdo>nj)Return

!!if(kount==0) pabusent = loc (      geofld((jdo-1)*esiz+1))

!!!            pabusdyn = loc (Phy_busdyn3D((jdo-1)*dsiz+1))
!!!            pabusper = loc (Phy_busper3D((jdo-1)*fsiz+1))
!!!            pabusvol = loc (Phy_busvol3D((jdo-1)*vsiz+1))

!!!    call lin_phyexe1_tl (busent ,busdyn ,busper ,busvol , &
!!!    call lin_phyexe1_tl (busent ,         busdyn3D(1,jdo) ,busper3D(1,jdo) ,busvol3D(1,jdo) , &
       call lin_phyexe1_tl (busent3D(1,jdo) ,busdyn3D(1,jdo) ,busper3D(1,jdo) ,busvol3D(1,jdo) , &
                            esiz, dsiz, fsiz, vsiz, &
                            dt, jdo, kount, ithread, ni, nk)
 Goto 100

End Subroutine itf_phy_slb_tl
