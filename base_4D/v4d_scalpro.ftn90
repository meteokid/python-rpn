!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r v4d_scalpro - Compute distributed inner product <F_px,F_py> 
!
#include "model_macros_f.h"
!
      subroutine v4d_scalpro (Ndim,F_px,F_py,F_psc_8)
!
      implicit none
!
      integer Ndim
      real F_px(Ndim), F_py(Ndim)
      real*8 F_psc_8
!
!author M.Tanguay
!
!revision
! v2_10 - Tanguay M.        - initial MPI version
! v2_21 - Desgagne M.       - rpn_comm stooge for MPI
! v2_31 - Tanguay M.        - adapt for tracers in tr3d  
! v3_03 - Tanguay M.        - Adjoint NoHyd configuration
! v4_04 - Tanguay M.        - Staggered version TL/AD 
! v4_40 - Tanguay M.        - Revision TL/AD
!
!object
!     see id section
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! Ndim         I                   Dimension
! F_px         I                   Control variable 1
! F_py         I                   Control variable 2
! F_psc_8      O                   Inner product 
!----------------------------------------------------------------
!
!implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "v4dc.cdk"
#include "tr3d.cdk"
!
      integer m,ierr,i,j,k,n
      real*8 plocal_8, ZERO_8
!
      parameter( ZERO_8 = 0.0 )
!
!     Computes distributed inner product 
!     ----------------------------------
      F_psc_8  = ZERO_8 
!
      m = 0
      do k = 1,l_nk+1
      do j = 1,l_nj
      do i = 1,l_niu
         m = m+1
         F_psc_8  = F_psc_8  + F_px(m)*F_py(m)*V4dc_scalp(m)
      end do
      end do
      end do
!
      do k = 1,l_nk+1
      do j = 1,l_njv
      do i = 1,l_ni
         m = m+1
         F_psc_8  = F_psc_8  + F_px(m)*F_py(m)*V4dc_scalp(m)
      end do
      end do
      end do
!
      do k=1,l_nk+2
      do j=1,l_nj
      do i=1,l_ni
         m = m+1
         F_psc_8  = F_psc_8  + F_px(m)*F_py(m)*V4dc_scalp(m)
      end do
      end do
      end do
!
      do j=1,l_nj
      do i=1,l_ni
         m = m+1
         F_psc_8  = F_psc_8  + F_px(m)*F_py(m)*V4dc_scalp(m)
      end do
      end do
!
      if (Tr3d_ntr.gt.0) then
         do n=1,Tr3d_ntr
            do k=1,l_nk+2
            do j=1,l_nj
            do i=1,l_ni
               m = m+1
               F_psc_8  = F_psc_8  + F_px(m)*F_py(m)*V4dc_scalp(m)
            end do
            end do
            end do
         end do
      endif
!     ______________________________________________________
!
      if(m.ne.Ndim) call handle_error(-1,'v4d_scalpro','m.ne.Ndim')
!     ______________________________________________________
!
      plocal_8 = F_psc_8
      F_psc_8  = ZERO_8
      call rpn_comm_Allreduce(plocal_8,F_psc_8,1,"MPI_DOUBLE_PRECISION", &
                              "MPI_SUM","grid",ierr)
!
!     ---------------------------------------------------------------
!
      return
      end
