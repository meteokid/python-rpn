!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r v4d_rwtraj_cvn - For Conversion from 3D-Var to GEM variables: Read (Write) from (on) TRAJ WA file at each time step 
!
#include "model_macros_f.h"
!
      subroutine v4d_rwtraj_cvn (numtr)
!
      use v4d_prof, only: Pr_doobs
!
      implicit none
!
      integer numtr
!
!author M.Tanguay
!
!revision
! v4_12 - Tanguay M.        - initial MPI version
! v4_12 - Tanguay M.        - Reset Communication 3D_Var-(TL/AD)
!
!object
!
!
!arguments
! Name         I/O     Description
!-------------------------------------------------------------------------
! numtr        I       Indicates which portion of TRAJECTORY to Read-Write 
!-------------------------------------------------------------------------
!
!implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "lun.cdk"
#include "lctl.cdk"
#include "vt1.cdk"
#include "vt1_m.cdk"
#include "schm.cdk"
#include "tr3d.cdk"
#include "step.cdk"
      include "v4dg.inc"
!
!     --------------------------------------------------
      integer istep, iadd 
!
      logical plpr_L,time0_L,time_L
!
      character*16 tr_name
      real, pointer, dimension(:,:,:) :: hut1,hut1_m
!     --------------------------------------------------
!
      if (.NOT.(V4dg_conf.ne.0.and.V4dg_4dvar_L)) return
!
      if (numtr.ne.40.and.numtr.ne.41) call handle_error(-1,'v4d_rwtraj_cvn','RWTRAJ_CVN numtr not DONE')
!
!     Verify if INITIAL TIME requested
!     --------------------------------
      time0_L = Lctl_step.eq.0
!
!     Verify if .NOT.INITIAL time requested
!     -------------------------------------
      time_L = Lctl_step.ne.0.and.Pr_doobs(Lctl_step).gt.0
!
      if (.NOT.(time0_L.or.time_L)) return
!
      if (Lun_debug_L.and.Lun_out.gt.0) write(Lun_out,*) 'CALL V4D_RWTRAJ_CVN with NUMTR =',numtr
!
!     Flag to trace storing and retrieving of trajectory
!     --------------------------------------------------
      plpr_L = .false.
      plpr_L = plpr_L.and.Lun_out.gt.0 
!
      istep = Lctl_step 
!
      if (numtr.eq.40.or.numtr.eq.41) then
!
!        ----------------
!        Read TRAJ Fields 
!        ----------------
         if (V4dg_rwtr.eq.0) then
!
!        Recover starting address 
!        ------------------------
         if (V4dg_ad_L) iadd = V4dg_addtab_ad(numtr,istep,1,1) 
         if (V4dg_tl_L) iadd = V4dg_addtab_tl(numtr,istep,1,1) 
!
         gmmstat = gmm_get(gmmk_tt1_m_s,tt1_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'v4d_rwtraj_cvn ERROR at gmm_get(tt1_m)'
         gmmstat = gmm_get(gmmk_st1_m_s,st1_m,meta2d)
         if (GMM_IS_ERROR(gmmstat)) print *,'v4d_rwtraj_cvn ERROR at gmm_get(st1_m)'
!
!        Load TRAJ humidity field
!        ------------------------
         tr_name = 'TRM/HU:P'
         gmmstat = gmm_get(tr_name,hut1_m,meta3d)

!        TANGENT LINEAR MODEL
!        --------------------
         if (V4dg_tl_L) then
!
            call v4d_rwfld (tt1_m,LDIST_DIM,l_nk+2, &
                            iadd,plpr_L,'TT1_M   ',V4dg_ad_L,0,-1)
!
            call v4d_rwfld (hut1_m,LDIST_DIM,l_nk+2, &
                            iadd,plpr_L,'HUT1_M  ',V4dg_ad_L,0,-1)
!
            call v4d_rwfld (st1_m,LDIST_DIM,1, &
                            iadd,plpr_L,'ST1_M   ',V4dg_ad_L,0,-1)
!
         endif
!
!        ADJOINT MODEL
!        -------------
         if (V4dg_ad_L) then
!
            call v4d_rwfld (st1_m,LDIST_DIM,1, &
                            iadd,plpr_L,'ST1_M   ',V4dg_ad_L, &
                            l_ni*l_nj*(l_nk+2)    ,-1)
!
            call v4d_rwfld (hut1_m,LDIST_DIM,l_nk+2, &
                            iadd,plpr_L,'HUT1_M  ',V4dg_ad_L, &
                            l_ni*l_nj*(l_nk+2)    ,-1)
!
            call v4d_rwfld (tt1_m,LDIST_DIM,l_nk+2, &
                            iadd,plpr_L,'TT1_M   ',V4dg_ad_L, &
                            l_ni*l_nj             ,-1)
!
         endif
!
!        -----------------
!        Write TRAJ Fields 
!        -----------------
         elseif(V4dg_rwtr.eq.1) then
!
         gmmstat = gmm_get(gmmk_tt1_s,tt1,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'v4d_rwtraj_cvn ERROR at gmm_get(tt1)'
         gmmstat = gmm_get(gmmk_st1_s,st1,meta2d)
         if (GMM_IS_ERROR(gmmstat)) print *,'v4d_rwtraj_cvn ERROR at gmm_get(st1)'
!
!        Load humidity field
!        -------------------
         tr_name = 'TR/HU:P'
         gmmstat = gmm_get(tr_name,hut1,meta3d)
!
!        Store starting TLM address
!        --------------------------
         V4dg_addtab_tl(numtr,istep,1,1) = V4dg_addtr 
         iadd                            = V4dg_addtr 
!
            call v4d_rwfld (tt1,LDIST_DIM,l_nk+2, &
                            iadd,plpr_L,'TT1     ',V4dg_ad_L,0,1)
!
            call v4d_rwfld (hut1,LDIST_DIM,l_nk+2, &
                            iadd,plpr_L,'HUT1    ',V4dg_ad_L,0,1)
!
            call v4d_rwfld (st1,LDIST_DIM,1, &
                            iadd,plpr_L,'ST1     ',V4dg_ad_L,0,1)
!
!        Store starting ADJOINT address 
!        ------------------------------
         V4dg_addtab_ad(numtr,istep,1,1) = iadd - l_ni*l_nj
         V4dg_addtr                      = iadd
!
         endif
!
      endif

      return
      end
