!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r v4d_zero_tr - Zero all TRAJECTORY VMM variables 
!
#include "model_macros_f.h"
!
      subroutine v4d_zero_tr 
!
      implicit none
!
!author M.Tanguay
!
!revision
! v2_10 - Tanguay M.        - initial MPI version
! v2_31 - Tanguay M.        - adapt ADJ for new advection code
!                           - adapt for tracers in tr3d  
! v3_03 - Tanguay M.        - Adjoint Lam and NoHyd configuration 
! v3_11 - Tanguay M.        - ADJ of digital filter 
! v3_21 - Lee V.            - removed Tr2d
! v3_30 - Tanguay M.        - Validation for LAM version 
!                           - adapt to bcs
! v4_04 - Tanguay M.        - Staggered version TL/AD 
! v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
! v4_12 - Tanguay M.        - TL/AD Open top
! v4_40 - Tanguay M.        - Revision TL/AD
!
!object
!    see id section
!
!implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "lun.cdk"
#include "glb_ld.cdk"
#include "vt0_m.cdk"
#include "vt1_m.cdk"
#include "vth_m.cdk"
#include "vtx_m.cdk"
#include "rhsc_m.cdk"
#include "orh_m.cdk"
#include "tr3d.cdk"
#include "nest_m.cdk"
#include "schm.cdk"
!
      real, pointer, dimension(:,:,:) :: tr0_m,tr1_m,ortr_m,trr_m
      integer i,j,k,n
!
      if( Lun_debug_L ) then
         write(Lun_out,fmt='(/,''V4D_ZERO_TR:Zero ALL TRAJ model variables'')')
         write(Lun_out,fmt='(  ''========================================='')')
      endif
!
!     ---------------------------
!     Zero comdeck vt0
!     ---------------------------
      gmmstat = gmm_get(gmmk_ut0_m_s,ut0_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(ut0_m)'
      gmmstat = gmm_get(gmmk_vt0_m_s,vt0_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(vt0_m)'
      gmmstat = gmm_get(gmmk_tt0_m_s,tt0_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(tt0_m)'
      gmmstat = gmm_get(gmmk_st0_m_s,st0_m,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(st0_m)'
      gmmstat = gmm_get(gmmk_zdt0_m_s,zdt0_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(zdt0_m)'
      gmmstat = gmm_get(gmmk_wt0_m_s,wt0_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(wt0_m)'
!
      if (.not. Schm_hydro_L) then
          gmmstat = gmm_get(gmmk_qt0_m_s,qt0_m,meta3d)
          if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(qt0_m)'
      endif
!
      ut0_m  = 0.
      vt0_m  = 0.
      tt0_m  = 0.
      zdt0_m = 0.
      st0_m  = 0.
      wt0_m  = 0.
!
      if (.not. Schm_hydro_L) qt0_m = 0. 
!
      do n=1,Tr3d_ntr
!
         gmmstat = gmm_get('TRM/'//trim(Tr3d_name_S(n))//':M',tr0_m,meta3d)
!
         do k=1,l_nk+2
         do j=l_miny,l_maxy
         do i=l_minx,l_maxx
            tr0_m(i,j,k) = 0.
         end do
         end do
         end do
!
      enddo
!
!     ---------------------------
!     Zero comdeck vt1
!     ---------------------------
      gmmstat = gmm_get(gmmk_ut1_m_s,ut1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(ut1_m)'
      gmmstat = gmm_get(gmmk_vt1_m_s,vt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(vt1_m)'
      gmmstat = gmm_get(gmmk_tt1_m_s,tt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(tt1_m)'
      gmmstat = gmm_get(gmmk_st1_m_s,st1_m,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(st1_m)'
      gmmstat = gmm_get(gmmk_zdt1_m_s,zdt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(zdt1_m)'
      gmmstat = gmm_get(gmmk_wt1_m_s,wt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(wt1_m)'
!
      gmmstat = gmm_get(gmmk_xct1_m_s,xct1_m,tmp_meta1d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(xct1_m)'
      gmmstat = gmm_get(gmmk_yct1_m_s,yct1_m,tmp_meta1d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(yct1_m)'
      gmmstat = gmm_get(gmmk_zct1_m_s,zct1_m,tmp_meta1d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(zct1_m)'
!
      if (.not. Schm_hydro_L) then
          gmmstat = gmm_get(gmmk_qt1_m_s,qt1_m,meta3d)
          if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(qt1_m)'
      endif
!
      ut1_m  = 0.
      vt1_m  = 0.
      tt1_m  = 0.
      zdt1_m = 0.
      st1_m  = 0.
      wt1_m  = 0.
!
      xct1_m = 0.
      yct1_m = 0.
      zct1_m = 0.
!
      if (.not. Schm_hydro_L) qt1_m = 0. 
!
      do n=1,Tr3d_ntr
!
         gmmstat = gmm_get('TRM/'//trim(Tr3d_name_S(n))//':P',tr1_m,meta3d)
!
         do k=1,l_nk+2
         do j=l_miny,l_maxy
         do i=l_minx,l_maxx
            tr1_m(i,j,k) = 0. 
         end do
         end do
         end do
!
      enddo
!
!     ---------------------------
!     Zero comdeck vth
!     ---------------------------
      gmmstat = gmm_get(gmmk_uth_m_s, uth_m ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(uth_m)'
      gmmstat = gmm_get(gmmk_vth_m_s, vth_m ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(vth_m)'
      gmmstat = gmm_get(gmmk_zdth_m_s,zdth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(zdth_m)'
!
      gmmstat = gmm_get(gmmk_xth_m_s,xth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(xth_m)'
      gmmstat = gmm_get(gmmk_yth_m_s,yth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(yth_m)'
      gmmstat = gmm_get(gmmk_zth_m_s,zth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(zth_m)'
      gmmstat = gmm_get(gmmk_xcth_m_s,xcth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(xcth_m)'
      gmmstat = gmm_get(gmmk_ycth_m_s,ycth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(ycth_m)'
      gmmstat = gmm_get(gmmk_zcth_m_s,zcth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(zcth_m)'
!
      gmmstat = gmm_get(gmmk_xth_thermo_m_s,xth_thermo_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(xth_thermo_m)'
      gmmstat = gmm_get(gmmk_yth_thermo_m_s,yth_thermo_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(yth_thermo_m)'
      gmmstat = gmm_get(gmmk_zth_thermo_m_s,zth_thermo_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(zth_thermo_m)'
      gmmstat = gmm_get(gmmk_xcth_thermo_m_s,xcth_thermo_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(xcth_thermo_m)'
      gmmstat = gmm_get(gmmk_ycth_thermo_m_s,ycth_thermo_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(ycth_thermo_m)'
      gmmstat = gmm_get(gmmk_zcth_thermo_m_s,zcth_thermo_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(zcth_thermo_m)'
!
      uth_m  = 0.
      vth_m  = 0.
      zdth_m = 0.
!
      xth_m  = 0.
      yth_m  = 0.
      zth_m  = 0.
      xcth_m = 0.
      ycth_m = 0.
      zcth_m = 0.
!
      xth_thermo_m  = 0.
      yth_thermo_m  = 0.
      zth_thermo_m  = 0.
      xcth_thermo_m = 0.
      ycth_thermo_m = 0.
      zcth_thermo_m = 0.
!
!     ---------------------------
!     Zero comdeck vtx
!     ---------------------------
      gmmstat = gmm_get(gmmk_bspqtx_m_s,bspqtx_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(bspqtx_m)'
      gmmstat = gmm_get(gmmk_fiptx_m_s,fiptx_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(fiptx_m)'
!
      if (.not. Schm_hydro_L) then
         gmmstat = gmm_get(gmmk_mutx_m_s,mutx_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(mutx_m)'
      endif
!
      bspqtx_m = 0.
      fiptx_m  = 0.
!
      if (.not. Schm_hydro_L) mutx_m = 0.  
!
!     ---------------------------
!     Zero comdeck rhsc 
!     ---------------------------
      gmmstat = gmm_get(gmmk_rhsu_m_s,rhsu_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(rhsu_m)'
      gmmstat = gmm_get(gmmk_rhsv_m_s,rhsv_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(rhsv_m)'
      gmmstat = gmm_get(gmmk_rhst_m_s,rhst_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(rhst_m)'
      gmmstat = gmm_get(gmmk_rhsc_m_s,rhsc_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(rhsc_m)'
      gmmstat = gmm_get(gmmk_rhsw_m_s,rhsw_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(rhsw_m)'
      gmmstat = gmm_get(gmmk_rhsf_m_s,rhsf_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(rhsf_m)'
      gmmstat = gmm_get(gmmk_rhsp_m_s,rhsp_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(rhsp_m)'
      gmmstat = gmm_get(gmmk_rhsb_m_s,rhsb_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(rhsb_m)'
      gmmstat = gmm_get(gmmk_ruw1_m_s,ruw1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(ruw1_m)'
      gmmstat = gmm_get(gmmk_rvw1_m_s,rvw1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(rvw1_m)'
      gmmstat = gmm_get(gmmk_ruw2_m_s,ruw2_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(ruw2_m)'
      gmmstat = gmm_get(gmmk_rvw2_m_s,rvw2_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(rvw2_m)'
!
      rhsu_m = 0.
      rhsv_m = 0.
      rhsc_m = 0.
      rhsp_m = 0.
      rhsb_m = 0.
!
      ruw1_m = 0.
      rvw1_m = 0.
      ruw2_m = 0.
      rvw2_m = 0.
!
      rhst_m = 0.
      rhsw_m = 0.
      rhsf_m = 0.
!
!     ---------------------------
!     Zero comdeck orh 
!     ---------------------------
!     CAUTION: oruw2 to verified
      gmmstat = gmm_get(gmmk_orhsu_m_s,orhsu_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(orhsu_m)'
      gmmstat = gmm_get(gmmk_orhsv_m_s,orhsv_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(orhsv_m)'
      gmmstat = gmm_get(gmmk_orhst_m_s,orhst_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(orhst_m)'
      gmmstat = gmm_get(gmmk_orhsc_m_s,orhsc_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(orhsc_m)'
      gmmstat = gmm_get(gmmk_orhsw_m_s,orhsw_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(orhsw_m)'
      gmmstat = gmm_get(gmmk_orhsf_m_s,orhsf_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zero_tr ERROR at gmm_get(orhsf_m)'
!
      orhsu_m = 0.
      orhsv_m = 0.
      orhsc_m = 0.
!
      orhst_m = 0.
      orhsw_m = 0.
      orhsf_m = 0.
!
      do n=1,Tr3d_ntr
!
         gmmstat = gmm_get('TRM/'//trim(Tr3d_name_S(n))//':O',ortr_m,meta3d)
!
         do k=1,l_nk+2
         do j=l_miny,l_maxy
         do i=l_minx,l_maxx
            ortr_m(i,j,k) = 0.
         end do
         end do
         end do
!
      enddo
!
      return
      end
