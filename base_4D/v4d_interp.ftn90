!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r v4d_interp - Scalar interpolation of zo at position px,py from
!                   zi on input grid, based on EZ_INTERP (Y.Chartier EZSCINT 2001)  
!
      subroutine v4d_interp (zo,px,py,npts,zi,ax,ay,cx,cy,i1,i2,j1,j2,nk, &
                             jmin,jmax,ni,grtypi,degree)
!
      implicit none
!
      integer npts,i1,i2,j1,j2,nk,jmin,jmax,ni,degree
!
      real zo(nk,npts),zi(i1:i2,j1:j2,nk), &
           px(npts),py(npts),ax(i1:i2),ay(j1:j2),cx(i1:i2,6),cy(j1:j2,6)
!
      character*1 grtypi
!
!author M.Tanguay
!
!revision
! v3_00 - Tanguay M.        - initial MPI version
! v4_40 - Tanguay M.        - Revision TL/AD
!
!object
!  see id section
!
!arguments
! Name         I/O        Description
!----------------------------------------------------------------
! zo            O         Interpolated scalar field at positions px,py
! px            I         Position x in INPUT grid
! py            I         Position y in INPUT grid
! npts          I         Number of positions in zo
! zi            I         Scalar field on INPUT grid
! ax            I         X axe of INPUT grid
! ay            I         Y axe of INPUT grid
! cx            I         AX difference on INPUT grid
! cy            I         AY difference on INPUT grid
! i1-i2         I         Dimension x in INPUT grid
! j1-j2         I         Dimension y in INPUT grid
! nk            I         Dimension z in INPUT grid
! jmin          I         Lower  limit j
! jmax          I         Higher limit j
! ni            I         Period if grid='G', Heart if grid = 'Z'
! grtypi        I         Type of INPUT grid
! degree        I         Degree of interpolation
!----------------------------------------------------------------
!
!     _______________________________________________________________________
!
      if(degree.ne. 1 .and.degree.ne. 3 ) call handle_error(-1,'v4d_interp','degree.ne.1.and.degree.ne.3')
      if(grtypi.ne.'G'.and.grtypi.ne.'Z') call handle_error(-1,'v4d_interp','grtypi.ne.G.and.grtypi.ne.Z')
!     _______________________________________________________________________
!
!        case LINEAR
!        -----------
         if(degree.eq.1) then 
!
            if(grtypi.eq.'Z') call v4d_irgdint_1_nw (zo,px,py,npts,ax,ay,zi, &
                                                     i1,i2,j1,j2,nk,jmin,jmax)
!
            if(grtypi.eq.'G') call v4d_irgdint_1_w  (zo,px,py,npts,ax,ay,zi, &
                                                     ni,j1,j2,nk)
!
!        case CUBIC 
!        ----------
         elseif(degree.eq.3) then
!
            if(grtypi.eq.'Z') call v4d_irgdint_3_nw (zo,px,py,npts,ax,ay,cx,cy,zi, &
                                                     i1,i2,j1,j2,nk,jmin,jmax)
!
            if(grtypi.eq.'G') call v4d_irgdint_3_w  (zo,px,py,npts,ax,ay,cx,cy,zi, &
                                                     ni,j1,j2,nk)
!
         endif
!
      return
      end
