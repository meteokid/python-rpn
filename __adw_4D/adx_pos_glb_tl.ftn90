!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

#include "constants.h"
#include "msg.h"
#include "stop_mpi.h"

!/**
subroutine adx_pos_glb4_tl(F_wrkx1  ,F_wrky1  ,F_u1  ,F_u2  ,F_xth  ,F_yth  ,F_zth  , &
                           F_wrkx1_m,F_wrky1_m,F_u1_m,F_u2_m,F_xth_m,F_yth_m,F_zth_m, & 
                           F_n1_m,F_capx1_m,F_capy1_m,F_capz1_m,F_ii_m,F_jj_m,F_kk_m, &
                           F_dth, F_has_u2_L, F_i0,F_in,F_j0,F_jn,                    &
                           F_ni,F_nj,F_aminx, F_amaxx, F_aminy, F_amaxy,F_k0,F_nk, F_nk_super)
!
   implicit none
#include <arch_specific.hf>
!
   !@objective TLM of adx_pos_glb
!
   !@arguments
   logical :: F_has_u2_L           !I, .T. if F_u2 needs to be treated
   real    :: F_dth                !I, factor (1. or timestep)
   integer :: F_nk, F_nk_super     !I, number of vertical levels
   integer :: F_aminx, F_amaxx, F_aminy, F_amaxy !I, wind fields array bounds
   integer :: F_ni, F_nj           !I, dims of position fields
   integer :: F_i0,F_in,F_j0,F_jn,F_k0 !I, operator scope
   real, dimension(F_ni,F_nj,F_nk) :: F_xth,F_yth !I/O, x,y positions
   real, dimension(F_ni,F_nj,F_nk) :: F_zth       !I, z positions
   real, dimension(F_ni,F_nj,F_nk) :: F_xth_m,F_yth_m !I/O, x,y positions TRAJ
   real, dimension(F_ni,F_nj,F_nk) :: F_zth_m         !I, z positions TRAJ
   real, dimension(F_aminx:F_amaxx,F_aminy:F_amaxy,F_nk_super) :: &
        F_u1  ,F_u2  , &   !I, field to interpol
        F_u1_m,F_u2_m      !I, field to interpol TRAJ
   real, dimension(F_ni,F_nj,F_nk) :: F_wrkx1  ,F_wrky1  , &  !O, F_dt * result of interp
                                      F_wrkx1_m,F_wrky1_m     !O, F_dt * result of interp TRAJ
   integer, dimension(F_ni,F_nj,F_nk) :: F_n1_m,F_ii_m,F_jj_m,F_kk_m
   real,    dimension(F_ni,F_nj,F_nk) :: F_capx1_m,F_capy1_m,F_capz1_m
!
   !@author Monique Tanguay
!
   !@revisions
   ! v4_13 - Tanguay M.        - Adjustments GEM413
   ! v4_40 - Tanguay M.        - Revision TL/AD
!**/
#include "adx_nml.cdk"
#include "adx_poles.cdk"

   !---------------------------------------------------------------------
      
   call adx_trilin_opt4_tl (F_wrkx1  ,F_wrky1  ,F_u1  ,F_u2  ,F_xth  ,F_yth  ,F_zth  , &
                            F_wrkx1_m,F_wrky1_m,F_u1_m,F_u2_m,F_xth_m,F_yth_m,F_zth_m, &
                            F_n1_m,F_capx1_m,F_capy1_m,F_capz1_m,F_ii_m,F_jj_m,F_kk_m, &
                            F_dth, F_has_u2_L, F_i0,F_in,F_j0,F_jn,                    &
                            F_ni,F_nj,F_aminx, F_amaxx, F_aminy, F_amaxy,F_k0,F_nk, F_nk_super)

   IF_FRO_A: if (adx_fro_a > 0) then

   ! NOT DONE YET

   call handle_error_l(-1,'adx_pos_glb_tl','adx_fro_a > 0')

   endif IF_FRO_A

   !---------------------------------------------------------------------
   return
end subroutine adx_pos_glb4_tl
