#!/bin/ksh
myself=$(true_path $0)
mybasedir=$(true_path ${myself%/*}/..)
TarCmd="echo tar"
tar --help 1>/dev/null 2>/dev/null && TarCmd=tar
gtar --help 1>/dev/null 2>/dev/null && TarCmd=gtar
gnutar --help 1>/dev/null 2>/dev/null && TarCmd=gnutar

DESC=''
USAGE="USAGE: ${myself##*/} [-h] [-v] FROMVERSION TOVERSION"

#---- Functions ------------------------------------------------------

. $mybasedir/r.misc-fn.dot

#---------------------------------------------------------------------
verbose=""
bundledir=~/SsmBundles
domainsdir=~/SsmDomains
depotdir=~/SsmDepot
overwrite=0
remove=0
posargs=""
posargsnum=0

while [[ $# -gt 0 ]] ; do
    case $1 in
        (-h|--help) echo $DESC ; usage_long; exit 0;;
		  (-v) verbose="--verbose" ;;
		  (--bndl) bundledir=$2 ; shift ;;
		  (--dom) domainsdir=$2 ; shift ;;
		  (-r) depotdir=$2 ; shift ;;
		  (--overwrite) overwrite=1 ;;
		  (--rm) remove=1 ;;
        -*) echo "ERROR: Unrecognized option $1"
            echo -e $USAGE
            echo "---- ABORT ----"
            exit 1;;
        *) posargs="$posargs $1" ; ((posargsnum=posargsnum+1));;
    esac
    shift
done
bundledir=${bundledir%/}
domainsdir=${domainsdir%/}
[[ x$remove == x1 ]] && overwrite=1


version0=GEM/x/4.2.0-rc5
version0name=${version0%%/*}
version0namelow=$(echo ${version0name} | tr 'A-Z' 'a-z')
version0nb=${version0##*/}
dom0=$(cat $bundledir/${version0}.bndl | tr ' ' "\n" | grep ${version0namelow}_${version0nb})

rcname=$(echo ${version0nb} | cut -d'-' -f2)

version1=$(echo ${version0} | sed "s/-${rcname}//" | sed "s|/x/|/|")
version1nb=$(echo ${version0nb} | cut -d'-' -f1)
dom1=$(echo ${dom0} | sed "s/-${rcname}//" | sed "s|/x/|/${version0namelow}/|")


exit_on_error "Script Not yet functional"


#---- Create new domaine
mkdir_tree $domainsdir $dom1
chmod 755 $domainsdir/$dom1
[[ ! -e $domainsdir/$dom1/etc/ssm.d ]] && s.ssm-creat -d $domainsdir/$dom1 -r $depotdir
chmod 555 $domainsdir/$dom1
if [[ ! -d $domainsdir/$dom1/etc/ssm.d ]] ; then
	 exit_on_error "ERROR: probleme with domain $dom1 [in ${domainsdir}]"
fi

#---- Make renamed pkg
here=$pwd
cd $domainsdir/${dom0}
pkglist="$(ls -d ${version0namelow}*)"
cd $here

cd $TMPDIR
for mypkg in $pkglist ; do
	 oldname=${mypkg%/}
	 newname=$(echo $oldname | sed "s/-${rcname}//")
	 if [[ -d ${newname} ]] ; then
		  chmod -R 755 ${newname}
		  rm -rf ./${newname}
	 fi
	 rsync -a $domainsdir/${dom0}/${mypkg%/}/ ./${newname}
	 chmod -R 755 ${newname}
	 echo > ${newname}/maint/excludes.list
	 echo ${newname}/. > ${newname}/maint/include
	 rm -f  ${newname}/.ssm.d/post-install
	 if [[ -r ${newname}/etc/profile.d/${oldname}.sh ]] ; then
		  cat ${newname}/etc/profile.d/${oldname}.sh \
				| sed "s/-${rcname}//g" \
				| sed "s|/x/|/|g" \
				> ${newname}/etc/profile.d/${newname}.sh
		  rm -f ${newname}/etc/profile.d/${oldname}.sh	 
	 fi
	 $TarCmd czf $depotdir/${newname}.ssm ./${newname}
done

#---- Install renamed pkg
cd $TMPDIR
for mypkg in $pkglist ; do
	 oldname=${mypkg%/}
	 newname=$(echo $oldname | sed "s/-${rcname}//")
done

#---- Make bundle file


mydirrel=${version1%/*}
mkdir_tree $bundledir ${mydirrel}
chmod 755 $bundledir/${mydirrel}
cat $bundledir/${version0}.bndl \
	 | sed "s|${dom0}|${dom1}|" \
	 > $bundledir/${version1}.bndl
chmod 555 $bundledir/${mydirrel}
