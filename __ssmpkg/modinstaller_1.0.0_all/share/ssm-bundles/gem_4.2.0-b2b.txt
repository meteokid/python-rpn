#!/bin/ksh
modinstaller_file_version=4

ssm_bndl=GEM/x/4.2.0-b2b
ssm_scripts_xv=x/4.2.0-b2
ssm_dyn_xv=x/4.2.0-b2
ssm_phy_xv=x/5.2.0-b2

ssm_bndl_elements="\
 all:gem:GENERIC@${ssm_bndl#*/}\
 all:gem-data:4.0.1\
 multi:modulopt:2.1c\
 all:gem-scripts:CONFIG@${ssm_scripts_xv}\
 all:gem-scripts:GENERIC@${ssm_scripts_xv}\
 all:gemdyn:CONFIG@${ssm_dyn_xv}\
 all:gemdyn:GENERIC@${ssm_dyn_xv}\
 all:rpnphy:CONFIG@${ssm_phy_xv}\
 all:rpnphy:GENERIC@${ssm_phy_xv}\
 multi:rpnphy:GENERIC@${ssm_phy_xv}\
 multi:gemdyn:GENERIC@${ssm_dyn_xv}\
 multi:gembin@gem:GENERIC@${ssm_bndl#*/}\
"

export ssm_compiler_list="\
 Linux_x86-64:pgi9xx-old\
 Linux:pgi9xx-old\
 AIX:xlf12\
"

ssm_bndl_externals="\
 ${ssm_compiler_list}\
 Linux_x86-64:mpich2\
 Linux:mpich2 rmnlib-dev\
 GEM/vgriddescriptors/1.0.8\
"
ssm_bndl_externals_post="GEM/others/gem-home-path"

ssm_arch_list="\
 Linux_x86-64:linux26-x86-64\
 Linux:linux26-i686\
 AIX:aix53-ppc-64\
"

#==== Below is automation for backward compatibility ====

ssm_bndl_subdir=${ssm_bndl%%/*}
ssm_bndl_name=${ssm_bndl##*/}
ssm_bndl_x=${ssm_bndl%/*}
ssm_bndl_x=${ssm_bndl_x#*/}
if [[ x$ssm_bndl_x == xx ]] ; then
	ssm_bndl_x='x/'
	ssm_bndl_isexperimental=1
else
	ssm_bndl_x=''
	ssm_bndl_isexperimental=0
fi
export ssm_bndl_x

for item in $ssm_compiler_list ; do
	 if [[ "x${item%:*}" == "xAIX" ]] ; then
		  export ssm_AIX_COMPILER="${item#*:}"
	 elif [[ "x${item%:*}" == "xLinux" ]] ; then
		  mycomp="$(echo ${item#*:} | sed 's/-old//')"
		  export ssm_Linux_COMPILER="$mycomp"
	 elif [[ "x${item%:*}" == "xLinux_x86-64" ]]; then
		  mycomp="$(echo ${item#*:} | sed 's/-old//')"
		  export ssm_Linux_x86_64_COMPILER="$mycomp"
	 fi
done

ssm_multiarch() {
	 for _arch in $ssm_arch_list ; do
		  _arch1=$(echo ${_arch} | cut -d":" -f1)
		  _arch2=$(echo ${_arch} | cut -d":" -f2)
		  echo "${_arch1}:$1 " | sed "s/SSMARCH/${_arch2}/"
	 done
}

ssm_bndl_install_list=""

for item in $ssm_bndl_elements ; do
	 myarch=${item%%:*}
	 myarchname=${item%:*}
	 myname=${myarchname#*:}
	 mydom=${myname#*@}
	 mypkg=${myname%@*}
	 myversion=${item##*:}
	 myversion_g=${myversion%@*}
	 myversion_xn=${myversion#*@}
	 myversion_x=${myversion_xn%/*}
	 myversion_n=${myversion_xn##*/}

	 myversion_x="${myversion_x}/"
	 [[ "x$myversion_x" == "x${myversion_n}/" ]] && myversion_x=''

	 myarch_a=SSMARCH
	 [[ x$myarch == xall ]] && myarch_a=all
	 mycomponent_pkg="${mypkg}_${myversion_n}_${myarch_a}"
	 [[ x$myversion_g == xCONFIG ]] && mycomponent_pkg="domconfig_1.0.0_all"
	 mycomponent_dom="${myversion_x}${mydom}_${myversion_n}"

	 mycomponent_pkg_g=""
	 if [[ x$myversion_g == xGENERIC ]] ; then
		  myarch_g=ARCH
		  [[ x$myarch == xall ]] && myarch_g=all
		  mycomponent_pkg_g="${mypkg}_V999V_${myarch_g}|"
	 fi
	 mycomponent="${mycomponent_pkg_g}${mycomponent_pkg}@${mycomponent_dom}"

	 if [[ x$myarch == xall ]] ; then
		  ssm_bndl_install_list="${ssm_bndl_install_list} $mycomponent"
	 else
		  ssm_bndl_install_list="${ssm_bndl_install_list} $(ssm_multiarch "$mycomponent")"
	 fi
done
