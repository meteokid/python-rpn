!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#include "msg.h"
#include "stop_mpi.h"

!/**
subroutine adx_exch_3b_ad (F_1_out, F_2_out, F_1_in, F_2_in, F_c_in_m, & 
                           F_n_treat,F_ni,F_nj,F_nk,adx_for_a)                  

   implicit none
#include <arch_specific.hf>

!!!#include "adx_dims.cdk"
!!!#include "adx_poles.cdk"

   !@objective ADJ of adx_exch_3b_tl  

   !@arguments
   integer :: F_ni,F_nj,F_nk        !I, dims
   integer :: F_n_treat
   integer :: F_c_in_m(adx_for_a)
   real    :: F_1_in  (adx_for_a), F_2_in  (adx_for_a)
   real,dimension(F_ni*F_nj*F_nk) :: F_1_out, F_2_out
   integer :: adx_for_a 

   !@author Monique Tanguay 

   !@revisions
   ! v4_40 - Tanguay M.        - Revision TL/AD
   !  
!**/
   integer :: n
   !---------------------------------------------------------------------
   call msg(MSG_DEBUG,'adx_exch_3_ad')

   if (F_n_treat == 1) then

      do n = adx_for_a,1,-1

         F_1_in (n)           = F_1_out(F_c_in_m(n)) + F_1_in(n)
         F_1_out(F_c_in_m(n)) = 0.0 

      enddo

   else if (F_n_treat == 2) then

      do n = adx_for_a,1,-1

         F_2_in(n)            = F_2_out(F_c_in_m(n)) + F_2_in(n)
         F_2_out(F_c_in_m(n)) = 0.0 
         F_1_in(n)            = F_1_out(F_c_in_m(n)) + F_1_in(n)
         F_1_out(F_c_in_m(n)) = 0.0 

      enddo

   endif
   call msg(MSG_DEBUG,'adx_exch_3_ad [end]')
   !---------------------------------------------------------------------
   return
end subroutine adx_exch_3b_ad
