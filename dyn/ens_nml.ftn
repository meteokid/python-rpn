***s/r ens_gemnml - read parametres for ensemble forecast
*
#include <model_macros_f.h>
*
      subroutine ens_nml(unf) 
      implicit none
*
*author Lubos Spacek - May 2005
*
*revision
*
*object
*  To initialize the ensemble forecast system
*  by reading the namelist ens_nml
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
*----------------------------------------------------------------
*implicits
#include "ens_nml.cdk"
#include "ens_param.cdk"
#include "ptopo.cdk"
#include "glb_ld.cdk"
*
      integer i, err,unf
*
*--------------------------------------------------------------------
*
      Ens_conf      = .false.
      Ens_ident     = ''
      Ens_memb      = -1
      Ens_bc_conf   = .false.
      Ens_bc_dif    = .false.
      Ens_bc_gwd    = .false.
      Ens_bc_stat   = .false.
      Ens_bc_div    = .false.
      Ens_gg_nlon   = 16 
      Ens_gg_nlat   =  8
      Ens_gg_nniv   =  3
      Ens_gg_trnl   =  2
      Ens_gg_trnh   =  8
      Ens_mc_min    = 0.0
      Ens_mc_max    = 0.0
      Ens_mc_mean   = 0.0
      Ens_mc_std    = 0.0
      Ens_mc_tau    = 0.0
      Ens_mc_str    = 0.0
*
      Ens_bc_txl    = 0
      Ens_bc_txh    = G_ni+3+Ptopo_npex
      Ens_bc_tyl    = 0
      Ens_bc_tyh    = G_nj+3+Ptopo_npey
      Ens_bc_bfc    = 1.0e-01
      Ens_bc_lam    = 2.0e+05
      Ens_bc_alph   = 0.0
      Ens_bc_alpt   = 0.0
*
      Ens_nlon2     = 16
      Ens_nlat2     =  8
      Ens_ncha2     =  1
      Ens_trnl2     =  1
      Ens_trnh2     =  8
      Ens_min2      = 0.0
      Ens_max2      = 0.0
      Ens_mean2     = 0.0
      Ens_std2      = 0.0
      Ens_tau2      = 0.0
      Ens_str2      = 0.0
*
      rewind(unf)
      read  (unf,nml=ensembles,  END=930, ERR=930)
*
      if ((Ens_ident.eq." ").and.(Ens_memb.le.0))then
         call gem_stop('Non identified member',-1)
      endif
*
      if (Ens_gg_nlon.ne.2*Ens_gg_nlat)then
         call gem_stop('Nlon must equal 2*nlat',-2)
      endif
*
      if (Ens_ncha2.gt.MAX2DC) then
         call gem_stop('Ens_ncha2 must be <=9',-3)
      endif
*
      do i=1,Ens_ncha2
         if (Ens_nlon2(i).ne.2*Ens_nlat2(i))then
            call gem_stop('Nlon2 must equal 2*nlat2',-4)
         endif
      enddo
*
      write (6  ,nml=ensembles)
      Ens_gg_dim    = (Ens_gg_trnh+1)*(Ens_gg_trnh+2)/2
      Ens_gg_mzt    = (Ens_gg_nniv-1)/2
      Ens_bc_conf   =  Ens_bc_conf.and.Ens_conf
      Ens_bc_stat   =  Ens_bc_stat.and.Ens_conf
      Ens_bc_div    =  Ens_bc_div .and.Ens_conf
      Ens_dim2      = (Ens_trnh2+1)*(Ens_trnh2+2)/2
      Ens_dim2_max  = maxval(Ens_dim2)
*
      write(*,*)"Ens_gg_dim,Ens_gg_mzt,Ens_bc_conf,Ens_bc_conf,Ens_bc_div"
      write(*,*)Ens_gg_dim,Ens_gg_mzt,Ens_bc_conf,Ens_bc_conf,Ens_bc_div
      write(*,"(' Ens_dim2',10i6)")Ens_dim2,Ens_dim2_max
      goto 999
*
 930  write(6,803)
 998  call gem_stop('The program stops in ens_nml',-3)
*
 803  format(/,' ERROR in NAMELIST Ensembles: STOP IN GEM',/)
*
*
*--------------------------------------------------------------------
*
 999  return
      end
*
