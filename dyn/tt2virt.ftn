!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r tt2virt - Update physical quantities
*
#include "model_macros_f.h"
*
      subroutine tt2virt (tt, t_virt, tt2tv)
      implicit none
*
      logical tt2tv
      real t_virt(*), tt(*)
*author
*     Michel Desgagne - June 2009
*
*revision
* v4_06 - Desgagne, M.     - First revision
*
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "schm.cdk"
#include "tr3d.cdk"
*
      integer i, j, k, n
      real, pointer, dimension(:,:,:)     :: hu,tr
      real, dimension(LDIST_SHAPE,l_nk+2) :: sumpqj 
*     ________________________________________________________________
*
*     Compute temperature from virtual temperature when tt2tv = .false.
*     Compute virtual temperature from temperature when tt2tv = .true.
*     --------------------------------------------
*
      sumpqj = 0.
*
      if(Schm_wload_L)then
*        Sum over Hydrometeors, note: 'HU' is not always in position 1
         do n = 1, Tr3d_ntr
            nullify (tr)
            gmmstat = gmm_get('TR/'//trim(Tr3d_name_S(n))//':P',tr,meta3d)
            if (Tr3d_wload (n)) then
               do k = 1, l_nk+2
               do j = 1, l_nj
               do i = 1, l_ni
                  sumpqj(i,j,k)=sumpqj(i,j,k)+tr(i,j,k)
               end do
               end do
               end do
            endif
         end do
      endif
*
      gmmstat = gmm_get('TR/HU:P',hu,meta3d)
*
      call mfottvh2 ( tt, t_virt, hu, sumpqj, l_minx, l_maxx,
     $                l_miny,l_maxy,l_nk+2,1,l_ni,1,l_nj,tt2tv)
*
*     ________________________________________________________________
*
      return
      end
