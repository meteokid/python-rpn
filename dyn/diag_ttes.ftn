!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r diag_ttes
*
#include "model_macros_f.h"
*
      subroutine diag_ttes (tt,es,ni,nj,ki)
      implicit none
*
      integer ni,nj,ki
      real tt(ni,nj),es(ni,nj)
*
*author
*     M. Desgagne - Spring 2008
*
*revision
* v3_31 - Desgagne M.       - initial version
* v4_05 - Lepine M.         - VMM replacement with GMM
*
*implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "vt1.cdk"
#include "ver.cdk"
#include "pw.cdk"
*
      integer ninj
      real, pointer, dimension(:,:,:)     :: humod
      real  hu(l_ni,l_nj),px(l_ni,l_nj)
*
*     ________________________________________________________________
*
      nullify (pw_tplus,st1,humod)
      gmmstat = gmm_get(gmmk_pw_tplus_s ,pw_tplus,meta3d)
      gmmstat = gmm_get(gmmk_qt1_s      ,st1     ,meta2d)
      gmmstat = gmm_get('TR/HU:P'       ,humod   ,meta3d)
*
      tt(:,:) = pw_tplus (1:l_ni,1:l_nj,ki)
      hu(:,:) = humod    (1:l_ni,1:l_nj,ki)
*
      ninj = ni*nj
      px(:,:) = exp ( Ver_a_8%t(ki) + Ver_b_8%t(ki)*st1(1:l_ni,1:l_nj) )
      call mhuaes (es, hu,tt,px,px,0, .true., .false.,ninj,1,ninj)
*
      es(:,:) = max(0.,es(:,:))
*
*     ________________________________________________________________
*
      return
      end

