***s/r e_wlogntr - write output message in cmclog file from gefntr
*
      subroutine e_wlogntr(ftcode, ftname)
*
#include "impnone.cdk"
*
       character*4 ftcode
       character*2 ftname
*
*author andre methot - cmc - april 1994
*                  adapted from wlog.ftn
*
*revision
* v1_96 - alain patoine          - add vertical diffusio
* v0_19 -  Andre Methot          - revision of GL/AL processing and NE ->SD
* v1_00 -  Andre Methot          - addition of LG
*
*language
*	fortran 77
*
*object
*       see above ID
*	
*arguments
*______________________________________________________________________
*                    |                                                 |
* NAME               | DESCRIPTION                                     |
*--------------------|-------------------------------------------------|
* ftcode             | code used to identify the type of messages      |
*                    |                                                 |
*                    | ftcode = 'STOP' ==> stop message                |
*                    |          'MISG' ==> missing field message       |
*                    |                                                 |
* ftname             | name of the geophysical field for which the     |
*                    | analysis is missing                             |
* -----------------------------------------------------------------------
*
*implicits
#include "e_option.cdk"
* comdecks used also in GEMPP
#include "model_macros_f.h"
#include "out1.cdk"
*
*
*modules
      integer cmcwlog
      external cmcwlog
*
**
*     ---------------------------------------------------------------

      integer pnerr, pnip2, m
      character ptmesg*80, ptmesg2*80
*
*C       1.     initialisation of character string
*               ----------------------------------

      do m=1,80
        ptmesg(m:m) = ' '
        ptmesg2(m:m) = ' '
      enddo

      pnip2 = 0

*C       2.     writing message
*               ----------------
*
      if ( ftcode .eq. 'STOP' ) then

        ptmesg = ' PREMATURED STOP: END OF INTEGRATION'
        pnerr = cmcwlog('AB',pnip2,Out1_etik_s,ptmesg)

      else if ( ftcode .eq. 'MISG' ) then

        if ( ftname .eq. 'HS' ) then

         ptmesg = ' SOIL MOISTURE (HS) ANALYSIS UNAVAILLABLE.'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg)

         ptmesg2=' MODEL WILL THEN USE CLIMAT FOR HS FIELD.'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg2)

        else if ( (ftname.eq.'GL') .or. (ftname.eq.'LG') ) then

         ptmesg = ' ICE ANALYSIS UNAVAILLABLE.'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg)

         ptmesg2=' MODEL WILL THEN USE CLIMAT ICE FIELD.'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg2)

        else if ( ftname .eq. 'SD' ) then

         ptmesg = ' SNOW (SD) ANALYSIS UNAVAILLABLE.'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg)

         ptmesg2=' MODEL WILL THEN USE CLIMAT SNOW (SD) FIELD. '
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg2)

        else if ( ftname .eq. 'MQ' ) then

         ptmesg='ICE ANALYSIS LAND SEA MASK (MQ) UNAVAILLABLE.'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg)

         ptmesg2=' MODEL WILL THEN USE CLIMAT ICE FIELD.'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg2)

        else if ( ftname .eq. 'MH' ) then

         ptmesg='HS ANALYSIS LAND SEA MASK (MH) UNAVAILABLE.'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg)

         ptmesg2 = ' MODEL WILL THEN USE CLIMAT FOR SOIL MOISTURE (HS)'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg2)

        else if ( ftname .eq. 'TM' ) then

         ptmesg = ' WATER SURF. TEMP. (TM) ANALYSIS UNAVAILLABLE.'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg)

         ptmesg2 = ' MODEL WILL THEN USE CLIMAT FOR TM '
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg2)

        else if ( ftname .eq. 'TS' ) then

         ptmesg = ' SURF. TEMP. (TS) ANALYSIS UNAVAILLABLE.'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg)

         ptmesg2 = ' MODEL WILL THEN USE CLIMAT FOR TS '
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg2)

        else if ( ftname .eq. 'TP' ) then

         ptmesg = ' DEEP GROUND TEMP. (TP) ANALYSIS UNAVAILLABLE.'
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg)

         ptmesg2 = ' MODEL WILL THEN USE CLIMAT FOR TP '
         pnerr = cmcwlog('MI',pnip2,Out1_etik_s,ptmesg2)

        else

         ptmesg = ' wrong usage of subroutine e_wlogntr'
         pnerr = cmcwlog('BB',pnip2,Out1_etik_s,ptmesg)

        endif

      else

        ptmesg = ' wrong usage of subroutine e_wlogntr'
        pnerr = cmcwlog('BB',pnip2,Out1_etik_s,ptmesg)

      endif
*
      return
      end

