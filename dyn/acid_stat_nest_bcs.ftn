! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r acid_stat_nest_bcs - gblstat for acid test

#include "model_macros_f.h"
*
      subroutine acid_stat_nest_bcs(F_tr0,F_tr,F_n,F_flag)
*
      implicit none
*
      real F_tr0(LDIST_SHAPE,G_nk+2),F_tr(LDIST_SHAPE,G_nk+2)
*     
      integer F_flag,F_n
*
*author
*     Andre Plante
*     
*revision
*
*language
*     fortran 77
*
*object
*     glbstat for LAM acid test
*     Note : the acid test is conducted with one CPU.
*
*implicits
#include "lun.cdk"
#include "glb_ld.cdk"
#include "tr3d.cdk"
#include "acid.cdk"
*     
      if(F_flag.eq.1)then
         if (acid_i0.gt.0) then
            print *,'tr0(1+acid_i0,1+acid_j0,2)=',
     $           F_tr0(1+acid_in,1+acid_j0,2)
         else
            print *,'nest_tr(1+acid_i0,1+acid_j0,2)=',
     $           F_tr(1+acid_i0,1+acid_j0,2)
         endif
         call glbstat (F_tr0, Tr3d_name_S(F_n),LDIST_DIM,G_nk+2,
     $        1+acid_i0,G_ni-acid_in,
     $        1+acid_j0,G_nj-acid_jn,
     $        1,G_nk+2)
      else
         print*,'flag=',F_flag
         call gem_stop('acid_stat_nest_bcs : error with flag',-1)
      endif
      
      return
      
      end
