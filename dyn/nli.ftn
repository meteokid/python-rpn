***s/r nli - compute nonlinear portion of governing & derived equations
*
#include "model_macros_f.h"
*
      subroutine nli()
*
#include "impnone.cdk"
*
*authors
*      Alain Patoine & Gabriel Lemay
*
*revision
* v2_00 - Desgagne M.       - initial MPI version (from rhs v1_03)
* v2_30 - Edouard  S.       - adapt for vertical hybrid coordinate
*                             add Ncn
* v3_00 - Desgagne & Lee    - Lam configuration
*
*object
*******************************************************************************
*
*arguments
*       none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "p_geof.cdk"
#include "rhsc.cdk"
#include "nl.cdk"
#include "cori.cdk"
#include "vt0.cdk" 
#include "vtx.cdk" 
#include "ptopo.cdk"
#include "lctl.cdk"
#include "func.cdk"
*
*modules
      integer  vmmlod, vmmget, vmmuld
      external vmmlod, vmmget, vmmuld
*    
      integer  pnerr, pnlod, pnlkey1(15), i, j 
**
*     __________________________________________________________________
*
*
      if (Lun_debug_L)  write(Lun_out,1000)
*
      pnlkey1(1) = VMM_KEY(rheln)
      pnlkey1(2) = VMM_KEY(rhell)
      pnlkey1(3) = VMM_KEY(tt0)
      pnlkey1(4) = VMM_KEY(st0)
      pnlkey1(5) = VMM_KEY(qptx)
      pnlkey1(6) = VMM_KEY(csh)
      pnlkey1(7) = VMM_KEY(fiptx)
      pnlkey1(8) = VMM_KEY(topo)
      pnlkey1(9) = VMM_KEY(psdt0)
      pnlkey1(10) = VMM_KEY(that_8)
      pnlkey1(11) = VMM_KEY(dlnth_8)
      pnlod =11 
      if (.not. Schm_hydro_L) then
         pnlkey1(pnlod+1) = VMM_KEY(qsect0)
         pnlkey1(pnlod+2) = VMM_KEY(mutx)
         pnlod = pnlod+2
      endif
      if (Cori_cornl_L) then
         pnlkey1(pnlod+1) = VMM_KEY(ut0)
         pnlkey1(pnlod+2) = VMM_KEY(vt0)
         pnlod = pnlod+2
      endif
*
      pnerr = vmmlod(pnlkey1,pnlod)
*     - - - - - - - - - - - - - - -
      pnerr = VMM_GET_VAR(rheln)
      pnerr = VMM_GET_VAR(rhell)
      pnerr = VMM_GET_VAR(tt0)
      pnerr = VMM_GET_VAR(st0)
      pnerr = VMM_GET_VAR(qptx)
      pnerr = VMM_GET_VAR(csh)
      pnerr = VMM_GET_VAR(fiptx)
      pnerr = VMM_GET_VAR(topo)
      pnerr = VMM_GET_VAR(psdt0)
      pnerr = VMM_GET_VAR(that_8)
      pnerr = VMM_GET_VAR(dlnth_8)
      if (.not. Schm_hydro_L) then
         pnerr = VMM_GET_VAR(qsect0)
         pnerr = VMM_GET_VAR(mutx)
      else
         qsect0_= 0
         mutx_  = 0
      endif
      if (Cori_cornl_L) then
         pnerr = VMM_GET_VAR(ut0)
         pnerr = VMM_GET_VAR(vt0)
      else
         ut0_ = 0
         vt0_ = 0
      endif
*
      call diag_var( csh, qptx, mutx, st0, qsect0, LDIST_DIM, l_nk )
*
      call diag_fip( fiptx, csh, tt0, qsect0, topo, LDIST_DIM, l_nk )
*
      call nlip_2 ( nl_nu , nl_nv , nl_nth , nl_ncn , nl_nw , nl_nvv , 
     $              rheln , rhell ,
     $              tt0   , st0   , qptx   , qsect0 , fiptx , topo   ,
     $              psdt0 , ut0   , vt0    , mutx   , csh   ,
     $              that_8, dlnth_8,
     $              LDIST_DIM, l_nk )
*
*
      pnerr = vmmuld(-1,0)
*
 1000 format(/,5X,'COMPUTE NON-LINEAR RHS: (S/R NLI)')
*
*     __________________________________________________________________
*
      return
      end

