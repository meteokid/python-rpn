***s/p calF_omeg - compute vertical velocity in pressure coordinates
*
#include "model_macros_f.h"
*
      subroutine calzz(F_zz, F_fiptx, F_fit2,  DIST_DIM, Nk)
*
      implicit none
*
      integer DIST_DIM, Nk
      real F_zz(DIST_SHAPE,Nk+1)
      real F_fiptx(DIST_SHAPE,0:Nk+1), F_fit2(DIST_SHAPE,Nk+1)
*
*author
*     Richard Moffet - cmc - nov 2001 - 
*
*revision
* v3_03 - Moffet R.        - add ZZ calc at step=0
* v3_22 - Lee V.           - correct calc for LAM,remove F_i0,F_j0..
*
*object
*	compute vertical velocity in z coordinates
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_zz       O    - dz/dt
*
*implicits
#include "glb_ld.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "lctl.cdk"
#include "type.cdk"
#include "ver.cdk"
*
**
      integer i,j,k
      real*8 phi
*     __________________________________________________________________
*
      if ( Lctl_step .ne. 0 )then

      do k=1,l_nk+1
         do j= 1+pil_s, l_nj-pil_n
         do i= 1+pil_w, l_ni-pil_e
            phi=.5d0*(F_fiptx(i,j,k)+F_fiptx(i,j,k-1))
     $           +Ver_fistr_8%t(k)
            F_zz (i,j,k) = (phi - F_fit2(i,j,k))
     %                     / (Cstv_dt_8*Dcst_grav_8)
        end do
        end do
      end do

*
      else

      do k=1,l_nk
         do j= 1, l_nj
         do i= 1, l_ni
           F_zz (i,j,k) = 0.0
        end do
        end do
      end do
*
      endif
*     __________________________________________________________________
*
      return
      end 
