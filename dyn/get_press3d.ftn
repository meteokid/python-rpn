! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r get_press3d - get 3D pressure using A,B, and p0 for
*                    the purpose of obtaining the hydrostatic surface
*                    pressure over model topography (adj_ss2topo)
*
#include "model_macros_f.h"
*
      subroutine get_press3d(F_pr, F_p0, NN, F_a_8, F_b_8, F_pref_8, NK, F_datatype)
      implicit none
*
      integer NN, NK, F_datatype
      real F_pr(NN,NK), F_p0(NN)
      real*8 F_a_8(NK), F_b_8(NK), F_pref_8
*
*author
*
*revision
* v2_00 - Desgagne M.       - initial MPI version (from p0vt2gz v1_03)
* v2_30 - Edouard  S.       - adapt for vertical hybrid coordinate
* v3_00 - Lee v.            - treats 2D plane as 1-D vector no halos
* v3_02 - Lemay G.          - Vectorisation
* v3_21 - Lee V.            - Output Optimization
*

*object
*       see id section
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_pr           O    - 3D pressure field
* F_p0           I    - incoming 2D surface pressure
* NN             I    - number of points in the 2D field of F_p0
* F_a_8          I    - A 
* F_b_8          I    - B
* F_pref_8       I    - a reference pressure
* NK             I    - Number of levels to the 3D pressure field
* F_datatype     I    - code for:
*
*                     2 formulae             p0             6 anal
*
*            1 => p =    A+B*   ps       , F_p0=ps      ,  hyb-anal
*            2 => p =    A+B*   ps       , F_p0=ps      ,  eta-anal
*            3 => p =    A+B*   ps       , F_p0=ps (A=0),  sig-anal
*            4 => p =    A                         (B=0),  prs-anal
*            5 => p =    A+B*   ps       , F_p0=ps      ,  ecm-anal
*            6 => p =exp(A+B*ln(ps/pref)), F_p0=ps      ,  stg-anal
*
*implicits
*
**
      integer i,k
      real*8 lnpref_8
*
*     ---------------------------------------------------------------
*
*     Acql_hybanl  = (Acqi_datasp(2).eq.1)
*     Acql_etaanl  = (Acqi_datasp(2).eq.2)
*     Acql_siganl  = (Acqi_datasp(2).eq.3)
*     Acql_prsanl  = (Acqi_datasp(2).eq.4)
*     Acql_ecmanl  = (Acqi_datasp(2).eq.5)
*     Acql_stganl  = (Acqi_datasp(2).eq.6)

      lnpref_8 = log(F_pref_8)

      if (F_datatype.eq.3) then
* Sigma levels
          do k=1,NK
          do i=1,NN
             F_pr(i,k) =            F_b_8(k)*F_p0(i)
          enddo
          enddo
      else if (F_datatype.eq.5.or.
     %         F_datatype.eq.2.or.
     %         F_datatype.eq.1) then
* Hybrid levels (p-type)
          do k=1,NK
          do i=1,NN
             F_pr(i,k) = F_a_8(k) + F_b_8(k)*F_p0(i)
          enddo
          enddo
      else if (F_datatype.eq.6.or.F_datatype.eq.0) then
* Hybrid levels (lnp-type)
          do k=1,NK
          do i=1,NN
c            F_pr(i,k) = exp(F_a_8(k) + F_b_8(k)*(log(F_p0(i))-lnpref_8))
             F_pr(i,k) = exp(F_a_8(k) + F_b_8(k)*F_p0(i))
          enddo
          enddo
      else 
          print *,'Error in get_press3d: unrecognizable datatype: F_datatype=',F_datatype
          call gem_stop('get_press3d',-1)
      endif
      return
      end
