***s/r v4d_vtap_ad - ADJ of v4d_vtap_tl 
*
#include <model_macros_f.h>
*
      subroutine v4d_vtap_ad()
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_21 - Tanguay M.        - cancel xfis
* v2_30 - Edouard S.        - replace Schm_elast_L by Schm_cptop_L
* v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate 
*
*object
*     see id section
*
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "cstv.cdk"
#include "dcst.cdk"
#include "geomg.cdk"
#include "schm.cdk"
#include "p_geof.cdk"
#include "vt1.cdk"
#include "vt1m.cdk"
*
*modules
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      integer i,j,k,ik,jk,pnlod,pnerr,pnlkey1(7)
*
      real pcon,pr1
*
      real*8 ZERO_8
      parameter (ZERO_8=0.0)
*
*     -----------------
*     Define work space
*     -----------------
      real work1 (LDIST_SHAPE,l_nk),work2 (LDIST_SHAPE,l_nk)
      real work1m(LDIST_SHAPE,l_nk),work2m(LDIST_SHAPE,l_nk)
*     ______________________________________________________
*
      if (.not. Schm_cptop_L) call gefstop('v4d_vtap_ad')
*     ______________________________________________________
*
*     Allocate and load fields
*     ------------------------
      pnlkey1(1) = VMM_KEY(fit1 )
      pnlkey1(2) = VMM_KEY(fipt1)
      pnlkey1(3) = VMM_KEY(tpt1 )
      pnlkey1(4) = VMM_KEY(st1  )
      pnlod = 4 
*
      pnlkey1(pnlod+1) = VMM_KEY(tpt1m)
      pnlkey1(pnlod+2) = VMM_KEY(st1m )
      pnlod = pnlod+2
*
      pnerr = vmmlod(pnlkey1,pnlod)
*
      pnerr = VMM_GET_VAR(fit1 )
      pnerr = VMM_GET_VAR(fipt1)
      pnerr = VMM_GET_VAR(tpt1 )
      pnerr = VMM_GET_VAR(st1  )
*
      pnerr = VMM_GET_VAR(tpt1m)
      pnerr = VMM_GET_VAR(st1m )
*
*     Zero local adjoint variables
*     ----------------------------
      do k=1,l_nk
      do j=l_miny,l_maxy
      do i=l_minx,l_maxx
         work1(i,j,k) = ZERO_8
         work2(i,j,k) = ZERO_8
      end do
      end do
      end do
*
      do k=1,l_nk
      do j=1,l_nj
      do i=1,l_ni
*
*        ADJ 
*        ---
         fit1 (i,j,k) = fipt1(i,j,k) + fit1 (i,j,k)
         fipt1(i,j,k) = ZERO_8 
*
         work1(i,j,k) = fit1 (i,j,k) + work1(i,j,k)
         fit1 (i,j,k) = ZERO_8
*
      end do
      end do
      end do
*
*     ADJ of
*     Build GEO from T based on VTAP relationship
*     -------------------------------------------
      pcon = - Dcst_rgasd_8
*
      do jk = l_nk-2,0,-1
*
         ik  = l_nk-1-jk
         pr1 = - pcon*(geomg_z_8(ik+1)-geomg_z_8(ik))/(geomg_z_8(ik+1)+geomg_z_8(ik))
*
         do j = 1, l_nj
         do i = 1, l_ni
            work2(i,j,ik+1) = pr1*( work1(i,j,ik) ) + work2(i,j,ik+1)
            work2(i,j,ik  ) = pr1*( work1(i,j,ik) ) + work2(i,j,ik  )
            work1(i,j,ik+1) =       work1(i,j,ik)   + work1(i,j,ik+1)
            work1(i,j,ik)   = ZERO_8
         end do
         end do
*
      end do
*
*     ADJ of
*     Initialize GEO bottom boundary condition
*     ----------------------------------------
      do j=1,l_nj
      do i=1,l_ni
*
*        ADJ 
*        ---
         work1 (i,j,l_nk) = ZERO_8 
*
      end do
      end do
*
*     ADJ of
*     --------------------------------------------------
*     Initialize special T such as d(fit1)/dZ = -(R T/Z)
*     --------------------------------------------------
*
      do k=l_nk,1,-1
      do j=1,l_nj
      do i=1,l_ni
*
*        TRAJ Evaluate exp(qt1)
*        ----------------------
         work2m(i,j,k) = Geomg_pia(k) + Geomg_pib(k)*exp(st1m(i,j))
*
*
*        ADJ Evaluate special T
*        ----------------------
         tpt1(i,j,k) = (work2(i,j,k))*
     %                 (1.0+Geomg_dpib(k)*(exp(st1m(i,j))-1.))*
     %                 (Geomg_z_8(k) / work2m(i,j,k)) + tpt1(i,j,k)
*
         st1(i,j)    = (Cstv_tstr_8+tpt1m(i,j,k))*
     %                 (Geomg_dpib(k)*(exp(st1m(i,j))*work2(i,j,k)))*
     %                 (Geomg_z_8(k) / work2m(i,j,k)) + st1(i,j)
*
         work2(i,j,k) = -
     %                 (Cstv_tstr_8+tpt1m(i,j,k))*
     %                 (1.0+Geomg_dpib(k)*(exp(st1m(i,j))-1.))*
     %                 (Geomg_z_8(k) / work2m(i,j,k)**2)*work2(i,j,k)
*
*
*        ADJ Evaluate TRAJ exp(qt1)
*        --------------------------
         st1(i,j)     = Geomg_pib(k)*exp(st1m(i,j))*work2(i,j,k) + st1(i,j)
         work2(i,j,k) = ZERO_8
*
      end do
      end do
      end do
*
*     ADJ of
*     Zero variables
*     --------------
      do k=1,l_nk
      do j=l_miny,l_maxy
      do i=l_minx,l_maxx
         fit1 (i,j,k) = ZERO_8
         fipt1(i,j,k) = ZERO_8
         work1(i,j,k) = ZERO_8
         work2(i,j,k) = ZERO_8
      end do
      end do
      end do
*
      pnerr = vmmuld(-1,0)
*
      return
      end
