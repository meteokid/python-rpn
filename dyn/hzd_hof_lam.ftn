***s/r hzd_hof_lam - applies horizontal diffusion on a given set of fields
*
#include "model_macros_f.h"
      subroutine hzd_hof_lam ( F_u, F_v, F_t, F_w, DIST_DIM, Nk)
*
#include "impnone.cdk"
*
      integer DIST_DIM, Nk
*
      real     F_u(DIST_SHAPE,Nk  ), F_v(DIST_SHAPE,Nk  ),
     %         F_t(DIST_SHAPE,Nk+1), F_w(DIST_SHAPE,Nk+1)
*
*author
*     Abdessamad Qaddouri
*
*revision
* v2_10 - Qaddouri A.       - initial version
* v2_21 - Desgagne M.       - control for diffusion on momentum only
* v3_00 - Desgagne & Lee    - Lam configuration
* v3_10 - Corbeil & Desgagne & Lee - AIXport+Opti+OpenMP
*
*object
* The diffusion includes: second order(Hzd_pwr=1), 
* fourth order(Hzd_pwr=2),
* sixth (Hzd_pwr=3) and eightth order (Hzd_pwr=4) diffusion
*
*arguments
*  Name        I/O        Description
*----------------------------------------------------------------
*  F_u         I/0        see subroutine
*  F_v         I/0            "
*  F_t         I/0            "
*  F_w         I/0            "
*----------------------------------------------------------------
* 
*implicits
#include "fft.cdk"
#include "glb_ld.cdk"
#include "ldnh.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "trp.cdk"
#include "hzd.cdk"
#include "opr.cdk"
#include "schm.cdk"
#include "lun.cdk"
#include "ptopo.cdk"
#include "type.cdk"
#include "ver.cdk"
*
      integer i, j, k, dpwr
      real*8 wk1_8(LDIST_SHAPE,Nk)
      real   wk2(LDIST_SHAPE,Nk)
**
*     __________________________________________________________________
*
      dpwr = Hzd_pwr / 2
      if (Lun_debug_L) write(Lun_out,1000) Hzd_pwr
*
      if ( Hzd_cdiff .gt. 0.0 ) then
*
*        Momentum
*        ~~~~~~~~
c        print *,'hzd_areal on F_u'
c        call hzd_areal(F_u,Hzd_xp0_8,Opr_opsyp0_8,
c    $        l_minx,l_maxx,l_miny,l_maxy,G_ni,G_nj,Nk)
c        do i=1,10
         call hzd_solfft_lam(F_u, wk1_8, Fft_pri_8, 
     %                   Hzd_au_8,Hzd_cu_8,Hzd_deltau_8,
     %                   trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                   trp_12dn,trp_22n,G_nj, dpwr,l_minx, 
     %                   l_maxx,l_miny,l_maxy,Nk,G_ni,l_ni,l_nj,
     %                   trp_12dn,Hzd_xp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                   Ptopo_npex,Ptopo_npey)
c        enddo
c        call hzd_areal(F_u,Hzd_xp0_8,Opr_opsyp0_8,
c    $        l_minx,l_maxx,l_miny,l_maxy,G_ni,G_nj,Nk)
*
c        print *,'hzd_areal on F_v'
c        call hzd_areal(F_v,Opr_opsxp0_8,Hzd_yp0_8,
c    $        l_minx,l_maxx,l_miny,l_maxy,G_ni,G_nj,Nk)
c        do i=1,10
         call hzd_solfft_lam(F_v, wk1_8, Fft_pri_8 ,
     %                   Hzd_av_8,Hzd_cv_8,Hzd_deltav_8,
     %                   trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                   trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                   l_maxx,l_miny,l_maxy,Nk,G_ni,l_ni,l_nj, 
     %                   trp_12dn,Opr_opsxp0_8,Hzd_yp0_8, Hzd_cdiff,
     %                   Ptopo_npex,Ptopo_npey)
c        enddo
c        call hzd_areal(F_v,Opr_opsxp0_8,Hzd_yp0_8,
c    $        l_minx,l_maxx,l_miny,l_maxy,G_ni,G_nj,Nk)
*
*        Mass related fields
*        ~~~~~~~~~~~~~~~~~~~
	 call gem_stop('hzd_hof_lam : ne pas diffuser la masse',-1)
*
*        The temperature: T
*        ~~~~~~~~~~~~~~~~~~
         call hzd_solfft_lam(F_t, wk1_8, Fft_pri_8 ,
     %                   Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                   trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                   trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                   l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                   trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                   Ptopo_npex,Ptopo_npey)
*
*
*****************************
*  3. Nonyhydrostatic model * 
*****************************
*
         if ( .not. Schm_hydro_L ) then
*
*           Vertical wind (physical) 
*           ~~~~~~~~~~~~~~~~~~~~~~~~
            call hzd_solfft_lam(F_w, wk1_8, Fft_pri_8 ,
     %                   Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                   trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                   trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                   l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                   trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                   Ptopo_npex,Ptopo_npey)
*
         endif
*
      endif
*
 1000 format(/,
     $  3X,'PERFORM DEL-',i1,' FFT HORIZONTAL DIFFUSION: (S/R HZD_HOF_LAM)')
*     __________________________________________________________________
*
      return
      end
