! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r pe_zero_topo - Initialize processor topology
*
#include "model_macros_f.h"
*
      subroutine pe_zero_topo (F_npx, F_npy )
      implicit none
*
      integer F_npx, F_npy
*
*author
*     Michel Desgagne - Summer 2006
*
*revision
* v4_03 - Desgagne M.       - initial version, ISST
*
*implicits
#include "ptopo.cdk"
#include "version.cdk"
#include "path.cdk"
#include <clib_interface.cdk>
*
      integer  exdb,ptopo_nml,gnthread
      external exdb,ptopo_nml,gnthread
*
      integer err
*
*-------------------------------------------------------------------
*
      Ptopo_npeOpenMP = gnthread()
      call base_dir_env

      err= clib_mkdir (Path_output_S)
      err= clib_mkdir (Path_work_S  )
      err= clib_mkdir (trim(Path_output_S)//'/casc')

      call  open_status_file2 (trim(Path_output_S)//'/status_mod.dot')
      call write_status_file2 ('_status=ABORT' )
      err = exdb(Version_mod_S//Version_dstp_S,Version_S, 'NON')
*
* Read namelist ptopo from file model_settings
*
      if (ptopo_nml (trim(Path_input_S)//'/model_settings') .eq. 1 ) then
         F_npx = Ptopo_npex
         F_npy = Ptopo_npey
         err = ptopo_nml ('print')
      else
         write (6, 8000)
         F_npx = 0
         F_npy = 0
      endif
*
 8000 format (/,'========= ABORT IN S/R PE_TOPO ============='/)
 8001 format (/,'========= ABORT: Problem to create output/casc=='/)
*
*-------------------------------------------------------------------
*
      return
      end
