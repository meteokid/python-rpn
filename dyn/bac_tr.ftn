***s/r  bac_tr - Equivalent to bac for TRAJECTORY 
*
#include <model_macros_f.h>
*
      subroutine bac_tr( Itr, Itnlh )
*
#include "impnone.cdk"
*
      integer Itr, Itnlh
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_21 - Tanguay M.        - replace xfis by topo
* v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate 
*                           - adapt for tracers in tr3d  
*
*object
*     see id section
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
*  Itr          I           current nonlinear iteration number
*  Itnlh        I           total number of nonlinear iterations
*----------------------------------------------------------------
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "p_geof.cdk"
#include "rhsc.cdk"
#include "nl.cdk"
#include "vt0.cdk" 
#include "vtx.cdk" 
#include "rhscm.cdk"
#include "nlm.cdk"
#include "vt0m.cdk" 
#include "vtxm.cdk" 
#include "ptopo.cdk"
#include "cstv.cdk"
*
*modules
      integer  vmmlod, vmmget, vmmuld
      external vmmlod, vmmget, vmmuld
*
      integer pnerr, pnlod, pnlkey1(17)
*
      real wijk0(LDIST_SHAPE,l_nk),wijk1 (LDIST_SHAPE,l_nk)
      real wtt0m(LDIST_SHAPE,l_nk),wfit0m(LDIST_SHAPE,l_nk)
*
      integer i,j,k
*     ______________________________________________________
*
      if(.not. Schm_hydro_L) call gefstop('bac_tr')
*     ______________________________________________________

      if (Lun_debug_L) write(Lun_out,1000)
*
      pnlkey1(1) = VMM_KEY(st0m)
      pnlkey1(2) = VMM_KEY(pipt0m)
      pnlkey1(3) = VMM_KEY(qt0m)
      pnlkey1(4) = VMM_KEY(fipt0m)
      pnlkey1(5) = VMM_KEY(topo)
      pnlkey1(6) = VMM_KEY(tpt0m)
      pnlkey1(7) = VMM_KEY(tplt0m)
      pnlkey1(8) = VMM_KEY(ut0m)
      pnlkey1(9) = VMM_KEY(vt0m)
      pnlkey1(10)= VMM_KEY(psdt0m)
      pnlkey1(11)= VMM_KEY(tdt0m)
      pnlkey1(12)= VMM_KEY(gptxm)
      pnlkey1(13)= VMM_KEY(gxtxm)
      pnlkey1(14)= VMM_KEY(rum)
      pnlkey1(15)= VMM_KEY(rvm)
      pnlkey1(16)= VMM_KEY(rcnm)
      pnlkey1(17)= VMM_KEY(rthm)
      pnlod = 17 
*
      pnerr = vmmlod(pnlkey1,pnlod)
*
      pnerr = VMM_GET_VAR(st0m)
      pnerr = VMM_GET_VAR(pipt0m)
      pnerr = VMM_GET_VAR(qt0m)
      pnerr = VMM_GET_VAR(fipt0m)
      pnerr = VMM_GET_VAR(topo)
      pnerr = VMM_GET_VAR(tpt0m)
      pnerr = VMM_GET_VAR(tplt0m)
      pnerr = VMM_GET_VAR(ut0m)
      pnerr = VMM_GET_VAR(vt0m)
      pnerr = VMM_GET_VAR(psdt0m)
      pnerr = VMM_GET_VAR(tdt0m)
      pnerr = VMM_GET_VAR(gptxm)
      pnerr = VMM_GET_VAR(gxtxm)
      pnerr = VMM_GET_VAR(rum)
      pnerr = VMM_GET_VAR(rvm)
      pnerr = VMM_GET_VAR(rcnm)
      pnerr = VMM_GET_VAR(rthm)
*
      qpt0_ = 0
      wt0_  = 0
      mut0_ = 0
      multx_= 0
      rvv_  = 0
      r3_   = 0
      r3p_  = 0
*
*     Restore TRAJECTORY
*     ------------------
      do k=1,l_nk
      do j= 1, l_nj
      do i= 1, l_ni
      wfit0m(i,j,k) = fipt0m(i,j,k) + Cstvr_fistr_8(k) + topo(i,j)
      wtt0m (i,j,k) =  tpt0m(i,j,k) + Cstv_tstr_8
      end do
      end do
      end do
*
*PDIR RESERVE=Ptopo_npeOpenMP

      call  bacp_2 (    Itr,  Itnlh,   st0m, pipt0m,  qt0m, 
     %               wfit0m, fipt0m,   topo,  wtt0m, tpt0m, tplt0m,
     %                 ut0m,   vt0m, psdt0m,  tdt0m,
     %                 qpt0,    wt0,   mut0,  multx, gptxm,  gxtxm, 
     %                 rum,  rvm, rthm, r3, r3p, rvv,rcnm,
     %                 nlm_num,nlm_nvm, nlm_nthm,  nl_n3, nl_n3p, 
     $                 nlm_ncnm,wijk0,wijk1,LDIST_DIM, l_nk )

*PDIR RELEASE
*
      pnerr = vmmuld(-1,0)

1000  format (5X,'TRAJ of BACK SUBSTITUTION: (S/R BAC_TR)')

      return
      end
