***s/r inislabfhand - set slab file handler
*
#include <model_macros_f.h>
*
      subroutine inislabfhand(F_slab_S, F_slabfhand, F_prefix_S,F_suffix_S)
*
*implicits
      use v4d_prof, only: Pr_nsim4d
*
#include "impnone.cdk"
*
      character*(*) F_slab_S,F_prefix_S,F_suffix_S
      integer F_slabfhand
*
*author 
*     Joseph Pierre Toviessi/ Vivian Lee (for version v2_21)
*
*revision
* v2_30    Lee V.  - eliminated F_dostep_max in the call sequence
* v2_30              and added the F_suffix_S for file name extension
* v2_31    Lee V.  - activated recording in secs,mins,days,steps...
* v3_02 Tanguay M. - IP3 depend on # iterations when 4dvar_L
*
*object(inislabfhand)
*	set slab file handler, slab number and slab file name
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_slab_S      I           path of slab files
* F_slabfhand   O           slab file handler
* F_prefix_S    I           prefix of slabname
* F_suffix_S    I           suffix of slabname
*
*implicits
#include "dimout.cdk"
#include "lctl.cdk"
#include "cstv.cdk"
#include "out1.cdk"
#include "ptopo.cdk"
#include "out.cdk"
#include "v4dg.cdk"
*
*modules
      integer  slabini, longueur, prog_filename
      external slabini, longueur, prog_filename
**
*
      character*256 slabname_S
      character*50 slabtemp_S
      integer houro,prognum
      integer i,ierr,pnip3, intcstvdt
*
      do i=1,256
         slabname_S(i:i) = ' '
      end do
*     
*     Create filename for slabfile and add extension
*
*     For just the prog in hours
      prognum = nint(dble(Lctl_step)*Cstv_dt_8/3600.)

*     For just the prog in days
      if (Out_unit_S.eq.'D')then
      prognum = nint(dble(Lctl_step)*Cstv_dt_8/3600./24.)
      endif
*     For just the prog in minutes
      if (Out_unit_S.eq.'M')then
      prognum = nint((dble(Lctl_step)*Cstv_dt_8) / 60.)
      endif
*     For just the prog in seconds
      if (Out_unit_S.eq.'S')then
      prognum = nint(dble(Lctl_step)*Cstv_dt_8)
      endif
*     For just the prog in steps
      if (Out_unit_S.eq.'P')then
      prognum = Lctl_step
      endif

*     hour of origin
      houro=Out1_dato(2)/1000000
*
      if (V4dg_conf.ne.0) then
*
         if (.not.V4dg_4dvar_L) then
             pnip3 = V4dg_status
             if (V4dg_conf/100.eq.1.and.V4dg_ad_L)
     %       pnip3 = 20 + V4dg_status
         else
             pnip3 = V4dg_status
             if(V4dg_tl_L) pnip3 = 1000 + Pr_nsim4d
             if(V4dg_ad_L) pnip3 = 2000 + Pr_nsim4d
         endif
         prognum= prognum + pnip3*10000
         ierr= prog_filename(slabtemp_S,F_prefix_s,Out1_dato(1),houro,
     $        -1,-1,Ptopo_myrow,Ptopo_mycol,prognum,Out_ndigits,Out_unit_S)
      else 
         ierr= prog_filename(slabtemp_S,F_prefix_s,Out1_dato(1),houro,
     $        -1,-1,Ptopo_myrow,Ptopo_mycol,prognum,Out_ndigits,Out_unit_S)
      endif
      
      slabname_S = F_slab_S(1:longueur(F_slab_S))
     $               //slabtemp_S(1:longueur(slabtemp_S))
     $               //F_suffix_S(1:longueur(F_suffix_S))
*
      intcstvdt = int(Cstv_dt_8)
      F_slabfhand = slabini(slabname_S(1:longueur(slabname_S)),
     %                  Out1_dato,Lctl_step,intcstvdt,Out1_etik_s)
*
      if (F_slabfhand.lt.0) then
        write(6,*)'CANNOT OPEN SLABFILE',slabname_S(1:longueur(slabname_S))
        call gefstop('inislabfhand')
      endif
     
*
      return
      end
