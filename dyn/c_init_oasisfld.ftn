C**S/R c_init_oasisfld
C=======================================================================
C Author:
C 
C   Sophie Valcke -CERFACS - March 2005
C
*revision
* v3_21 - Valcke S.   - initial MPI version
C
C Language:
C
C   Fortran 77
C
C Description:
C
C   Coupling field initialization
C
C Interface:
C
      SUBROUTINE c_init_oasisfld (id_ni, id_nj)
C
C Includes:
C
#include "impnone.cdk"
#include <model_macros_f.h>
#include "c_cplg.cdk"    
C
C Input Arguments:
C
C     Dimensions of local grid
      INTEGER      :: id_ni, id_nj
C
C Local variables
C 
      INTEGER                     :: il_error, il_partid, il_ou, il_in
      INTEGER                     :: ip_dimp
      PARAMETER (ip_dimp = 5)
      INTEGER, DIMENSION(ip_dimp) :: il_paral
      INTEGER, DIMENSION(2)       :: il_var_nodims
      INTEGER, DIMENSION(4)       :: il_var_shape
      CHARACTER(len=8)            :: cl_sfc
      CHARACTER(len=4)            :: cl_pref
C
C===================================================================
C
      IF (C_cploasis_L) THEN
C
C 1- Partition declaration (CLIM_Box)
C-----------------------------------------------------------------
C
          il_paral (1) = 2
          il_paral (2) = 0
          il_paral (3) = id_ni
          il_paral (4) = id_nj
          il_paral (5) = id_ni
C 
          CALL c_oasis_partition (il_partid, il_paral, ip_dimp, il_error)
          PRINT *, 'CPL- In c_init_oasisfld after  c_oasis_partition'
C
C 2- Field declaration
C-----------------------------------------------------------------
C
C         Rank of coupling fields
          il_var_nodims(1) = 2
C         Number of bundles in coupling field (always 1)
          il_var_nodims(2) = 1      
C         Min and max index for the field 1st and 2nd local dim
          il_var_shape(1)  = 1      
          il_var_shape(2)  = id_ni  
          il_var_shape(3)  = 1      
          il_var_shape(4)  = id_nj  
C
C 
C         Define first 4 characters of field symbolic names
C
          IF (lg_atmos) cl_pref = 'MECA'
          IF (lg_land .and. .not. lg_atmos) cl_pref = 'MECL'
          IF (lg_ocean .and. .not. lg_atmos .and. .not. lg_land) 
     $        cl_pref = 'MECW'
          PRINT *, 'CPL- cl_pref =', cl_pref
C
C         Input fields declaration (prism_get)
C
          CALL hpalloc (p_iga_varidin, ig_sfc_in_dim, il_error, 1)
          DO il_in = 1, ig_sfc_in_dim
            cl_sfc = TRIM(cl_pref)//TRIM(sfc_in_S(il_in))  
            PRINT *, 'CPL- Calling prism_def_var for', cl_sfc
            CALL prism_def_var_proto (iga_varidin(il_in), cl_sfc,
     $          il_partid, il_var_nodims, 1, il_var_shape, 
     $          4, il_error)
          END DO
C
C         Output fields declaration (prism_put)
C
          CALL hpalloc (p_iga_varidou, ig_sfc_out_dim, il_error, 1)
          DO il_ou = 1, ig_sfc_out_dim
            cl_sfc = TRIM(cl_pref)//TRIM(sfc_out_S(il_ou))
            PRINT *, 'CPL- Calling prism_def_var for', cl_sfc
            CALL prism_def_var_proto (iga_varidou(il_ou), cl_sfc, 
     $          il_partid, il_var_nodims, 0, il_var_shape, 4, il_error)
          END DO
C
C 3- PSMILe end of declaration phase 
C-----------------------------------------------------------------
C
          CALL prism_enddef_proto (il_error)  
C
      ENDIF
C
      RETURN
      END SUBROUTINE c_init_oasisfld

 
