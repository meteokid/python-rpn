***s/r vspng_set - Vertical sponge using a vertical modulation of 
*                  the factorized del-2 horizontal diffusion.
*
#include <model_macros_f.h>
*
      subroutine vspng_set
*
#include "impnone.cdk"
*
*
*author    
*     Michel Desgagne  -  November 2000
*
*revision
* v2_11 - Desgagne M.       - initial version
*
*object
*       
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "geomg.cdk"
#include "cstv.cdk"
#include "dcst.cdk"
#include "lun.cdk"
#include "vspng.cdk"
*      
      integer k
      real*8 pis2_8,wh_8,delp_8,TWO_8
      parameter (TWO_8 = 2.0)
**
*     ---------------------------------------------------------------
*     
      Vspng_nk = max(0,min(G_nk,Vspng_nk))
      if ((Cstv_uvdf_8.le.0.0).and.(Cstv_phidf_8.le.0.0)) Vspng_nk = 0
*
      if (Vspng_mf(2).gt.1.) then
         if (Lun_out.gt.0) write (Lun_out,2000)
      else
         if (Vspng_nk.gt.0) then
            if (Lun_out.gt.0) write (Lun_out,2002) Vspng_mf(1),Vspng_nk
            if (Vspng_nk.lt.2) goto 888
            pis2_8= Dcst_pi_8/TWO_8
            delp_8= dble(Geomg_hybm(Vspng_nk))-dble(Geomg_hybm(1))
            do k=1,Vspng_nk
               wh_8= ( sin(pis2_8*(dble(Geomg_hybm(Vspng_nk))-
     $                 dble(Geomg_hybm(k)) ) / (delp_8)))**TWO_8
               Vspng_mf(k) = 1.+(Vspng_mf(1)-1.)*wh_8
            end do
         endif
      endif
*     
 888  do k=1, Vspng_nk
         Vspng_mf(k) = max(1.,Vspng_mf(k))
         if (Lun_out.gt.0) write (Lun_out,2005) Vspng_mf(k),k
      end do
*
 2000 format('USER DEFINED SPONGE LAYER PROFILE')
 2002 format('SPONGE LAYER PROFILE BASED ON: vspng_mf(1)= ',f8.4,
     $       '  AND vspng_nk= ',i4)
 2005 format(f10.5,i5)
*
*     ---------------------------------------------------------------
 999  return
      end
