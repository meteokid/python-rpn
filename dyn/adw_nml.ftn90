!-------------------------------------- LICENCE BEGIN -------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END ---------------------------
#include <model_macros_f.h>

!/**
function adw_nml(F_nmlFileName_S,F_lam_L) result(F_stat)
   implicit none
#include "msg.h"
#include "adw_nml.cdk"
   !@objective Advection default configuration and reading namelists adw_cfgs
   !@arguments
   character(len=*) :: F_nmlFileName_S
   logical F_lam_L
   !@returns
   integer :: F_stat
   !@author Stephane Chamberland, Nov 2009
   !@revisions
   !  YYYY-MM, MY_AUTHOR: original code
!**/
   integer :: fileUnit
   integer, external :: file_open_existing
   !---------------------------------------------------------------------
   Adw_nkbz_L = .true.
   Adw_exdg_L = .false.
   Adw_ckbd_L = .false.
   Adw_mono_L = .true.
   Adw_nosetint_L   = .false.
   Adw_trunc_traj_L = .false.
   Adw_cliptraj_L   = .false.
   Adw_halox  = -1
   Adw_haloy  = -1
   Adw_maxcfl =  1

   F_stat = -1
   fileUnit = file_open_existing(F_nmlFileName_S,'SEQ')
   if (fileUnit>=0) then
      read(fileUnit, nml=adw_cfgs, iostat=F_stat)
      call fclos(fileUnit)
      F_stat = -1 * F_stat
      if (F_stat<0) then
         call msg(MSG_ERROR,'adw_nml - Probleme reading nml adw_cfgs in file: '//trim(F_nmlFileName_S))
      endif
   endif

   if (F_lam_L) then
      Adw_maxcfl = max(1,Adw_maxcfl)
      Adw_halox = Adw_maxcfl + 1
      Adw_haloy = Adw_halox
   else
      Adw_halox = max(3,Adw_halox)
      Adw_haloy = max(2,Adw_haloy)
   endif

   !---------------------------------------------------------------------
   return
end function adw_nml


!/**
subroutine adw_nml_print (msgUnit)
   implicit none
#include "msg.h"
#include "adw_nml.cdk"
!**/
   integer :: msgUnit
   integer, external :: msg_getUnit !TODO: get full interface from <msg.hf>
   !---------------------------------------------------------------------
!   msgUnit = msg_getUnit(MSG_INFO)
   if (msgUnit>=0) write(msgUnit,nml=adw_cfgs)
   !---------------------------------------------------------------------
   return
end subroutine adw_nml_print


!/**
function adw_config() result(F_stat)
   implicit none
   !@objective Establish final Advection configuration
   !@returns
   integer :: F_stat
   !@author Stephane Chamberland, Nov 2009
   !@revisions
   !  YYYY-MM, MY_AUTHOR: original code
#include "glb_ld.cdk" !TODO: remove this dependency
#include "adw_nml.cdk"
!**/
   !---------------------------------------------------------------------
   F_stat = 0
   if (G_lam) then
      adw_maxcfl = max(1,adw_maxcfl)
      Adw_halox = adw_maxcfl + 1
      Adw_haloy = Adw_halox
   else
      Adw_halox = max(3,Adw_halox)
      Adw_haloy = max(2,Adw_haloy)
   endif
   !---------------------------------------------------------------------
   return
end function adw_config


!/**
function adw_getMaxCFL() result(F_maxcfl)
   implicit none
   !@returns
   integer :: F_maxcfl
   !@author Stephane Chamberland, Nov 2009
#include "adw_nml.cdk"
!**/
   !---------------------------------------------------------------------
   F_maxcfl = adw_maxcfl
   !---------------------------------------------------------------------
   return
end function adw_getMaxCFL

