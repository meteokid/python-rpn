! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r get_lnpress3d - get 3D log-pressure using A,B, and p0
*
      subroutine get_lnpress3d(F_lnp, F_p0, NN, F_a_8, F_b_8, 
     $                         F_pref_8, NK, F_datatype)
      implicit none
*
      integer NN, NK,F_datatype
      real F_lnp(NN,NK),F_p0(NN)
      real*8 F_a_8(NK), F_b_8(NK), F_pref_8
*
*author  V.Lee   Nov, 2007 - (p0vtgz v1_03+ Desgagne+ Plante)
*
*revision
* v4_02 - Lee V.            - initial MPI version 
* v4_03 - Girard+Lee        - add press, doc.
*

*object
*       to create a 3D field of the log-pressure (st1)
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_lnp          O    - 3D log-pressure field
* F_p0           I    - incoming 2D surface pressure in diverse forms
* NN             I    - number of points in the 2D field of F_p0
* F_a_8          I    - A
* F_b_8          I    - B
* F_pref_8       I    - a reference pressure
* NK             I    - Number of levels to the 3D log-pressure field
* F_datatype     I    - code for:
*
*                  2 formulae           2 input in p0    model & 6 anal
*
*            0 => ln(p)=   A+B*ln(ps/pref), F_p0=ln(ps/pref),  stg-model
*            1 => ln(p)=ln(A+B*   ps)     , F_p0=   ps      ,  hyb-anal
*            2 => ln(p)=ln(A+B*   ps)     , F_p0=   ps      ,  eta-anal
*            3 => ln(p)=ln(  B*   ps)     , F_p0=   ps      ,  sig-anal
*            4 => ln(p)=ln(A        )     , A in mb.        ,  prs-anal
*            5 => ln(p)=ln(A+B*   ps)     , F_p0=   ps      ,  ecm-anal
*            6 => ln(p)=   A+B*ln(ps/pref), F_p0=   ps      ,  stg-anal
*
*implicits
*
**
      integer i,k
      real*8 lnpref_8
*
*     ---------------------------------------------------------------
*
      lnpref_8 = log(F_pref_8)

      if (F_datatype.eq.0.or.F_datatype.eq.6) then
          do k=1,NK
          do i=1,NN
             F_lnp(i,k) = F_a_8(k) + F_b_8(k)*F_p0(i)
          enddo
          enddo
c     else if (F_datatype.eq.6) then
c         do k=1,NK
c         do i=1,NN
c            F_lnp(i,k) = F_a_8(k) + F_b_8(k)*(log(F_p0(i))-lnpref_8)
c         enddo
c         enddo
      else if (F_datatype.eq.4) then
          do k=1,NK
          do i=1,NN
             F_lnp(i,k) = log(F_a_8(k)*100.)
          enddo
          enddo
      else if (F_datatype.eq.5.or.
     %         F_datatype.eq.2.or.
     %         F_datatype.eq.1) then
          do k=1,NK
          do i=1,NN
             F_lnp(i,k) = log(F_a_8(k) + F_b_8(k)*F_p0(i))
          enddo
          enddo
      else if (F_datatype.eq.3) then
          do k=1,NK
          do i=1,NN
             F_lnp(i,k) = log(           F_b_8(k)*F_p0(i))
          enddo
          enddo
      else 
          print *,'ERROR in get_lnpress3d: Datatype not recognized'
      endif
      return
      end
