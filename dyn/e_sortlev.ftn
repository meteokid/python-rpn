! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
copyright (C) 2001  MSC-RPN COMM  %%%MC2%%%
***s/r e_sortlev - to eliminate redundant levels and sort in increasing order
*
      subroutine e_sortlev (F_rna,F_ip1,LV,LVO)

      implicit none
*
      integer NK, LV,F_ip1(LV),LVO
      real F_rna(LV)
*
*REVISION
* v4_03 - Lee V.            - Adapted for GEMDM
*
*ARGUMENTS
*    NAMES       I/O  TYPE  DESCRIPTION
*    F_rna       level value 
*    F_ip1       ip1code
*    LV          number of incoming levels
*    LVO         number of outgoing levels
*
*
      integer k,i,m,j,n
      real x1
**
*----------------------------------------------------------------------
*
      if (lv.le.1) return
      n = lv
      do i = 1, n-1
         k = i
         do j = i+1, n
            if (F_rna(k) .gt. F_rna(j))  k=j
         enddo
         if (k .ne. i) then
            x1     = F_rna(k)
            m      = F_ip1(k)
            F_rna(k) = F_rna(i)
            F_ip1(k)  = F_ip1(i)
            F_rna(i) = x1
            F_ip1(i)  = m
         endif
      enddo

*     eliminate levels that are redundant in LISTE
      i = 1
      do j=2,n
         if (F_rna(i) .ne. F_rna(j)) then
             i = i+1
             if (i .ne. j) then
                 F_rna(i) = F_rna(j)
                 F_ip1(i) =  F_ip1(j)
             endif
         endif
      enddo
      lvo = i

*
*----------------------------------------------------------------------
      return
      end

