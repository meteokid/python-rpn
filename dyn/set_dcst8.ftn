***function set_dcst8 - initializes geophysical constants (real*8)
*
      integer function set_dcst8 
     $                   (F_val_8, F_liste_S, NOMBRE, F_iun, F_lun_out)
      implicit none
*
      integer NOMBRE,F_iun,F_lun_out
      character * (*) F_liste_S(NOMBRE)
      real*8 F_val_8(NOMBRE)
*
*author
*     M. Desgagne - rpn - 1999
*
*revision
* v2_00 - Desgagne M.       - initial MPI version
* v2_21 - Desgagne M.       - rpn_comm stooge for MPI
* v3_03 - Desgagne M.       - becomes an integer function
*
*object
*	This subroutine reads the file containing the unified
*	CMC-RPN constants to initialize the common DCST starting
*       with F_val_8(1) from the interface.
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_val_8      O    - values for the list of constants in F_liste_S
* F_liste_S    I    - list of the names of constants to be read
* NOMBRE       I    - number of constants to be read
* F_iun        I    - unit where constants are read from
* F_lun_out    I    - unit for standard output
*
*implicits
*
**
      character*10  rdname_S
      character*42  text_S
      character*256 chemin_S,varenv_S,fname_S
      logical flag_L(NOMBRE)
      integer i, ier, cte_ok, longueur
      real*8 rdval_8
      external longueur
*
*     ---------------------------------------------------------------
*
      write (F_lun_out,1000)
      do i=1,NOMBRE
         flag_L(i) = .false.
      end do
*
      fname_S  = 'constantes'
      chemin_S = ' '
*
      varenv_S = 'AFSISIO'
      call getenvc (varenv_S,chemin_S)
      chemin_S(longueur(chemin_S)+1:len(chemin_S)) = '/datafiles/constants/'
      chemin_S(longueur(chemin_S)+1:len(chemin_S)) = 'thermoconsts'
*
      open(F_iun,file=fname_S,iostat=ier,form='FORMATTED',status='OLD',
     $                                         access='SEQUENTIAL')
*
      if (ier.ne.0) then
      write (F_lun_out,2000) chemin_S(1:longueur(chemin_S)),' (AFSISIO)'
      open(F_iun,file=chemin_S,iostat=ier,form='FORMATTED',status='OLD',
     $                                             access='SEQUENTIAL')
      else
         write (F_lun_out,2000) fname_S(1:longueur(fname_S)),' (local)'
      endif
*
      if (ier.eq.0) then
 100     read (F_iun,'(2x,a10,2x,e20.13,2x,a42)',end=2) 
     $         rdname_S,rdval_8,text_S
         do i=1,NOMBRE
            if (F_liste_S(i).eq.rdname_S) then
               F_val_8(i) = rdval_8
               flag_L(i)= .true.
               if (F_liste_S(i).eq.'KARMAN') F_val_8(i) = 0.4d+0
               goto 100
            endif
         end do
         goto 100
 2       close (F_iun)
      endif
*
      cte_ok = 0
*
      do i=1,NOMBRE
         if (flag_L(i)) then
            write (F_lun_out,1005) F_liste_S(i),F_val_8(i)
         else            
            write (F_lun_out,1006) F_liste_S(i)
            cte_ok = -1
         endif
      end do
*
      write (F_lun_out,*)
*
      set_dcst8 = cte_ok
*
 1000 format(
     +/,'INITIALIZATION OF PHYSICAL CONSTANTS: (S/R SET_DCST8)',
     +/,'======================================================')
 1005 format(1x,"THE VALUE OF",1x,a10,2x,"=",1x,e22.13)
 1006 format(" WARNING ==> THE CONSTANT ",a10," DOES NOT EXIST.")
 2000 format (2a)
*
*     ---------------------------------------------------------------
*
      return
      end
