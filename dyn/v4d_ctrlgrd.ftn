***s/r v4d_ctrlgrd - Control gradient of cost function 
*
#include <model_macros_f.h>
*
      subroutine v4d_ctrlgrd () 
*
      use v4d_prof, only: Pr_doobs 
*
#include "impnone.cdk"
*
*author N.Ek / M.Tanguay 
*
*revision
* v3_00 - N.Ek / M.Tanguay  - initial MPI version
* v3_01 - M.Tanguay         - add V4dg_sgvc_L 
*
*object
*  see id section
*	
*arguments
*  none
*
*implicits
#include "v4dg.cdk"
#include "lctl.cdk"
#include "tr3d.cdk"
*
      logical time0_L, time_L
*
      if(V4dg_conf/100.ne.1.or.V4dg_sgvc_L) return
*
*     ----------------------------------------
*     Sensitivity analysis or Twin experiments
*     ----------------------------------------
      if(.not.V4dg_4dvar_L) then
*
*       Verify if INITIAL TIME requested
*       --------------------------------
        time0_L = Lctl_step.eq.0.and.V4dg_inv.ne.1
*
*       Verify if .NOT.INITIAL time requested
*       -------------------------------------
        time_L = Lctl_step.ne.0.and.mod(Lctl_step,V4dg_stepob).eq.0
*
        if(.not.(time0_L.or.time_L)) return
*
*       Evaluate gradient forcing
*       (NOTE: TRAJ is recovered in GRDSTEP)
*       ------------------------------------
        if(V4dg_ad_L) call v4d_grdstep ()
*
*     -----------------------------
*     4D-Var + exchange with 3D-Var
*     -----------------------------
      elseif(V4dg_4dvar_L) then
*
*       Verify if INITIAL TIME requested
*       --------------------------------
        time0_L = Lctl_step.eq.0.and.Pr_doobs(0).gt.0
*
*       Verify if .NOT.INITIAL time requested
*       -------------------------------------
        time_L = Lctl_step.ne.0.and.Pr_doobs(Lctl_step).gt.0
*
        if(.not.(time0_L.or.time_L)) return
*
        if(V4dg_ad_L) then
*
*          Read trajectory for conversion
*          ------------------------------
           V4dg_rwcv = 0 
           call v4d_rwconv()
*
*          Adjoint of
*          Interpolate model states at obs. locations and
*          output the result to be read by 3D-Var 
*          ----------------------------------------------
           call v4d_grdjok() 
*
        endif
*
      endif
*
      return
      end
