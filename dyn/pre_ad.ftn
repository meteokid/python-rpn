***s/r pre_ad - ADJ of pre_tl
*
#include <model_macros_f.h>
*
      subroutine pre_ad
*
      implicit none
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_21 - Tanguay M.        - reduce standard output as in model 
* v2_31 - Tanguay M.        - adapt ADJ for new advection code
* v3_03 - Tanguay M.        - Adjoint NoHyd configuration 
* v3_11 - Tanguay M.        - Add work arrays 
*                           - AIXport+Opti+OpenMP for TLM-ADJ
*
*object
*     see id section
*     ---------------------------------------------------
*     REMARK:INPUT TRAJ:ruw2m, rvw2m, xct1m, yct1m, zct1m
*     ---------------------------------------------------
*
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "geomg.cdk"
#include "rhsc.cdk"
#include "vt1.cdk"
#include "p_geof.cdk"
#include "schm.cdk"
#include "ptopo.cdk"
#include "rhscm.cdk"
#include "vt1m.cdk"
*
*modules
      integer  vmmlod, vmmget, vmmuld
      external vmmlod, vmmget, vmmuld
*
      integer pnerr, pnlod, pnlkey1(60), i, j, k 
*
      real wijk1 (LDIST_SHAPE,l_nk),wijk2 (LDIST_SHAPE,l_nk)
*
      real*8 ZERO_8
      parameter( ZERO_8=0.0)
*     ______________________________________________________
*
      if (Lun_debug_L) write (Lun_out,1000)
*
      pnlkey1(1)  = VMM_KEY(ru)
      pnlkey1(2)  = VMM_KEY(rv)
      pnlkey1(3)  = VMM_KEY(ruw1)
      pnlkey1(4)  = VMM_KEY(ruw2)
      pnlkey1(5)  = VMM_KEY(rvw1)
      pnlkey1(6)  = VMM_KEY(rvw2)
      pnlkey1(7)  = VMM_KEY(xct1)
      pnlkey1(8)  = VMM_KEY(yct1)
      pnlkey1(9)  = VMM_KEY(zct1)
      pnlkey1(10) = VMM_KEY(topo)
      pnlkey1(11) = VMM_KEY(rd)
      pnlkey1(12) = VMM_KEY(rcn)
      pnlkey1(13) = VMM_KEY(r1)
      pnlkey1(14) = VMM_KEY(rth)
      pnlkey1(15) = VMM_KEY(rhell)
      pnlod = 15
      if (.not. Schm_hydro_L) then
         pnlkey1(16) = VMM_KEY(rw)
         pnlkey1(17) = VMM_KEY(rvv)
         pnlkey1(18) = VMM_KEY(r3)
         pnlkey1(19) = VMM_KEY(r3p)
         pnlod = 19
      endif
*
*     TRAJECTORY
*     ----------
      pnlkey1(pnlod+ 1) = VMM_KEY(ruw2m)
      pnlkey1(pnlod+ 2) = VMM_KEY(rvw2m)
      pnlkey1(pnlod+ 3) = VMM_KEY(xct1m)
      pnlkey1(pnlod+ 4) = VMM_KEY(yct1m)
      pnlkey1(pnlod+ 5) = VMM_KEY(zct1m)
      pnlod = pnlod+ 5
*
*     - - - - - - - - - - - - - - -
      pnerr = vmmlod(pnlkey1,pnlod)
*     - - - - - - - - - - - - - - -
      pnerr = VMM_GET_VAR(ru)
      pnerr = VMM_GET_VAR(rv)
      pnerr = VMM_GET_VAR(ruw1)
      pnerr = VMM_GET_VAR(ruw2)
      pnerr = VMM_GET_VAR(rvw1)
      pnerr = VMM_GET_VAR(rvw2)
      pnerr = VMM_GET_VAR(xct1)
      pnerr = VMM_GET_VAR(yct1)
      pnerr = VMM_GET_VAR(zct1)
      pnerr = VMM_GET_VAR(topo)
      pnerr = VMM_GET_VAR(rd)
      pnerr = VMM_GET_VAR(rcn)
      pnerr = VMM_GET_VAR(r1)
      pnerr = VMM_GET_VAR(rth)
      pnerr = VMM_GET_VAR(rhell)
      if (.not. Schm_hydro_L) then
         pnerr = VMM_GET_VAR(rw)
         pnerr = VMM_GET_VAR(rvv)
         pnerr = VMM_GET_VAR(r3)
         pnerr = VMM_GET_VAR(r3p)
      else
         rw_  = 0
         rvv_ = 0
         r3_  = 0
         r3p_ = 0
      endif
*
*     TRAJECTORY
*     ----------
      pnerr = VMM_GET_VAR(ruw2m)
      pnerr = VMM_GET_VAR(rvw2m)
      pnerr = VMM_GET_VAR(xct1m)
      pnerr = VMM_GET_VAR(yct1m)
      pnerr = VMM_GET_VAR(zct1m)
*
*     Zero adjoint work arrays
*     ------------------------  
      do k=1,l_nk
      do j=l_miny,l_maxy
      do i=l_minx,l_maxx
      wijk1(i,j,k) = ZERO_8
      wijk2(i,j,k) = ZERO_8
      enddo
      enddo
      enddo
*
      call prep_2_ad ( ru    ,rv    ,ruw1 ,ruw2 ,rvw1 ,rvw2 ,xct1 ,yct1 ,zct1  , topo,
     %                 rd    ,rcn   ,r1   ,rth  ,rw   ,rvv  ,r3   ,r3p  ,rhell ,
     %                 wijk1 ,wijk2 ,
     %                                     ruw2m,      rvw2m,xct1m,yct1m,zct1m,
     %                 LDIST_DIM,l_ni,l_nj,l_nk )
*
      pnerr = vmmuld(-1,0)

1000  format(3X,'ADJ of COMPUTE PRE-COMPUTATIONS: (S/R PRE_AD)')

      return
      end
