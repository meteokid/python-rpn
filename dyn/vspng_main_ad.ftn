***s/r vspng_main_ad - ADJ of vspng_main_tl 
*
#include <model_macros_f.h>
*
      subroutine vspng_main_ad
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_21 - Tanguay M.        - initial MPI version
* v2_30 - Edouard S.        - replace Schm_elast_L by Schm_cptop_L
* v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate 
*                           - change name 
*
*object
*     see id section
*     ------------------------
*     REMARK:INPUT TRAJ:pipt1m
*     ------------------------
*	
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "geomg.cdk"
#include "cstv.cdk"
#include "vspng.cdk"
#include "vt1.cdk"
#include "vtx.cdk"
#include "p_geof.cdk"
#include "vt1m.cdk"
*
*modules
      integer  vmmlod,vmmuld,vmmget
      external vmmlod,vmmuld,vmmget
*
      integer pnerr, pnlod, pnlkey1(25), i, j, k
      real*8  ONE_8,ZERO_8
      parameter( ONE_8 = 1. )
      parameter( ZERO_8= 0. )
*
*     _________________________________________________________________
*
      if (Vspng_nk.lt.1) return
*     ______________________________________________________
*
      if( .not. Schm_hydro_L ) call gefstop('vspng_main_ad')
      if(       Schm_psadj_L ) call gefstop('vspng_main_ad')
      if( .not. Schm_cptop_L ) call gefstop('vspng_main_ad')
*     ______________________________________________________
*
      if (Lun_debug_L) write (Lun_out,1000) Vspng_nk
*
*     ADJ of
***********************************************
*  $. Indirect diffusion of s & q through pi' *
***********************************************
*
      pnlkey1(1)  = VMM_KEY(pipt1 )
      pnlkey1(2)  = VMM_KEY(qt1   )
      pnlkey1(3)  = VMM_KEY(st1   )
      pnlkey1(4)  = VMM_KEY(ut1   )
      pnlkey1(5)  = VMM_KEY(vt1   )
      pnlkey1(6)  = VMM_KEY(psdt1 )
      pnlkey1(7)  = VMM_KEY(tpt1  )
      pnlkey1(8)  = VMM_KEY(fipt1 )
      pnlkey1(9)  = VMM_KEY(tdt1  )
      pnlkey1(10) = VMM_KEY(tt1   )
      pnlkey1(11) = VMM_KEY(fit1  )
      pnlkey1(12) = VMM_KEY(topo  )
      pnlkey1(13) = VMM_KEY(tplt1 )
      pnlkey1(14) = VMM_KEY(pipt1m)
      pnlod = 14
*
      pnerr = vmmlod(pnlkey1,pnlod)
*
      pnerr = VMM_GET_VAR(pipt1 )
      pnerr = VMM_GET_VAR(qt1   )
      pnerr = VMM_GET_VAR(st1   )
      pnerr = VMM_GET_VAR(ut1   )
      pnerr = VMM_GET_VAR(vt1   )
      pnerr = VMM_GET_VAR(psdt1 )
      pnerr = VMM_GET_VAR(tpt1  )
      pnerr = VMM_GET_VAR(fipt1 )
      pnerr = VMM_GET_VAR(tdt1  )
      pnerr = VMM_GET_VAR(tt1   )
      pnerr = VMM_GET_VAR(fit1  )
      pnerr = VMM_GET_VAR(topo  )
      pnerr = VMM_GET_VAR(tplt1 )
      pnerr = VMM_GET_VAR(pipt1m)
*
      if (Cstv_phidf_8.gt.0.) then
*
      do k=1,G_nk
      do j= 1+pil_s, l_nj-pil_n
      do i= 1+pil_w, l_ni-pil_e
*
*        ADJ 
*        ---
         pipt1(i,j,k) = sngl(
     %                ( dble(  qt1(i,j,k)) ) /
     %                ( Geomg_z_8(k) + dble(pipt1m(i,j,k)) )
     %                      ) + pipt1(i,j,k)
         qt1(i,j,k)   = ZERO_8
*
      end do
      end do
      end do
*
      do j= 1+pil_s, l_nj-pil_n 
      do i= 1+pil_w, l_ni-pil_e 
*
*        ADJ
*        ---
         pipt1 (i,j,G_nk) = ( dble(st1(i,j)        /geomg_pib(G_nk)))/
     %                 (ONE_8+dble(pipt1m(i,j,G_nk)/geomg_pib(G_nk)))
     %                 + pipt1 (i,j,G_nk)
         st1(i,j)         = ZERO_8
*
      end do
      end do
*
      endif
*
      wt1_  = 0
      qpt1_ = 0
      mut1_ = 0
      multx_= 0
*
c*PDIR RESERVE=Macr_cpud

*     ADJ 
*     ---
      call vspng_drv_ad ( ut1 , vt1 , psdt1, tpt1, fipt1, tdt1,
     %                    tt1 , fit1, tplt1, qt1 , pipt1, wt1 ,
     %                    qpt1, mut1, multx, st1 , topo ,
     %                    LDIST_DIM, G_nk)
*
c*PDIR RELEASE
*
      pnerr = vmmuld(-1,0)
*    
 1000 format(/,3X,
     $ 'DEL-2 SPONGE LAYER ON TOP ',I3,' LAYERS: (S/R VSPNG_MAIN_AD)')
*
      return
      end
