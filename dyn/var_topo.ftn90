!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r var_topo - varies topography incrementally from analysis
!                 topography to target topography
!
#include "model_macros_f.h"
!
      subroutine var_topo()
!
      implicit none
!
!author
!     Sylvie Gravel
!
!revision
! v3_11 - Gravel S.         - initial version
! v4_05 - Lepine M.         - VMM replacement with GMM
!
!object
! (see above)
!
!arguments
!        None
!
!implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "p_geof.cdk" 
#include "lctl.cdk"
#include "dcst.cdk"
#include "vtopo.cdk"
#include "vt1.cdk"
!
!modules
!
      integer i,j
!*
      real*8 lt, pio2, f, atime, two
      parameter (two = 2.0d0)
!     __________________________________________________________________
!
      gmmstat = gmm_get(gmmk_topo_s,topo,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'var_topo ERROR at gmm_get(topo)'
      gmmstat = gmm_get(gmmk_topo1_s,topo1,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'var_topo ERROR at gmm_get(topo1)'
      gmmstat = gmm_get(gmmk_dtopo_s,dtopo,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'var_topo ERROR at gmm_get(dtopo)'
!
      if(Vtopo_ndt.eq.0)then
         call handle_error(-1,'var_topo','var_topo : Vtopo_ndt must be > 0')
      endif
      lt = Vtopo_ndt
      pio2 = Dcst_pi_8 / two

      f = min(Lctl_step-Vtopo_start+1,Vtopo_ndt)
      atime  = (cos(pio2 * (f-1.)/ lt))**2 &
             - (cos(pio2 *  f    / lt))**2

      do j= 1, l_nj 
      do i= 1, l_ni
         topo1 (i,j)  = topo(i,j)
         topo (i,j)   = topo(i,j)  + atime * dtopo(i,j)
      end do
      end do
!
!
!     __________________________________________________________________
!
      return
      end
