***s/r rhs_ad - ADJ of rhs_tl 
*
#include <model_macros_f.h>
*
      subroutine rhs_ad()
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_21 - Tanguay M.        - reduce standard output as in model 
* v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate 
*                           - adapt for tracers in tr3d  
*
*object
*     see id section
*     ----------------------------------------
*     REMARK: INPUT TRAJ:tpm (pour tm), qm, sm
*     ----------------------------------------
*
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "schm.cdk"
#include "lun.cdk"
#include "orh.cdk"
#include "p_geof.cdk"
#include "rhsc.cdk"
#include "vt1.cdk"
#include "ptopo.cdk"
#include "cstv.cdk"
#include "vt1m.cdk"
*
*modules
      integer  vmmlod, vmmget, vmmuld
      external vmmlod, vmmget, vmmuld 
*
      integer  pnerr, pnlod, pnlkey1(25), i, j, k 
*
      real wtt1m(LDIST_SHAPE,l_nk)
*     ______________________________________________________
*
      if(.not. Schm_hydro_L) call gefstop('rhs_ad')
*     ______________________________________________________
*
      if(Lun_debug_L) write (Lun_out,1000)
*
      pnlkey1( 1) = VMM_KEY(ru)
      pnlkey1( 2) = VMM_KEY(rv)
      pnlkey1( 3) = VMM_KEY(rcn)
      pnlkey1( 4) = VMM_KEY(rth)
      pnlkey1( 5) = VMM_KEY(oru)
      pnlkey1( 6) = VMM_KEY(orv)
      pnlkey1( 7) = VMM_KEY(orcn)
      pnlkey1( 8) = VMM_KEY(orth)
      pnlkey1( 9) = VMM_KEY(ruw1)
      pnlkey1(10) = VMM_KEY(rvw1)
      pnlkey1(11) = VMM_KEY(ut1)
      pnlkey1(12) = VMM_KEY(vt1)
      pnlkey1(13) = VMM_KEY(tt1)
      pnlkey1(14) = VMM_KEY(qt1)
      pnlkey1(15) = VMM_KEY(fit1)
      pnlkey1(16) = VMM_KEY(st1)
      pnlkey1(17) = VMM_KEY(tdt1)
      pnlkey1(18) = VMM_KEY(psdt1)
      pnlod = 18 
*
      pnlkey1(pnlod + 1 ) = VMM_KEY(tpt1m)
      pnlkey1(pnlod + 2 ) = VMM_KEY(qt1m)
      pnlkey1(pnlod + 3 ) = VMM_KEY(st1m)
      pnlod = pnlod + 3 
*
*     - - - - - - - - - - - - - 
      pnerr = vmmlod(pnlkey1,pnlod)
*     - - - - - - - - - - - - - 
      pnerr = VMM_GET_VAR(ru)
      pnerr = VMM_GET_VAR(rv)
      pnerr = VMM_GET_VAR(rcn)
      pnerr = VMM_GET_VAR(rth)
      pnerr = VMM_GET_VAR(oru)
      pnerr = VMM_GET_VAR(orv)
      pnerr = VMM_GET_VAR(orcn)
      pnerr = VMM_GET_VAR(orth)
      pnerr = VMM_GET_VAR(ruw1)
      pnerr = VMM_GET_VAR(rvw1)
      pnerr = VMM_GET_VAR(ut1)
      pnerr = VMM_GET_VAR(vt1)
      pnerr = VMM_GET_VAR(tt1)
      pnerr = VMM_GET_VAR(qt1)
      pnerr = VMM_GET_VAR(fit1)
      pnerr = VMM_GET_VAR(st1)
      pnerr = VMM_GET_VAR(tdt1)
      pnerr = VMM_GET_VAR(psdt1)
*
      pnerr = VMM_GET_VAR(tpt1m)
      pnerr = VMM_GET_VAR(qt1m)
      pnerr = VMM_GET_VAR(st1m)
*
      if (.not. Schm_hydro_L) then
*
*        **********************
*        ADJ not done in RHS_AD
*        **********************
*
      else
         rw_   = 0
         rvv_  = 0
         orw_  = 0
         orvv_ = 0
         wt1_  = 0
         topo_ = 0
         fipt1_= 0
         mut1_ = 0
      endif

      if (.not. Schm_hydro_L) then
*
*        **********************
*        ADJ not done in RHS_AD
*        **********************
*
      endif
*
*     Restore TRAJECTORY
*     ------------------
      do k=1,l_nk
      do j= 1, l_nj
      do i= 1, l_ni
      wtt1m(i,j,k) =  tpt1m(i,j,k) + Cstv_tstr_8
      end do
      end do
      end do

*     Perform the computation in the first 
*     cycle of Crank-Nicholson procedure only
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      if ( Orh_icn .eq. 1 ) then

*PDIR RESERVE=Ptopo_npeOpenMP

         call rhsp_2_ad  (    ru,   rv,   rcn,   rth,   rw,  rvv,
     %                       oru,  orv,  orcn,  orth,  orw, orvv,
     %                      ruw1, rvw1,   ut1,   vt1,  tt1,  qt1,   
     %                      fit1,  st1,  tdt1, psdt1, 
     %                       wt1, topo, fipt1,  mut1,
*
     %                                               wtt1m, qt1m,
     %                            st1m,
*
     %                       LDIST_DIM,l_nk  )


*PDIR RELEASE

      else
*
         if (.not. Schm_hydro_L) then
*
*        **********************
*        ADJ not done in RHS_AD
*        **********************
*
         endif

         do k=1,l_nk
         do j= 1, l_nj
         do i= 1, l_ni
*
            orth(i,j,k) = rth(i,j,k) + orth(i,j,k)
             rth(i,j,k) = 0.
*
            orcn(i,j,k) = rcn(i,j,k) + orcn(i,j,k)
             rcn(i,j,k) = 0.
*
            orv (i,j,k) = rv (i,j,k) + orv (i,j,k)
             rv (i,j,k) = 0.
*
            oru (i,j,k) = ru (i,j,k) + oru (i,j,k)
             ru (i,j,k) = 0.
*
         end do
         end do
         end do
*
      endif
*
      pnerr = vmmuld(-1,0)
*
1000  format(3X,'ADJ of COMPUTE THE RIGHT-HAND-SIDES: (S/R RHS_AD)',/)

      return
      end
