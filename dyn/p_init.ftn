***s/r p_init - initialize RPN physics
*
#include "model_macros_f.h"
*
      subroutine p_init
*
#include "impnone.cdk"
*
*author
*     michel roch - rpn - march 1994
*
*revision
* v2_00 - Desgagne M.       - initial MPI version (from setrpnp v1_03)
* v2_10 - Toviessi J-P.     - combined the initialization of common
* v2_10                       blocks on physics buses into one routine
* v2_10 - Lee V.            - modified to output any variable from the 
* v2_10                       physics and added call to set_slab
* v2_20 - Lee V.            - enable output for entry bus
* v2_21 - J. P. Toviessi    - change variable name "Slab" to "Pslab"
* v2_30 - Lee V.            - changed Pslab_pnvpd to Pslab_mxout,
* v2_30                       added Pslab_xnio
* v2_31 - Lee V.            - remove call to busvar and busent
* v3_00 - Desgagne & Lee    - Lam configuration
* v3_02 - Dugas B.          - account for a possible second call to the physics
* v3_11 - A. Plante         - Add call to set_dia for LAM for time-series
* v3_21 - Valcke S.         - Initialize coupling fields
*
*object
*	See above ID.
*	
*arguments
*	none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "dimout.cdk"
#include "mem.cdk"
#include "p_bus.cdk"
#include "busind.cdk"
#include "schm.cdk"
*
**
      integer err
*
*     ---------------------------------------------------------------
*
      h2o_ntr  = 0
      phyt_ntr = 0
      if (.not.Schm_phyms_L) return
*
      if (lun_out.gt.0) write(Lun_out,1000)
*
*C      Initialize physics configuration
*       --------------------------------
*
      call p_set()
*
*C      Initialize coupling fields
*       --------------------------
*
      call c_init_cplfld (G_ni, G_nj)
*
*C      Initialize zonal, grid points and dynamic diagnostics
*       -----------------------------------------------------
*
      call set_dia()

      if (.not.G_lam) then
*
*C      computes FCPKUO flags and weights
*       ---------------------------------
*
      call p_fcpfw()
*
*C      computes weights and indices for (optional) second physics
*       ----------------------------------------------------------
*
      call p_psetiw()
*
*C      computes vertical diffusion amplification factor
*       ------------------------------------------------
*      
      call p_vlsp()
      endif
*
*C      initializes physics confiduration
*       -------------------------------------------
*
      call p_config( )
*
      P_bphy_top  = p_bper_top+p_bdyn_top+p_bvol_top+p_bent_top
*
      if (lun_out.gt.0) then
         write(lun_out,*) 'p_bper_top=',p_bper_top
         write(lun_out,*) 'p_bdyn_top=',p_bdyn_top
         write(lun_out,*) 'p_bvol_top=',p_bvol_top
         write(lun_out,*) 'p_bent_top=',p_bent_top
      endif
*
      if (Mem_phyncore_L) then
         call hpalloc (Phy_busper3D_,p_bper_siz*p_nj,err,1)
      endif
*
 1000 format(/,'INITIALIZATION OF CMC/RPN PHYSICS PACKAGE (S/R P_INIT)',
     +       /,'=====================================================')
*
*     ---------------------------------------------------------------
*
      return
      end
