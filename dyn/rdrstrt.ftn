***s/r rdrstrt - Read the restart file
*
#include "model_macros_f.h"
*
      subroutine rdrstrt ()
*
#include "impnone.cdk"
*
*author
*     M. Desgagne - Mars 2000
*
*revision
* v2_00 - Desgagne M.       - initial MPI version
* v2_10 - Desgagne M.       - introduce WA files
* v2_30 - Dugas B.          - call ouvrstrt to open restrart file
* v2_30 - Corbeil L.        - Added reading of pres_surf and pres_top
* v2_31 - Desgagne M.       - Add Tr2d tracers
* v3_00 - Desgagne & Lee    - Lam configuration
* v3_21 - Valcke, S.        - Oasis coupling: Removed waread of c_cplg_step
* v3_21 - Lee V.            - Remove Tr2d tracers
*
*object
*	
*arguments
*	none
*
*implicits
#include "lun.cdk"
#include "init.cdk"
#include "rstr.cdk"
#include "lctl.cdk"
#include "schm.cdk"
#include "mem.cdk"
#include "p_bus.cdk"
#include "c_cplg.cdk"
#include "glb_ld.cdk"
#include "pres.cdk"
#include "pilot.cdk"
#include "zblen.cdk"
*
**
      integer adr,ier,dim,current_nest
      integer vmmckmx,fclos,ouvrstrt
      external vmmckmx,fclos,ouvrstrt
*
*     ---------------------------------------------------------------
*
      Rstri_sdon = 0
*
      if (Lun_rstrt .le. 0) Lun_rstrt = ouvrstrt( )
*
      if (Rstri_rstn_L) then
         call waopen (Lun_rstrt)
         call waread (Lun_rstrt,Lctl_step   ,1,1)
         call waread (Lun_rstrt,Rstri_idon_L,2,1)
         adr = 3
         if (Schm_phyms_L.and.Mem_phyncore_L) then
            call waread (Lun_rstrt,Phy_busper3D,adr,p_bper_siz*p_nj)
            adr = adr + p_bper_siz*p_nj
            call waread (Lun_rstrt,Rstri_half_L,adr,1)
            adr = adr + 1
            if (Init_balgm_L .and. .not.Rstri_idon_L .and. Rstri_half_L)
     $      then
            call hpalloc(Phy_busper3D_digf_,p_bper_siz*p_nj,ier,1)
            call waread (Lun_rstrt,Phy_busper3D_digf,adr,
     $                                 p_bper_siz*p_nj)
            adr = adr + p_bper_siz*p_nj
            endif
         endif 
         call waread (Lun_rstrt, pres_surf ,adr, 1)
         adr = adr + 1
         call waread (Lun_rstrt, pres_top  ,adr, 1)
         adr = adr + 1
         call waread (Lun_rstrt, current_nest  ,adr, 1)
         call datf2p (Pil_current_S,current_nest)
         if(Schm_theoc_L)then
            adr = adr + 1
            call waread (Lun_rstrt,Zblen_hmin,adr, 1)
         endif
*
         call waclos(Lun_rstrt)
         ier = fclos(Lun_rstrt)  
      endif
*
*     ---------------------------------------------------------------
*      
      return
      end
