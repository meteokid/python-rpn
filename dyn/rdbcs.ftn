! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
copyright (C) 2001  MSC-RPN COMM  %%%MC2%%%
***s/r rdbcs - For reading cascade BCS pilot files where
*                 BCS01 files were written after advection and
*                 BCS02 files were written after physics
#include "model_macros_f.h"
*
      subroutine rdbcs ( fs, fw, nis, njs, niw, njw, nk, unf,nbits )
      implicit none
*
      integer nis,njs,niw,njw,nk,unf,nbits
      real fs (nis,njs*2,nk), fw (niw*2,njw,nk)
*
      character*4 nomvar
      integer k,ni1,nj1,ni2,nj2,nka,nb,ns,nw
      real, dimension (:), pointer :: wkc,wkd
*
*-----------------------------------------------------------------------
*
      nb = 0
      if (nbits.ge.32) then
         read (unf) fs,fw
      else
         ns = (nis*njs*2*nbits+120+32-1)/32
         allocate (wkc(ns))
         nw = (niw*njw*2*nbits+120+32-1)/32
         allocate (wkd(nw))
         do k=1,nk
            read (unf) wkc,wkd
            call xxpak (fs(1,1,k), wkc, nis, njs*2, -nbits, nb, 2)
            call xxpak (fw(1,1,k), wkd, niw*2, njw, -nbits, nb, 2)
         end do
         deallocate (wkc,wkd)
      endif
*
*-----------------------------------------------------------------------
      return
      end
*
