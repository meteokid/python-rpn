! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
#if defined (DOC)
*
*
*revision
* v2_10 - Desgagne M.         - removed MITH (not used) 
* v3_02 - Plante A.           - add key Schm_wload_L for water loading
* v3_03 - Pellerin P.         - add key Schm_offline_L
*
***comdeck schm.cdk
*
*______________________________________________________________________
*                                                                      |
*  VARIABLES ASSOCIATED WITH CONTROLLING SCHEMES USED IN THE MODEL     |
*                                         (set_schm)                   |
*______________________________________________________________________|
*                    |                                                 |
* NAME               | DESCRIPTION                                     |
*--------------------|-------------------------------------------------|
* Schm_hydro_L       | .true. -> hydrostatic run                       |
*                    | .false.-> non-hydrostatic run                   |
* Schm_moist_L       | .true.-> model has moisture                     |
* Schm_nkbz_L        | .true.-> not-a-knot bc for z-spline             |
*                    | .false.-> natural bc for z-spline               |
* Schm_phyms_L       | .true. PHYSICS package is used in model run     |
*                    | .false. No PHYSICS used                         |
* Schm_chems_L       | .true. CHEMISTRY package is used in model run   |
*                    | .false. No CHEMISTRY used                       |
* Schm_hdlast_L      | .true.-> physics before horizontal diffusion    |
* Schm_adcub_L       | .true.-> cubic interpolation for                |
*                    |                 advection (RU,RV) -> (PHI)      |
*                    | .false.  linear interpolotion used instead      |
* Schm_psadj_L       | .true.->  ps adjust is activated (at every time |
*                    |         step, the integral of ps over the domain|
*                    |         is restored to the value of the previous|
*                    |         time step; afterward, q and s are re-   |
*                    |         computed;this can be done in            |
*                    |                           hydrostatic mode only)|
* Schm_wload_L       | .true.-> Effet of water loading included        |
* Schm_theoc_L       | .true.-> theoretical case                       |
* Schm_sfix_L        | .true.-> fix surface values to those of l_nk-1  |
* Schm_itcn          | number of iterations for Crank-Nicholson        |
* Schm_modcn         | frequency of Crank-Nicholson procedure          |
* Schm_xwvt3         | type of extrapolation for wind calculation      |
*                    | at time t-dt/2 (th):                            |
*                    |    =0  => two time levels (t1, t2)              |
*                    |    =1  => two time levels (t1, t2) for u,v      |
*                    |         three time levels for vertical wind     |
*                    |    =2  => three time levels (t1, t2, t3)        |
* Schm_itnlh         | number of iterations to solve non-linear        |
*                    | Helmholtz problem                               |
* Schm_itraj         | number of iterations to compute trjectories     |
* Schm_nith          | number of vertical modes treated implicitely    |
* Schm_offline_L     | run without the dynamical kernel (GEM)          |
* Schm_chems_S       | Chemical scheme to use ('NIL' if none)          |
* Schm_zdotlag_L     | Zdot computed in a Lagrangian way               |
* Schm_zdotMid_L     | Zdot computed in the middle of the trajectory   |
*----------------------------------------------------------------------
*
#endif
      logical Schm_hydro_L, Schm_moist_L, Schm_nkbz_L , 
     $        Schm_phyms_L, Schm_adcub_L, Schm_psadj_L,
     $        Schm_hdlast_L,Schm_wload_L, Schm_pcsty_L, Schm_chems_L,
     $        Schm_pheat_L, Schm_theoc_L ,Schm_sfix_L,  Schm_offline_L,
     $        Schm_zdotlag_L,Schm_zdotMid_L
*
      integer Schm_itcn , Schm_modcn, Schm_xwvt3, 
     %        Schm_itnlh, Schm_itraj, Schm_nith
*
      character*12 Schm_etape_S
*
      MARK_COMMON_BEG (schm_l)
      common / schm_l / 
     $         Schm_hydro_L, Schm_moist_L, Schm_nkbz_L , 
     $         Schm_phyms_L, Schm_adcub_L, Schm_psadj_L,
     $         Schm_hdlast_L,Schm_wload_L, Schm_pcsty_L, Schm_chems_L, 
     $         Schm_pheat_L, Schm_theoc_L ,Schm_sfix_L,  Schm_offline_L,
     $         Schm_zdotlag_L,Schm_zdotMid_L
      MARK_COMMON_END (schm_l)
*
      MARK_COMMON_BEG (schm_i)
      common / schm_i / Schm_itcn , Schm_modcn, Schm_xwvt3, 
     %                  Schm_itnlh, Schm_itraj, Schm_nith
      MARK_COMMON_END (schm_i)
      MARK_COMMON_BEG (schm_s)
      common / schm_s / Schm_etape_S
      MARK_COMMON_END (schm_s)
*
