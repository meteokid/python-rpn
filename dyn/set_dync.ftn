***   s/r set_dync - initialize the dynamics model configuration
*
#include "model_macros_f.h"
*
      subroutine set_dync
      implicit none
*
*author
*     M. Desgagne - V. Lee ( after version v1_03 of setdync )
*
*revision
* v2_00 - Desgagne/Lee       - initial MPI version
* v2_10 - Lee V.             - correction to call to pstune
* v2_20 - Desgagne M.        - fnom on Wafiles now in p_set
* v2_30 - Desgagne M.        - entry vertical interpolator in gemdm
* v3_00 - Desgagne & Lee    - Lam configuration
* v3_30 - Desgagne M.        - Add calls to: set_opr and adw_set
*
*object
*
*arguments
*	none
*
*implicits
#include "glb_pil.cdk"
#include "glb_ld.cdk"
#include "lun.cdk"
#include "cstv.cdk"
#include "grd.cdk"
#include "schm.cdk"
#include "pres.cdk"
#include "dcst.cdk"
#include "type.cdk"
#include "ver.cdk"
#include "ptopo.cdk"
*
*modules
*
      integer k,err,istat, longueur
      real*8 one, half, quarter, xxx
      parameter( one = 1.d0, half = .5d0, quarter = .25d0 )
*
*     ---------------------------------------------------------------

      if (lun_out.gt.0) then
          write(Lun_out,*)'SETTING up OPR,ADW,...(S/R SET_DYNC)'
          write(Lun_out,*)'===================================='
      endif
*     
      if (Cstv_pitop_8.eq.-one) 
     $        Cstv_pitop_8 = dble(Pres_top)
      if (Cstv_pisrf_8.eq.-one) Cstv_pisrf_8 = dble(Pres_surf)
*
      if (lun_out.gt.0) then
         write(Lun_out,*) 'POSSIBLE MODIFICATION OF :'
         write(Lun_out,*) 'Cstv_pitop_8  = ',Cstv_pitop_8,'  PASCALS'
         write(Lun_out,*) 'Cstv_pisrf_8  = ',Cstv_pisrf_8,'  PASCALS'
      endif
*     
      xxx = quarter*(one-Dcst_cappa_8)*Ver_epsilon_8
      Ver_alphat_8 = ( Ver_idz_8%t(1) - half*Ver_epsilon_8 ) /
     $               ( Ver_idz_8%t(1) + half*Ver_epsilon_8 )
      Ver_cst_8    = one / Ver_gokt2RT_8 /
     $               ( Ver_idz_8%t(1) + half*Ver_epsilon_8 )
      Ver_cstp_8   = ( Ver_idz_8%t(1) - half - xxx*Ver_dz_8%t(1) ) /
     $               ( Ver_idz_8%t(1) + half*Ver_epsilon_8 )
*
      Ver_alphas_8 = ( Ver_idz_8%t(G_nk+1) - half*Dcst_cappa_8 ) /
     $               ( Ver_idz_8%t(G_nk+1) + half*Dcst_cappa_8 )
      Ver_css_8    = one / Ver_gokt2RT_8 /
     $               ( Ver_idz_8%t(G_nk+1) + half*Dcst_cappa_8 )
      Ver_cssp_8   = ( Ver_idz_8%t(G_nk+1) + half - xxx*Ver_dz_8%t(G_nk+1) ) /
     $               ( Ver_idz_8%t(G_nk+1) + half*Dcst_cappa_8 )
*
      call set_opr()
      call adw_set()
*
*     ---------------------------------------------------------------
*
      return
      end
