***s/r hzd_ho_tr  - Equivalent to hzd_ho for TRAJECTORY 
*                   (F_pip, F_qp (No Hyd) ONLY)
*
#include <model_macros_f.h>
*
      subroutine hzd_ho_tr (F_pip,F_qp,DIST_DIM,Nk)
*
#include "impnone.cdk"
*
      integer DIST_DIM, Nk
      real     F_pip(DIST_SHAPE,Nk), F_qp(DIST_SHAPE,Nk)
*
*author
*     M.Tanguay
*
*revision
* v2_21 - Tanguay M.        - initial MPI version
* v2_31 - Tanguay M.        - TRAJ of control for diffusion on momentum only
* v3_00 - Tanguay M.        - adapt to restructured hzd_ho 
* v3_03 - Tanguay M.        - Adjoint NoHyd configuration
*
*object
*     see id section
*
*arguments
* 
*implicits
#include "glb_ld.cdk"
#include "glb_pil.cdk"
#include "ldnh.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "trp.cdk"
#include "hzd.cdk"
#include "opr.cdk"
#include "schm.cdk"
#include "geomg.cdk"
#include "lun.cdk"
#include "ptopo.cdk"
*
      integer dpwr, i0,in,j0,jn,Gni,i,j,k
      real*8 wk1_8 (LDIST_SHAPE,Nk)
      real   wk2 (LDIST_SHAPE,Nk)
      real*8, dimension(:)  , allocatable :: wk_evec_8
**
*     __________________________________________________________________
*
      Gni = G_ni-Lam_pil_w-Lam_pil_e
      dpwr = Hzd_pwr / 2
      if (Lun_debug_L) write(Lun_out,1000) Hzd_pwr
*
      if (Hzd_uvwdt_L) return
*
      if ( Hzd_cdiff .gt. 0.0 ) then
*
         allocate ( wk_evec_8(Gni*Gni) )
         do j=1,Gni
         do i=1,Gni
           wk_evec_8((j-1)*Gni+i)=Opr_xevec_8((j+Lam_pil_w-1)*G_ni+i+Lam_pil_w)
         enddo
         enddo
*
*     Save pi' for the diffusion of q'
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         if ( (.not.Schm_hydro_L) .and. Schm_difqp_L ) then
            do k = 1, Nk
            do j = 1+pil_s,l_nj-pil_n
            do i = 1+pil_w,l_ni-pil_e
               wk2(i,j,k) = F_pip(i,j,k)
            end do
            end do
            end do
         endif
*
*     The hydrostatic pressure: pi'  
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         call hzd_solmxma(F_pip, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*****************************
*  3. Nonyhydrostatic model *
*****************************
*
         if ( .not. Schm_hydro_L ) then
*
         if ( Schm_difqp_L ) then ! q' & related variables
*
*        Indirect diffusion of q'
*        ~~~~~~~~~~~~~~~~~~~~~~~~
         do k=1, Nk  !
         do j=1+pil_s,l_nj-pil_n ! p = (pi)exp(q')
         do i=1+pil_w,l_ni-pil_e ! ~~~~~~~~~~~~~~~
            wk2(i,j,k) = ( geomg_z_8(k) + dble(wk2(i,j,k)) )
     %                       *exp( dble(F_qp(i,j,k)) )
         end do
         end do
         end do
*
         call hzd_solmxma(wk2, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
         do k=1, Nk  !
         do j=1+pil_s,l_nj-pil_n ! q' = log(p/pi)
         do i=1+pil_w,l_ni-pil_e ! ~~~~~~~~~~~~~~
            F_qp(i,j,k) = log(             dble(wk2(i,j,k))
     %                       /( geomg_z_8(k) + dble(F_pip(i,j,k)) )  )
         end do
         end do
         end do
*
         endif
         endif
*
         deallocate( wk_evec_8 )
*
      endif
*
 1000 format(/,
     $     3X,'TRAJ of PERFORM DEL-',i1,' HORIZONTAL DIFFUSION: (S/R HZD_HO_TR)')
*     __________________________________________________________________
*
      return
      end
