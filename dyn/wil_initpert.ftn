!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r wil_initpert
*
#include "model_macros_f.h"

      subroutine wil_initpert (height,nlon,nlat)
*
      implicit none
*
      integer nlon,nlat
*
      real height(nlon,nlat)
*
*author BOB et al. 1992
*
*revision
* v4_04 - BOB et al.       - initial version INITPERT
* v4_04 - Tanguay M.       - Galewski's case
*
*object
*     Add perturbation to HEIGHT field (bump localized in longitude)
*
*implicits
#include "wil_lun.cdk"
#include "wil_glb_ld.cdk"
#include "wil_dcst.cdk"
*
*     -----------------------------------------------------------
      integer i,j
      real*8 lat2_8,alph_8,beta_8,hhat_8,
     %       ratio1_8,ratio2_8,expos1_8,expos2_8,rad2deg_8,long_8
*
      real*8 ONE_8, CLXXX_8
      parameter( ONE_8  = 1.0 , CLXXX_8 = 180.0 )
*
      real     WIL_GLON,WIL_GLAT
      external WIL_GLON,WIL_GLAT
*     -----------------------------------------------------------
*
      if (Wil_Lun_out.gt.0) write (Wil_Lun_out,1000)
*
      rad2deg_8 = CLXXX_8 /acos( -ONE_8 )
*
*     Bump is centred in longitude on 0E
*     ----------------------------------
      lat2_8 = Wil_Dcst_pi_8/4.
      alph_8 = 1./3.
      beta_8 = 1./15.
      hhat_8 = 120.
*
      height = 0.
*
      do j=1,nlat
      do i=1,nlon
*
         long_8 = WIL_GLON(i)
         if (long_8.gt. Wil_Dcst_pi_8) long_8 = long_8 - 2.*Wil_Dcst_pi_8
*
         if (long_8.gt.-Wil_Dcst_pi_8.and.long_8.lt.Wil_Dcst_pi_8) then
*
             ratio1_8 = long_8/alph_8 
             expos1_8 = - ratio1_8**2
*
*            NOTE: Use Latitudes SOUTH to NORTH as GEM (not as Williamson's cases)
*            ---------------------------------------------------------------------
             ratio2_8 = lat2_8 - WIL_GLAT(G_nlat-j+1) 
             ratio2_8 = ratio2_8/beta_8
             expos2_8 = - ratio2_8**2
*
             height(i,j) = hhat_8*exp(expos1_8)*exp(expos2_8) 
*
         endif
*
      enddo
      enddo
*
*     -----------------------------------------------------------
1000  format(3X,' Add perturbation to HEIGHT field (bump localized in longitude): (S/R WIL_INITPERT)')
*     -----------------------------------------------------------
*
      return
      end
