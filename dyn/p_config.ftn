**s/r p_config - initialize CMC/RPN physics switches, and install the
*		 configuration
*
#include <model_macros_f.h>
*
      subroutine p_config
      implicit none
*
*author
*     m. roch - a. methot - april 1994
*
*revision
* v2_00 - Desgagne M.       - initial MPI version (from setswtc v1_03)
* v2_20 - Pellerin P.       - modification for physics 366
* v2_21 - Dugas B.          - activate climate mode
* v2_30 - Dugas B.          - add P_clim_moyhr call and try to
* v2_30                       read Lctl_step from the restart file
* v2_31 - Desgagne M.       - clean up and introduce getbus1 and inikey
* v2_32 - Dugas B.          - modify RADNIV initialization call
* v2_32 - Desgagne M.       - connection to physics 3.72
* v3_00 - Laroche S.        - adapted for the simplified physics
*                             trajectory and options
* v3_02 - Dugas B.          - account for a possible second call to the physics
*                             and add qco2 initialization
* v3_03 - Bilodeau B.       - add P_pbl_as, P_pbl_beta and P_cond_kkl
* v3_03 - Dugas B.          - add P_str_strato
* v3_03 - Leduc A-M.        - add P_rad_filter_L
* v3_11 - Desgagne M.       - add P_pbl_impflx_L
* v3_12 - Plante A.         - add P_cond_pcptype_s
* v3_12 - Bilodeau B.       - modify P_cond_kfctrig
* v3_12 - Leduc/Bilodeau    - add P_pbl_z0tlat
*
*object
*     See above id.
*	
*arguments
*	none
*
*implicits
#include "lctl.cdk"
#include "glb_ld.cdk"
#include "dcst.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "cstv.cdk"
#include "p_pbl.cdk"
#include "p_clim.cdk"
#include "p_str.cdk"
#include "p_rad.cdk"
#include "p_gwd.cdk"
#include "p_cond.cdk"
#include "p_out.cdk"
#include "geomg.cdk"
#include "p_bus.cdk"
#include "busind.cdk"
#include "v4dg.cdk"
#include "p4d_simp.cdk"
*
#include "p_pset.cdk"
#include "p_cond2.cdk"
#include "p_pbl2.cdk"
*
*modules
      integer  ouvrstrt
      external ouvrstrt,p_radiaf
*
      character*8 dumc
      logical prout
      integer i, indx, indy, NV
      real    dum1
*-------------------------------------------------------------------
*
      if (lun_out.gt.0) write(Lun_out,1000)
*
***********************************************************************
*Note:
*     CLIMAT and DEBUT are defined in the context of
*                      long range forecasting: months and years...
*
*     RADNIV is a list of levels -1 on which the radiation is to be
*            calculated. Passing zero (0) in a scalar means all levels.
*
*     MOYHR is a time lenght (in hours) for time average of a set
*     of specific variables for output... only predefined variables
*     are averaged if MOYHR is greater than 0
*
***********************************************************************
*
      dum1 = Cstv_dt_8 
*
      indx = G_ni/2
      indy = G_nj/2
*
      call phyoptr('DELT'    , dum1           ,       1, 'SET' )
      call phyoptl('WET'     , Schm_moist_L   ,       1, 'SET' )
*
      call phyoptc('FLUVERT' , P_pbl_bndlr_s  ,       1, 'SET' )
      call phyoptc('SCHMSOL' , P_pbl_schsl_s  ,       1, 'SET' )
      call phyoptc('LONGMEL' , P_pbl_mix_s    ,       1, 'SET' )
      call phyoptl('DRAG'    , P_pbl_drag_L   ,       1, 'SET' )
      call phyoptl('CHAUF'   , P_pbl_ocean_L  ,       1, 'SET' )
      call phyoptl('EVAP'    , P_pbl_evap_L   ,       1, 'SET' )
      call phyoptl('DBGMEM'  , P_pbl_dbgvv_L  ,       1, 'SET' )
      call phyoptl('SNOWMELT', P_pbl_snwmlt_L ,       1, 'SET' )
      call phyoptl('STOMATE' , P_pbl_stomat_L ,       1, 'SET' )
      call phyoptl('TYPSOL'  , P_pbl_typsol_L ,       1, 'SET' )
      call phyoptl('AGREGAT'  ,P_pbl_agreg_L  ,       1, 'SET' )
      call phyoptl('CORTM'  ,  P_pbl_cortm_L  ,       1, 'SET' )
      call phyoptl('CORTS'  ,  P_pbl_corts_L  ,       1, 'SET' )
      call phyoptl('DRYLAPS'  ,P_pbl_drylp_L  ,       1, 'SET' )
      call phyoptl('MONTAGN'  ,P_pbl_monta_L  ,       1, 'SET' )
      call phyoptl('BKGALB'   ,P_pbl_albkg_L  ,       1, 'SET' )
      call phyoptl('ICEMELT'  ,P_pbl_iceme_L  ,       1, 'SET' )
      call phyoptl('SNOALB_ANL',P_pbl_snoalb_L,       1, 'SET' )
      call phyoptl('ADVECTKE', P_pbl_advectke_L,      1, 'SET' )
      call phyoptl('IMPFLX',   P_pbl_impflx_L ,       1, 'SET' )
      call phyopti('NSLOFLUX' ,P_pbl_nslof    ,       1, 'SET' )
      call phyoptr('PARSOL'  , P_pbl_prsol    ,       6, 'SET' )
      call phyoptr('EPONGE'  , P_pbl_spng     , cnmaxad, 'SET' )
      call phyoptr('AS'      , P_pbl_as       ,       1, 'SET' )
      call phyoptr('BETA'    , P_pbl_beta     ,       1, 'SET' )
      call phyoptr('Z0TLAT'   ,P_pbl_z0tlat   ,       2, 'SET' )
*
      call phyoptc('GWDRAG'  , p_gwd_s        ,       1, 'SET' )
*
      call phyoptc('CONVEC'  , P_cond_conv_s  ,       1, 'SET' )
      call low2up (P_cond_stcon_s,dumc)
      P_cond_stcon_s = dumc
      call phyoptc('STCOND'  , P_cond_stcon_s ,       1, 'SET' )
      call phyoptl('INILWC'  , P_cond_ilwc_L  ,       1, 'SET' )
      call phyoptl('SATUCO'  , P_cond_satu_L  ,       1, 'SET' )
      call phyoptc('SHLCVT'  , P_cond_shlct_s ,       2, 'SET' )
      call phyoptr('HC'      , P_cond_hc      ,       1, 'SET' )
      call phyoptr('HF'      , P_cond_hf      ,       1, 'SET' )
      call phyoptr('HM'      , P_cond_hm      ,       1, 'SET' )
*
      call phyoptl('KFCMOM'  , P_cond_kfcmom_L,       1, 'SET' )
      call phyoptr('KFCTRIG4', P_cond_kfctrig4,       4, 'SET' )
      call phyoptr('KFCRAD'  , P_cond_kfcrad  ,       1, 'SET' )
      call phyoptr('KFCDEPTH', P_cond_kfcdepth,       1, 'SET' )
      call phyoptr('KFCDLEV' , P_cond_kfcdlev ,       1, 'SET' )
      call phyoptr('KFCDET'  , P_cond_kfcdet  ,       1, 'SET' )
      call phyoptr('KFCTIMEC', P_cond_kfctimec,       1, 'SET' )
      call phyoptr('KFCTIMEA', P_cond_kfctimea,       1, 'SET' )
      call phyoptc('KFCPCP'  , P_cond_kfcpcp_s,       1, 'SET' )
*
      call phyoptl('KTICEFRAC', P_cond_kticefrac_L,   1, 'SET' )
*
      call phyoptr('DZSEDI'  , P_cond_dzsedi  ,       1, 'SET' )
      call phyoptr('KKL'     , P_cond_kkl     ,       1, 'SET' )
      call phyoptc('PCPTYPE' , P_cond_pcptype_s,      1, 'SET' )
*
      call phyoptc('RADIA'   , P_rad_schm_s   ,       1, 'SET' )
      call phyoptc('RADFILES', P_rad_ftp_s    ,       1, 'SET' )
      call phyoptl('FOMICHEV', P_rad_fomic_L  ,       1, 'SET' )
      call phyoptl('RADFLTR' , P_rad_filter_L ,       1, 'SET' )
      call phyopti('DATE'    , P_rad_datim    ,      14, 'SET' )
      call phyopti('KNTRAD'  , P_rad_knt      ,       1, 'SET' )
      call phyoptr('QCO2'    , P_rad_qco2     ,       1, 'SET' )
*
      NV = 0
      do i=1,CNMXRAD
         if (P_rad_nivl(i).eq.0) goto 100
         NV = NV+1
      enddo
*
  100 if (NV.gt.0 .and. NV.lt.G_nk) then
         do i=NV,1,-1
            P_rad_nivl(i+1) = P_rad_nivl(i)
         enddo
      else if (NV.eq.G_nk) then
         NV = 0
      end if
*
      P_rad_nivl(1) = NV
      call phyopti('RADNIV' ,  P_rad_nivl     ,    NV+1, 'SET' )
*
      call phyoptr('FACDIFV' , 1.             ,       1, 'SET' )
      call phyoptr('FACTDT'  , 1.             ,       1, 'SET' )
*
      call phyopti('MOYHR'   , P_out_moyhr    ,       1, 'SET' )
*
      call phyoptl('CLIMAT'  , P_clim_clima_L ,       1, 'SET' )
      call phyoptl('STRATOS' , P_str_strato_L ,       1, 'SET' )
*
      call phyopti('LIN_V4D'   , V4dg_conf    ,       1, 'SET' )
      call phyopti('LIN_KPH'   , P4d_kdphys   ,       1, 'SET' )
      call phyopti('LIN_PBL'   , P4d_pbl      ,       1, 'SET' )
      call phyopti('LIN_LSC'   , P4d_lsc      ,       1, 'SET' )
      call phyopti('LIN_SGO'   , P4d_sgo      ,       1, 'SET' )
*
      if (Lun_rstrt .le. 0) Lun_rstrt = ouvrstrt( )
      if (Lun_rstrt .gt. 0) then
         call waopen( Lun_rstrt )
         call waread( Lun_rstrt , Lctl_step , 1,1 )
         call waclos( Lun_rstrt )
      endif
      call phyopti('DEBUT'   , Lctl_step      ,       1, 'SET' )
*
*     Physics init
*
      prout  = lun_out.gt.0
*
      p_nmp = 0
      if (G_lam) p_nmp = 3
      p_ni   = l_ni - pil_e - pil_w + p_nmp*west  + p_nmp*east
      p_nj   = l_nj - pil_s - pil_n + p_nmp*south + p_nmp*north
      p_offi = 1 + pil_w - p_nmp*west  - 1
      p_offj = 1 + pil_s - p_nmp*south - 1
*
      call phydebu4 ( p_ni, G_nk, p_bent_top ,p_bdyn_top, p_bper_top, 
     $                p_bvol_top, prout, p_radiaf )
*
      if ( (p_bent_top.le.maxbus).and.(p_bdyn_top.le.maxbus).and.
     $     (p_bper_top.le.maxbus).and.(p_bvol_top.le.maxbus)) then
         call getbus1 (entnm,enton,entdc,entpar,p_bent_siz,maxbus,
     $                                                  'E',prout)
         call getbus1 (dynnm,dynon,dyndc,dynpar,p_bdyn_siz,maxbus,
     $                                                  'D',prout)
         call getbus1 (pernm,peron,perdc,perpar,p_bper_siz,maxbus,
     $                                                  'P',prout)
         call getbus1 (volnm,volon,voldc,volpar,p_bvol_siz,maxbus,
     $                                                  'V',prout)
         call inikey
         if (V4dg_conf.gt.0) call inikey_tr
      else
         if (lun_out.gt.0) write (lun_out,9000) 
     $        max(p_bent_top,p_bdyn_top,p_bper_top,p_bvol_top)
         stop
      endif
*
      if (P_pset_second_L) then
*
         call save_options( 1 )
*
         call phyoptc('CONVEC'  , P_cond2_conv_s  ,   1, 'SET' )
         call phyoptc('STCOND'  , P_cond2_stcon_s ,   1, 'SET' )
         call phyoptc('SHLCVT'  , P_cond2_shlct_s ,   2, 'SET' )
*
         call phyoptl('SATUCO'  , P_cond2_satu_L  ,   1, 'SET' )
         call phyoptl('INILWC'  , P_cond2_ilwc_L  ,   1, 'SET' )
*
         call phyoptl('KFCMOM'  , P_cond2_kfcmom_L,   1, 'SET' )
         call phyoptr('KFCTRIG4', P_cond2_kfctrig4,   1, 'SET' )
         call phyoptr('KFCRAD'  , P_cond2_kfcrad  ,   1, 'SET' )
         call phyoptr('KFCDEPTH', P_cond2_kfcdepth,   1, 'SET' )
         call phyoptr('KFCDLEV' , P_cond2_kfcdlev ,   1, 'SET' )
         call phyoptr('KFCDET'  , P_cond2_kfcdet  ,   1, 'SET' )
         call phyoptr('KFCTIMEC', P_cond2_kfctimec,   1, 'SET' )
         call phyoptr('KFCTIMEA', P_cond2_kfctimea,   1, 'SET' )
*
         call phyoptl('KTICEFRAC' ,P_cond2_kticefrac_L,1, 'SET' )
*
         call phyoptc('FLUVERT' , P_pbl2_bndlr_s  ,   1, 'SET' )
         call phyoptc('SCHMSOL' , P_pbl2_schsl_s  ,   1, 'SET' )
         call phyoptc('LONGMEL' , P_pbl2_mix_s    ,   1, 'SET' )
*
         call phyoptl('DRAG'    , P_pbl2_drag_L   ,   1, 'SET' )
         call phyoptl('CHAUF'   , P_pbl2_ocean_L  ,   1, 'SET' )
         call phyoptl('EVAP'    , P_pbl2_evap_L   ,   1, 'SET' )
         call phyoptl('SNOWMELT', P_pbl2_snwmlt_L ,   1, 'SET' )
         call phyoptl('STOMATE' , P_pbl2_stomat_L ,   1, 'SET' )
         call phyoptl('TYPSOL'  , P_pbl2_typsol_L ,   1, 'SET' )
         call phyoptl('ICEMELT'  ,P_pbl2_iceme_L  ,   1, 'SET' )
         call phyoptl('AGREGAT'  ,P_pbl2_agreg_L  ,   1, 'SET' )
*
         call save_options( 2 )
         call restore_options( 1 )
*
      endif
*
 1000 format(/,'PHYSICS CONFIGURATION (S/R P_CONFIG)',
     + /,'================================================')
 9000 format (/'==> STOP IN P_CONFIG: MAXBUS TOO SMALL IN BUSESD.CDK'/
     $         '==> REQUIRED: ',i10/)
*
*     ---------------------------------------------------------------
*
      return
      end
