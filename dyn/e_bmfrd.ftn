*** s/r e_bmfrd 
*
      integer function e_bmfrd ( dgid, nix, njx, nv, ad, mp, ip1, gnk, 
     $                                                           sinf )
      implicit none
*
      character*4 nv
      logical sinf
      integer dgid, nix, njx, gnk, ip1(*)
      real    ad, mp
*
*arguments
*______________________________________________________________________
*                                                                      |
* NAME               | DESCRIPTION                                     |
*--------------------|-------------------------------------------------|
* nix*njx            | horizontal I*J dimension for F, LAT, LON        |
* NV                 | name of the field to read                       |
* AD                 | constant to add to field                        |
* MP                 | constant to multiply to field                   |
* LAT                | latitudes                                       |
* LON                | longitudes                                      |
* NNIV               | number of levels to read                        |
*----------------------------------------------------------------------
*
*implicits
#include "e_grids.cdk"
#include "e_fu.cdk"
#include "e_anal.cdk"
*
*modules
      external e_rdhint3
      integer  e_rdhint3
*
      integer err,i,k
      real w1 (nix*njx)
*
*     ---------------------------------------------------------------
*
      e_bmfrd = -1
*
      do k=1,gnk
*
         e_bmfrd = e_rdhint3 (w1,dgid,nix,njx,nv,ip1(k),ip2a,ip3a,' ',
     $                         tva,.true.,.false.,'CUBIC',e_fu_anal,6)
         if (e_bmfrd.lt.0) goto 500
*     
*        SCALING
*
         if(ad.ne.0.0 .or. mp.ne.1.0) then
            do i=1,nix*njx
               w1(i) = mp * (w1(i)+ad)
            enddo
         endif
*     
         call e_bmfsplitxy2 (w1,nix,njx,nv,k,gnk,pni,0,0,0)
*
      end do
*
      return
 500  write(6,*) ' Variable = ',NV, ' NOT AVAILABLE'
      if (sinf) call e_arret( 'e_bmfrd' )
*
*     ---------------------------------------------------------------
*
 900  return
      end
