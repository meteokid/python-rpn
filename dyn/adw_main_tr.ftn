***s/r adw_main_tr -  Equivalent to adw_main for TRAJECTORY 
*
#include <model_macros_f.h>
*
      subroutine adw_main_tr ( F_it )
*
#include "impnone.cdk"
*
      integer F_it
*
*author
*     monique tanguay
*
*revision
* v2_31 - Tanguay M.        - initial MPI version
* v3_00 - Tanguay M.        - adapt to restructured adw_main 
*
*language
*     fortran 77
*
*object
*     see id section
*
*arguments
*______________________________________________________________________
*        |                                                       |     |
* NAME   | DESCRIPTION                                           | I/O |
*--------|-------------------------------------------------------|-----|
* F_it   | total number of iterations for trajectories           |  i  |
*________|_______________________________________________________|_____|
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "adw.cdk"
#include "orhm.cdk"
#include "rhscm.cdk"
#include "vthm.cdk"
************************************************************************
      integer  vmmlod, vmmget, vmmuld, vmmuln
      external vmmlod, vmmget, vmmuld, vmmuln
*
      integer pnerr, pnlkey1(30), pnlod
*
      integer nijkag,n,i,j,k
      real , dimension (Adw_nit*Adw_njt*l_nk) :: um,vm,wm
*
      real wuthm(LDIST_SHAPE,l_nk),wvthm(LDIST_SHAPE,l_nk)
*
      real wxthm (l_ni*l_nj*l_nk),wythm (l_ni*l_nj*l_nk)
      real wzthm (l_ni*l_nj*l_nk)
      real wxcthm(l_ni*l_nj*l_nk),wycthm(l_ni*l_nj*l_nk)
      real wzcthm(l_ni*l_nj*l_nk)
*
************************************************************************
      if (Lun_debug_L) write (Lun_out,1000)
*
************************************************************************
*
*     ---------------------
*     Preserve TRAJ (START)
*     ---------------------
      pnlkey1(1)  = VMM_KEY(uthm )
      pnlkey1(2)  = VMM_KEY(vthm )
      pnlkey1(3)  = VMM_KEY(xthm )
      pnlkey1(4)  = VMM_KEY(ythm )
      pnlkey1(5)  = VMM_KEY(zthm )
      pnlkey1(6)  = VMM_KEY(xcthm)
      pnlkey1(7)  = VMM_KEY(ycthm)
      pnlkey1(8)  = VMM_KEY(zcthm)
      pnlod = 8
*
      pnerr = vmmlod(pnlkey1,pnlod)
*
      pnerr = VMM_GET_VAR(uthm )
      pnerr = VMM_GET_VAR(vthm )
      pnerr = VMM_GET_VAR(xthm )
      pnerr = VMM_GET_VAR(ythm )
      pnerr = VMM_GET_VAR(zthm )
      pnerr = VMM_GET_VAR(xcthm)
      pnerr = VMM_GET_VAR(ycthm)
      pnerr = VMM_GET_VAR(zcthm)
*
*     -----------------------
*     Preserve TRAJ uthm vthm
*     -----------------------
      do k= 1,l_nk
      do j= l_miny,l_maxy
      do i= l_minx,l_maxx
         wuthm(i,j,k) = uthm(i,j,k)
         wvthm(i,j,k) = vthm(i,j,k)
      enddo
      enddo
      enddo
*
*     ----------------------------------------------
*     Preserve TRAJ xthm ythm zthm xcthm ycthm zcthm
*     ----------------------------------------------
      do n= 1,l_ni*l_nj*l_nk
         wxthm (n) = xthm (n)
         wythm (n) = ythm (n)
         wzthm (n) = zthm (n)
         wxcthm(n) = xcthm(n)
         wycthm(n) = ycthm(n)
         wzcthm(n) = zcthm(n)
      enddo
*
      pnerr = vmmuld(-1,0)
*
*     -------------------
*     Preserve TRAJ (END)
*     -------------------
*
      call adw_main_1_wnd_tr ( um, vm, wm, Adw_nit, Adw_njt, l_nk)
*
      call adw_main_2_pos_tr ( F_it, um, vm, wm )
*
      call adw_main_3_int_tr ( um, vm, wm )
*
*     ------------------------------
*     Preserve or Reset TRAJ (START)
*     ------------------------------
      pnlkey1(1)  = VMM_KEY(ruw2m )
      pnlkey1(2)  = VMM_KEY(rvw2m )
      pnlkey1(3)  = VMM_KEY(oruw2m)
      pnlkey1(4)  = VMM_KEY(orvw2m)
      pnlkey1(5)  = VMM_KEY(uthm  )
      pnlkey1(6)  = VMM_KEY(vthm  )
      pnlkey1(7)  = VMM_KEY(xthm  )
      pnlkey1(8)  = VMM_KEY(ythm  )
      pnlkey1(9)  = VMM_KEY(zthm  )
      pnlkey1(10) = VMM_KEY(xcthm )
      pnlkey1(11) = VMM_KEY(ycthm )
      pnlkey1(12) = VMM_KEY(zcthm )
      pnlod = 12
*
      pnerr = vmmlod(pnlkey1,pnlod)
*
      pnerr = VMM_GET_VAR(ruw2m )
      pnerr = VMM_GET_VAR(rvw2m )
      pnerr = VMM_GET_VAR(oruw2m)
      pnerr = VMM_GET_VAR(orvw2m)
      pnerr = VMM_GET_VAR(uthm  )
      pnerr = VMM_GET_VAR(vthm  )
      pnerr = VMM_GET_VAR(xthm  )
      pnerr = VMM_GET_VAR(ythm  )
      pnerr = VMM_GET_VAR(zthm  )
      pnerr = VMM_GET_VAR(xcthm )
      pnerr = VMM_GET_VAR(ycthm )
      pnerr = VMM_GET_VAR(zcthm )
*
*     --------------------------
*     Preserve in ORH for PRE_AD
*     --------------------------
      do k=1,l_nk
      do j=l_miny,l_maxy
      do i=l_minx,l_maxx
         oruw2m(i,j,k) = ruw2m(i,j,k)
         orvw2m(i,j,k) = rvw2m(i,j,k)
      end do
      end do
      end do
*
*     --------------------
*     Reset TRAJ uthm vthm
*     --------------------
      do k= 1,l_nk
      do j= l_miny,l_maxy
      do i= l_minx,l_maxx
         uthm(i,j,k) = wuthm(i,j,k) 
         vthm(i,j,k) = wvthm(i,j,k)
      enddo
      enddo
      enddo
*
*     -------------------------------------------
*     Reset TRAJ xthm ythm zthm xcthm ycthm zcthm
*     -------------------------------------------
      do n= 1,l_ni*l_nj*l_nk
         xthm (n) = wxthm (n) 
         ythm (n) = wythm (n) 
         zthm (n) = wzthm (n) 
         xcthm(n) = wxcthm(n)
         ycthm(n) = wycthm(n) 
         zcthm(n) = wzcthm(n) 
      enddo
*
      pnerr = vmmuld(-1,0)
*
***********************************************************************
*
 1000  format(3X,'TRAJ of ADVECT THE RIGHT-HAND-SIDES: (S/R ADW_MAIN_TR)')
*
      return
      end
