***s/r hzd_fact_tl - TLM of hzd_fact 
*
#include <model_macros_f.h>
*
      subroutine hzd_fact_tl ( F_u   , F_v , F_psd,  F_tp  , F_ip  ,
     %                         F_td  , F_t , F_it ,  F_plt , F_q   ,
     %                         F_pip , F_w , F_qp ,  F_mu  , F_mul , F_s , 
     %                         F_um  , F_vm, F_psdm, F_tpm , F_ipm ,
     %                         F_tdm , F_tm, F_itm , F_pltm, F_qm  ,
     %                         F_pipm, F_wm, F_qpm , F_mum , F_mulm, F_sm, 
     %                         F_xfis, DIST_DIM,Nk)
*
      implicit none
*
      integer DIST_DIM, Nk
      real   F_u  (DIST_SHAPE,Nk), F_v (DIST_SHAPE,Nk),
     %       F_psd(DIST_SHAPE,Nk), F_tp(DIST_SHAPE,Nk),
     %       F_ip (DIST_SHAPE,Nk), F_td(DIST_SHAPE,Nk),
     %       F_t  (DIST_SHAPE,Nk), F_it(DIST_SHAPE,Nk),
     %       F_plt(DIST_SHAPE,Nk), F_q (DIST_SHAPE,Nk),
     %       F_pip(DIST_SHAPE,Nk), F_w (DIST_SHAPE,Nk),
     %       F_qp (DIST_SHAPE,Nk), F_mu(DIST_SHAPE,Nk),
     %       F_mul(DIST_SHAPE,Nk), F_s (DIST_SHAPE), F_xfis(DIST_SHAPE)
*
      real   F_um  (DIST_SHAPE,Nk), F_vm (DIST_SHAPE,Nk),
     %       F_psdm(DIST_SHAPE,Nk), F_tpm(DIST_SHAPE,Nk),
     %       F_ipm (DIST_SHAPE,Nk), F_tdm(DIST_SHAPE,Nk),
     %       F_tm  (DIST_SHAPE,Nk), F_itm(DIST_SHAPE,Nk),
     %       F_pltm(DIST_SHAPE,Nk), F_qm (DIST_SHAPE,Nk),
     %       F_pipm(DIST_SHAPE,Nk), F_wm (DIST_SHAPE,Nk),
     %       F_qpm (DIST_SHAPE,Nk), F_mum(DIST_SHAPE,Nk),
     %       F_mulm(DIST_SHAPE,Nk), F_sm (DIST_SHAPE)
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_21 - Tanguay M.        - remove vertical modulation
*                           - TLM of diff. on phi instead of phi' at model lid
*                           - replace xfis by topo
* v2_31 - Tanguay M.        - TLM of control for diffusion on momentum only
* v3_03 - Tanguay M.        - Adjoint NoHyd configuration 
* v3_11 - Tanguay M.        - AIXport+Opti+OpenMP for TLM-ADJ
*
*object
*     see id section
*
*arguments
* 
*implicits
#include "glb_ld.cdk"
#include "ldnh.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "trp.cdk"
#include "hzd.cdk"
#include "opr.cdk"
#include "schm.cdk"
#include "geomg.cdk"
#include "ptopo.cdk"
#include "lun.cdk"
*
      integer i, j, k
      real*8 c_8
      real work(LDIST_SHAPE,Nk), work_m(LDIST_SHAPE,Nk)
      real*8 wk1_8
      real*8 g1_8(LYDIST_SIZ*(Trp_12dmax-Trp_12dmin+1)*(G_ni+Ptopo_npex))
      real*8 g2_8((Trp_12dmax-Trp_12dmin+1)*(Trp_22max-Trp_22min+1)*(G_nj+Ptopo_npey))
      real*8, dimension (Ldnh_maxy*G_ni) :: aix_8,bix_8,cix_8,dix_8
      real*8, dimension (Trp_22max *G_nj) :: aiy_8,biy_8,ciy_8
*     ______________________________________________________
*
      if (Lun_debug_L) write(Lun_out,1000)
*
*     Momentum
*     ~~~~~~~~
      if ( Cstv_uvdf_8 .gt. 0.0 ) then
*
*        Horizontal Momentum
*        ~~~~~~~~~~~~~~~~~~~
         c_8 = Cstv_uvdf_8*Cstv_dt_8/(Dcst_rayt_8*Dcst_rayt_8)
         call hzd_abc ( aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $       Geomg_cy2_8,Hzd_xp0_8,Hzd_xp2_8,Opr_opsyp0_8,Opr_opsyp2_8,
     $       G_ni,G_nj,Ldnh_maxy,l_nj,
     $       Trp_22max,Trp_22n,LYDIST_DIM,G_nj,l_nj)
*
*        TRAJECTORY
*        ----------
         call hzd_del2 (F_um, wk1_8, Hzd_opsxp0_8, Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TLM 
*        ---
         call hzd_del2 (F_u, wk1_8, Hzd_opsxp0_8, Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
         call hzd_abc ( aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $       Geomg_cyv2_8,Opr_opsxp0_8,Opr_opsxp2_8,Hzd_yp0_8,Hzd_yp2_8,
     $       G_ni,G_nj,Ldnh_maxy,l_nj,
     $       Trp_22max,Trp_22n,LYDIST_DIM,G_njv,l_njv)
*
*        TRAJECTORY
*        ----------
         call hzd_del2 (F_vm, wk1_8, Opr_opsxp0_8(G_ni+1), Hzd_opsyp0_8,
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_njv)
*
*        TLM 
*        ---
         call hzd_del2 (F_v, wk1_8, Opr_opsxp0_8(G_ni+1), Hzd_opsyp0_8,
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_njv)
*
      endif
*
      if ( Cstv_phidf_8 .gt. 0.0) then
*
         c_8 = Cstv_phidf_8*Cstv_dt_8/(Dcst_rayt_8*Dcst_rayt_8)
         call hzd_abc (aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $       Geomg_cy2_8,Opr_opsxp0_8,Opr_opsxp2_8,Opr_opsyp0_8,
     $       Opr_opsyp2_8,G_ni,G_nj,Ldnh_maxy,l_nj,
     $       Trp_22max,Trp_22n,LYDIST_DIM,G_nj,l_nj)
*
*        Vertical motion in pressure coord.
*        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_del2  (F_psdm, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TLM
*        ---
         call hzd_del2  (F_psd, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        Total divergence
*        ~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_del2  (F_tdm, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TLM 
*        ---
         call hzd_del2  (F_td, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
         if (Hzd_uvwdt_L) goto 9988
*
*     Mass related fields
*     ~~~~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_del2  (F_ipm, wk1_8, 
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TLM 
*        ---
         call hzd_del2  (F_ip, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TRAJECTORY
*        ----------
         call hzd_del2  (F_itm, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TLM
*        ---
         call hzd_del2  (F_it, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
!$omp parallel 
!$omp do
         do k = 2, Nk
         do j = 1,l_nj
         do i = 1,l_ni
*
*           TRAJECTORY
*           ----------
            F_itm(i,j,k) = F_ipm(i,j,k) + Cstvr_fistr_8(k) + F_xfis(i,j)
*
*           TLM
*           ---
            F_it(i,j,k) = F_ip(i,j,k) 
*
         end do
         end do
         end do
!$omp enddo
*
* updating phi' at the top
*
!$omp do
         do j = 1,l_nj
         do i = 1,l_ni
*
*           TRAJECTORY
*           ----------
            F_ipm(i,j,1) = F_itm(i,j,1) - Cstvr_fistr_8(1) - F_xfis(i,j)
*
*           TLM
*           ---
            F_ip(i,j,1) = F_it(i,j,1) 
*
         end do
         end do
!$omp enddo
!$omp end parallel 
*
*     The temperature: T', T'lin & hence T 
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_del2  (F_tpm, wk1_8, 
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TLM 
*        ---
         call hzd_del2  (F_tp, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TRAJECTORY
*        ----------
         call hzd_del2  (F_pltm, wk1_8, 
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TLM 
*        ---
         call hzd_del2  (F_plt, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
!$omp parallel 
!$omp do
         do k=1, Nk
         do j=1,l_nj
         do i=1,l_ni 
*
*           TRAJECTORY
*           ----------
            F_tm(i,j,k) = F_tpm(i,j,k) + Cstv_tstr_8
*
*           TLM
*           ---
            F_t(i,j,k) = F_tp(i,j,k) 
*
         end do
         end do
         end do
!$omp enddo
*
*     Save pi' for the diffusion of q'
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         if ( (.not.Schm_hydro_L) .and. Schm_difqp_L ) then
!$omp do
            do k = 1, Nk
            do j = 1,l_nj
            do i = 1,l_ni
*
*              TRAJECTORY
*              ----------
               work_m(i,j,k) = F_pipm(i,j,k)
*
*              TLM
*              ---
               work(i,j,k) = F_pip(i,j,k)
*
            end do
            end do
            end do
!$omp enddo
         endif
*
!$omp end parallel 
*
*     The hydrostatic pressure: pi'  
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_del2  (F_pipm, wk1_8, 
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TLM
*        ---
         call hzd_del2  (F_pip, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*****************************
*  3. Nonyhydrostatic model * 
*****************************
*
         if ( .not. Schm_hydro_L ) then
*
*     Vertical wind (physical) 
*     ~~~~~~~~~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_del2  (F_wm, wk1_8, 
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TLM
*        ---
         call hzd_del2  (F_w, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
         if ( Schm_difqp_L ) then ! q' & related variables
*
*        TRAJECTORY
*        ----------
         call hzd_del2  (F_mum, wk1_8, 
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TLM 
*        ---
         call hzd_del2  (F_mu, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TRAJECTORY
*        ----------
         call hzd_del2  (F_mulm, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)

*        TLM 
*        ---
         call hzd_del2  (F_mul, wk1_8, 
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        Indirect diffusion of q' 
*        ~~~~~~~~~~~~~~~~~~~~~~~~
!$omp parallel do 
         do k=1, Nk  ! 
         do j=1,l_nj ! p = (pi)exp(q') 
         do i=1,l_ni ! ~~~~~~~~~~~~~~~ 
*
*           TLM
*           ---
            work(i,j,k) = (                dble(work  (i,j,k)) )
     %                       *exp( dble(F_qpm(i,j,k)) )           +
     %                    ( Geomg_z_8(k) + dble(work_m(i,j,k)) )
     %                       *exp( dble(F_qpm(i,j,k)) ) * dble(F_qp(i,j,k))
*
*           TRAJECTORY
*           ----------
            work_m(i,j,k) = ( Geomg_z_8(k) + dble(work_m(i,j,k)) )
     %                       *exp( dble(F_qpm(i,j,k)) )
*
         end do
         end do
         end do
!$omp end parallel do 
*
*        TRAJECTORY
*        ----------
         call hzd_del2  (work_m, wk1_8, 
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        TLM
*        ---
         call hzd_del2  (work, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
!$omp parallel do 
         do k=1, Nk  ! 
         do j=1,l_nj ! q' = log(p/pi) 
         do i=1,l_ni ! ~~~~~~~~~~~~~~
*
*           TRAJECTORY
*           ----------
            F_qpm(i,j,k) = log(             dble(work_m(i,j,k))
     %                       /( Geomg_z_8(k) + dble(F_pipm(i,j,k)) )  )
*
*           TLM
*           ---
            F_qp(i,j,k) = (dble(work  (i,j,k))*( Geomg_z_8(k) + dble(F_pipm(i,j,k))) -
     %                     dble(work_m(i,j,k))*(                dble(F_pip (i,j,k))) ) 
     %                   /(dble(work_m(i,j,k))*( Geomg_z_8(k) + dble(F_pipm(i,j,k))) )
*
         end do
         end do
         end do
!$omp end parallel do 
*
         endif
         endif
*
      endif
*
 9988 continue
*
 1000 format(/,
     + 3X,'TLM of PERFORM FACTORIZED HORIZONTAL DIFFUSION: (S/R HZD_FACT_TL)',
     +/3X,'=================================================================',/)
*
      return
      end
