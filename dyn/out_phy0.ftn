! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r out_phy0 - special output physics variable at time 0 
*
#include "model_macros_f.h"
*
      subroutine  out_phy0()
*
      implicit none

*
*author 
*     V.Lee - rpn - Nov. 2006
*
*revision
*
*object
*     See above id.
*	
*arguments
*
*implicits
#include "glb_ld.cdk"
#include "ptopo.cdk"
#include "lun.cdk"
#include "mem.cdk"
#include "obus.cdk"
*
*modules
*
      logical dumpbus_L
      integer i, j, k, obussiz, stepno
      real, dimension(:,:), allocatable :: obusval
*
**
*     ---------------------------------------------------------------
*
      if (Lun_out.gt.0) write(Lun_out,1000)
      call iniobus(obussiz)
      allocate(obusval(l_ni*l_nj,obussiz))
      Mem_pslic = 0
*
!$omp parallel
!$omp do
            do j=1,Ptopo_npeOpenMP
               call out_fillobus ( j , obusval )
            enddo
!$omp enddo
!$omp end parallel
      stepno=0
      call out_phy(obusval,l_ni,l_nj,stepno)
      deallocate (obusval)
*
*
 1000 format(/'PERFORM A PHYSICS OUTPUT at 0: CMC/RPN PHYSICS (S/R OUT_PHY0)'
     $       /55('='))
*     ---------------------------------------------------------------
*
      return
      end
