***s/r pre - add metric corrections to r.h.s. of momentum equations
*            compute advective contributions on geopotential grid
*            interpolate adv. cont. from geopotential grid to wind grids
*            update r.h.s with advective contributions
*            add contribution of topography to rhs of momentum equations
*            compute rhs of divergence equation
*            compute rhs of combined horizontal equations
*            compute the linear rhs of Helmholtz equation
*            ( memory management and call to prep )
*
#include "model_macros_f.h"
*
      subroutine pre
*
      implicit none
*
*author
*     Alain Patoine - Gabriel Lemay
*
*revision
* v2_00 - Desgagne M.       - initial MPI version
* v2_31 - Desgagne M.       - remove stkmemw
* v3_00 - Desgagne & Lee    - Lam configuration
*
*object
*
*arguments
*        None
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "geomg.cdk"
#include "rhsc.cdk"
#include "vt1.cdk"
#include "p_geof.cdk"
#include "schm.cdk"
#include "lctl.cdk"

*
*modules
      integer  vmmlod, vmmget, vmmuld
      external vmmlod, vmmget, vmmuld
*
      integer pnerr, pnlod, pnlkey1(15), i, j
**
*     __________________________________________________________________
*
      if (Lun_debug_L) write (Lun_out,1000)
*
      pnlkey1(1)  = VMM_KEY(ru)
      pnlkey1(2)  = VMM_KEY(rv)
      pnlkey1(3)  = VMM_KEY(ruw1)
      pnlkey1(4)  = VMM_KEY(ruw2)
      pnlkey1(5)  = VMM_KEY(rvw1)
      pnlkey1(6)  = VMM_KEY(rvw2)
      pnlkey1(7)  = VMM_KEY(xct1)
      pnlkey1(8)  = VMM_KEY(yct1)
      pnlkey1(9)  = VMM_KEY(zct1)
      pnlkey1(10) = VMM_KEY(topo)
      pnlkey1(11) = VMM_KEY(rcn)
      pnlkey1(12) = VMM_KEY(rth)
      pnlkey1(13) = VMM_KEY(rhell)
      pnlod = 13
      if (.not. Schm_hydro_L) then
         pnlkey1(14) = VMM_KEY(rw)
         pnlkey1(15) = VMM_KEY(rvv)
         pnlod = 15
      endif
*     - - - - - - - - - - - - - - -
      pnerr = vmmlod(pnlkey1,pnlod)
*     - - - - - - - - - - - - - - -
      pnerr = VMM_GET_VAR(ru)
      pnerr = VMM_GET_VAR(rv)
      pnerr = VMM_GET_VAR(ruw1)
      pnerr = VMM_GET_VAR(ruw2)
      pnerr = VMM_GET_VAR(rvw1)
      pnerr = VMM_GET_VAR(rvw2)
      pnerr = VMM_GET_VAR(xct1)
      pnerr = VMM_GET_VAR(yct1)
      pnerr = VMM_GET_VAR(zct1)
      pnerr = VMM_GET_VAR(topo)
      pnerr = VMM_GET_VAR(rcn)
      pnerr = VMM_GET_VAR(rth)
      pnerr = VMM_GET_VAR(rhell)
      if (.not. Schm_hydro_L) then
         pnerr = VMM_GET_VAR(rw)
         pnerr = VMM_GET_VAR(rvv)
      else
         rw_  = 0
         rvv_ = 0
      endif
*
c     if (Acid_test_L)then
c     if (Lun_out.gt.0) write(Lun_out,*) 'Before prep_2'
c     call glbstat (xct1,'Xct1',1,l_ni,1,l_nj,G_nk,6+acid_i0,G_ni-5-acid_in,
c    %                                             6+acid_j0,G_nj-5-acid_jn,1,1)
c     call glbstat (topo,'FIS',LDIST_DIM,1,1+acid_i0,G_ni-acid_in,
c    %                                     1+acid_j0,G_nj-acid_jn,1,1)
c     call glbstat (ru,'RU0',LDIST_DIM,G_nk,7+acid_i0,G_ni-7-acid_in,
c    %                                      7+acid_j0,G_nj-7-acid_jn,1,G_nk)
c     call glbstat (ruw1,'RUW1',LDIST_DIM,G_nk,6+acid_i0,G_ni-5-acid_in,
c    %                                         5+acid_j0,G_nj-4-acid_jn,1,G_nk)
c     call glbstat (ruw2,'RUW2',LDIST_DIM,G_nk,6+acid_i0,G_ni-5-acid_in,
c    %                                         5+acid_j0,G_nj-4-acid_jn,1,G_nk)
c     call glbstat (rcn,'RCN',LDIST_DIM,G_nk,8+acid_i0,G_ni-7-acid_in,
c    %                                       8+acid_j0,G_nj-7-acid_jn,1,G_nk)
c     endif
*
      call prep_2 ( ru   ,rv   ,ruw1  ,ruw2 ,rvw1 ,rvw2 ,
     %              xct1 ,yct1 ,zct1  ,topo ,rcn  ,rth  ,
     %              rw   ,rvv  ,rhell ,
     %              LDIST_DIM, l_ni, l_nj, l_nk )

*
* The following 5 glbstats will not match piloting run because they
* contain the future Ru,Rv inserted in RHS, Ru,Rv,Rd,R1,Rhell
* But glbstats should match for Rcn,Rth
c     if (Acid_test_L)then
c     if (Lun_out.gt.0) then
c         write(Lun_out,*) 'After prep_2'
c         write(Lun_out,*) 'STATS will not match, contains future RU,RV'
c     endif
c     call glbstat (ru,'RU',LDIST_DIM,G_nk,8+acid_i0,G_ni-7-acid_in,
c    %                                     8+acid_j0,G_nj-7-acid_jn,1,G_nk)
*
      pnerr = vmmuld(-1,0)
*
1000  format(3X,'PRE-COMPUTATION FOR THE HELMHOLTZ PROBLEM: (S/R PRE)')
*     __________________________________________________________________
*
      return
      end

