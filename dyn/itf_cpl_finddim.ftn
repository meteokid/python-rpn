! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***S/R itf_cpl_finddim
C
#include "model_macros_f.h"
C
      SUBROUTINE itf_cpl_finddim (cda_array, id_indim, id_effectivedim)
*
      implicit none
*
C     Character array (input)
      CHARACTER(len=3), dimension(id_indim)   :: cda_array
C     Array dimension (input)
      INTEGER                                 :: id_indim
C     Array effective DIMENSION (output)
      INTEGER                                 :: id_effectivedim
*
*author:
C 
C   Sophie Valcke -RPN/CERFACS - March 2005
C
*revision
* v3_30 - Faucher & Chamberland   - final adjustment-debugging
*
*object:
C  Change array to uppercase and find its effective dimension
C
*implicits
C Local variables
C 
      INTEGER                                 :: il_bou
C
C===================================================================
C
      id_effectivedim = 0
*
      DO il_bou = 1, id_indim
         IF (cda_array(il_bou) .NE. '') THEN
            CALL low2up (cda_array(il_bou), cda_array(il_bou))
            id_effectivedim = id_effectivedim + 1
         ENDIF
      END DO
*
*     __________________________________________________________________
*
      END SUBROUTINE itf_cpl_finddim

 
