***s/r v4d_predat1 - Same as predat1 but with partition for 4D-Var 
*
#include <model_macros_f.h>
*
      subroutine v4d_predat1
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_30 - Edouard S.        - replace Schm_elast_L by Schm_cptop_L
*                             and remove pi' at the top
* v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate 
*                          - adapt for tracers in tr3d  
*
*object
*     see id section
*
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "cstv.cdk"
#include "p_geof.cdk"
#include "dcst.cdk"
#include "geomg.cdk"
#include "schm.cdk"
#include "vt1.cdk"
#include "vtx.cdk"
#include "v4dg.cdk"
*
*modules
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      real    pr1, pr2
      integer pnerr, pnlod, pnlkey1(7), i, j, k
*     ______________________________________________________
*
      if (.not. Schm_cptop_L) call gefstop('v4d_predat1')
      if (.not. Schm_hydro_L) call gefstop('v4d_predat1')
*     ______________________________________________________
*
      if( Lun_out.gt.0 ) then
         if(V4dg_part.eq.2) write(Lun_out,1002)
         if(V4dg_part.eq.3) write(Lun_out,1003)
      endif
*   
*     -------------------------------------------
*     Set dependent variables phi',phi from T',s'
*     -------------------------------------------
      if(V4dg_part.eq.3) call v4d_vtap () 
*
*     Get fields in memory
*     --------------------
      pnlkey1(1) = VMM_KEY(st1)
      pnlkey1(2) = VMM_KEY(qt1)
      pnlkey1(3) = VMM_KEY(pipt1)
      pnlkey1(4) = VMM_KEY(tt1)
      pnlkey1(5) = VMM_KEY(tpt1)
      pnlod = 5 
*
      pnerr = vmmlod(pnlkey1,pnlod)
      pnerr = VMM_GET_VAR(st1)
      pnerr = VMM_GET_VAR(qt1)
      pnerr = VMM_GET_VAR(pipt1)
      pnerr = VMM_GET_VAR(tt1)
      pnerr = VMM_GET_VAR(tpt1)
*
*     -----------------------------------------
*     Set control variables when V4dg_part.eq.2
*     -----------------------------------------
      if(V4dg_part.eq.2) then
*
*     Compute T' from T
*     ------------------
      do k=1,G_nk
      do j= 1, l_nj
      do i= 1, l_ni
         tpt1(i,j,k)  = tt1(i,j,k)  - Cstv_tstr_8
      end do
      end do
      end do
*
      endif
*
*     -------------------------------------------
*     Set dependent variables when V4dg_part.eq.3
*     -------------------------------------------
      if(V4dg_part.eq.3) then
*
*     Compute T from T'
*     -----------------
      do k=1,G_nk
      do j= 1, l_nj 
      do i= 1, l_ni
         tt1(i,j,k)  = tpt1(i,j,k)  + Cstv_tstr_8
      end do
      end do
      end do
*
      endif
*
*     -----------------------------------------
*     Set control variables when V4dg_part.eq.2
*     -----------------------------------------
      if(V4dg_part.eq.2) then
*
*     Compute s
*     ---------
      if (.not.G_lam) then
      do j= 1, l_nj
      do i= 1, l_ni 
         st1(i,j)   = alog( exp(qt1(i,j,G_nk)) / Cstv_pisrf_8 )
      end do
      end do
      endif
*
      endif
*
*     -------------------------------------------
*     Set dependent variables when V4dg_part.eq.3
*     -------------------------------------------
      if(V4dg_part.eq.3) then
*
*     Compute q 
*     ---------
      if (.not.G_lam) then
      do k=1,G_nk
      do j= 1, l_nj
      do i= 1, l_ni
         qt1(i,j,k) = alog( geomg_pia(k) + geomg_pib(k)*exp(st1(i,j)) )
      end do
      end do
      end do
      endif
*
      endif
*
*     -------------------------------------------
*     Set dependent variables when V4dg_part.eq.3
*     -------------------------------------------
      if(V4dg_part.eq.3) then
*
*     Compute pi' 
*     -----------
      do k=2,G_nk
      do j= 1, l_nj 
      do i= 1, l_ni 
         pipt1(i,j,k) = exp(qt1(i,j,k)) - geomg_z_8(k)
      end do
      end do
      end do
*
      do j= 1, l_nj
      do i= 1, l_ni
         pipt1(i,j,1) = 0.
      end do
      end do
*
      endif
*
      pnerr = vmmuld(-1,0)
*
*     Get fields in memory
*     --------------------
      pnlkey1(1) = VMM_KEY(tplt1)
      pnlkey1(2) = VMM_KEY(gptx)
      pnlkey1(3) = VMM_KEY(st1)
      pnlkey1(4) = VMM_KEY(fipt1)
      pnlkey1(5) = VMM_KEY(tpt1)
      pnlkey1(6) = VMM_KEY(pipt1)
      pnlod = 6 
*
      pnerr = vmmlod(pnlkey1,pnlod)
      pnerr = VMM_GET_VAR(tplt1)
      pnerr = VMM_GET_VAR(gptx)
      pnerr = VMM_GET_VAR(st1)
      pnerr = VMM_GET_VAR(fipt1)
      pnerr = VMM_GET_VAR(tpt1)
      pnerr = VMM_GET_VAR(pipt1)
*
*     -------------------------------------------
*     Set dependent variables when V4dg_part.eq.3
*     -------------------------------------------
      if(V4dg_part.eq.3) then
*
*     Compute P and T'
*                    lin
*     ------------------
      do k=1,G_nk
         pr1 = Dcst_rgasd_8 * Cstv_tstr_8 * geomg_pib(k) / geomg_z_8(k)
         do j= 1, l_nj 
         do i= 1, l_ni
            gptx(i,j,k)  = fipt1(i,j,k) + pr1 * st1(i,j)
         end do
         end do
      end do
*
      do k=1,G_nk
         pr1 = Cstv_tstr_8*(geomg_pib(k)/geomg_z_8(k) - geomg_dpib(k))
         do j= 1, l_nj
         do i= 1, l_ni
            tplt1(i,j,k) = (Cstv_tstr_8+tpt1(i,j,k))*
     $           (1.0+geomg_dpib(k)*(exp(st1(i,j))-1.))*
     $           geomg_z_8(k)/(geomg_z_8(k)+pipt1(i,j,k)) -  Cstv_tstr_8
            tplt1(i,j,k) = tplt1(i,j,k) + pr1 * st1(i,j)
         end do
         end do
      end do
*
      endif
*
      pnerr = vmmuld(-1,0)
*
1002  format(//,'PREPROCESSING DATA: (S/R V4D_PREDAT1 PART 2)',
     %        /,'============================================',//)
1003  format(//,'PREPROCESSING DATA: (S/R V4D_PREDAT1 PART 3)',
     %        /,'============================================',//)
*
      return
      end
