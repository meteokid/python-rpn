***s/r pre_tl - TLM of pre
*
#include <model_macros_f.h>
*
      subroutine pre_tl
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_21 - Tanguay M.        - reduce standard output as in model 
* v2_31 - Tanguay M.        - adapt ADJ for new advection code 
*
*object
*     see id section
*
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "geomg.cdk"
#include "rhsc.cdk"
#include "vt1.cdk"
#include "p_geof.cdk"
#include "schm.cdk"
#include "ptopo.cdk"
#include "rhscm.cdk"
#include "vt1m.cdk"
*
*modules
      integer  vmmlod, vmmget, vmmuld
      external vmmlod, vmmget, vmmuld
*
      integer pnerr, pnlod, pnlkey1(29), i, j 
*
      real wijk1 (LDIST_SHAPE,l_nk),wijk2 (LDIST_SHAPE,l_nk)
      real wijk1m(LDIST_SHAPE,l_nk),wijk2m(LDIST_SHAPE,l_nk)
*     ______________________________________________________
*
      if(.not. Schm_hydro_L) call gefstop('pre_tl')
*     ______________________________________________________
*
      if (Lun_debug_L) write (Lun_out,1000)
*
      pnlkey1(1)  = VMM_KEY(ru)
      pnlkey1(2)  = VMM_KEY(rv)
      pnlkey1(3)  = VMM_KEY(ruw1)
      pnlkey1(4)  = VMM_KEY(ruw2)
      pnlkey1(5)  = VMM_KEY(rvw1)
      pnlkey1(6)  = VMM_KEY(rvw2)
      pnlkey1(7)  = VMM_KEY(xct1)
      pnlkey1(8)  = VMM_KEY(yct1)
      pnlkey1(9)  = VMM_KEY(zct1)
      pnlkey1(10) = VMM_KEY(topo)
      pnlkey1(11) = VMM_KEY(rd)
      pnlkey1(12) = VMM_KEY(rcn)
      pnlkey1(13) = VMM_KEY(r1)
      pnlkey1(14) = VMM_KEY(rth)
      pnlkey1(15) = VMM_KEY(rhell)
      pnlod = 15
*
      pnlkey1(pnlod+ 1) = VMM_KEY(rum)
      pnlkey1(pnlod+ 2) = VMM_KEY(rvm)
      pnlkey1(pnlod+ 3) = VMM_KEY(ruw1m)
      pnlkey1(pnlod+ 4) = VMM_KEY(ruw2m)
      pnlkey1(pnlod+ 5) = VMM_KEY(rvw1m)
      pnlkey1(pnlod+ 6) = VMM_KEY(rvw2m)
      pnlkey1(pnlod+ 7) = VMM_KEY(xct1m)
      pnlkey1(pnlod+ 8) = VMM_KEY(yct1m)
      pnlkey1(pnlod+ 9) = VMM_KEY(zct1m)
      pnlkey1(pnlod+10) = VMM_KEY(rdm)
      pnlkey1(pnlod+11) = VMM_KEY(rcnm)
      pnlkey1(pnlod+12) = VMM_KEY(r1m)
      pnlkey1(pnlod+13) = VMM_KEY(rthm)
      pnlkey1(pnlod+14) = VMM_KEY(rhellm)
      pnlod = pnlod+14

      if (.not. Schm_hydro_L) then
*
*        TLM not done in PRE_TL
*        ---------------------- 
*
      endif
*     - - - - - - - - - - - - - - -
      pnerr = vmmlod(pnlkey1,pnlod)
*     - - - - - - - - - - - - - - -
      pnerr = VMM_GET_VAR(ru)
      pnerr = VMM_GET_VAR(rv)
      pnerr = VMM_GET_VAR(ruw1)
      pnerr = VMM_GET_VAR(ruw2)
      pnerr = VMM_GET_VAR(rvw1)
      pnerr = VMM_GET_VAR(rvw2)
      pnerr = VMM_GET_VAR(xct1)
      pnerr = VMM_GET_VAR(yct1)
      pnerr = VMM_GET_VAR(zct1)
      pnerr = VMM_GET_VAR(topo)
      pnerr = VMM_GET_VAR(rd)
      pnerr = VMM_GET_VAR(rcn)
      pnerr = VMM_GET_VAR(r1)
      pnerr = VMM_GET_VAR(rth)
      pnerr = VMM_GET_VAR(rhell)
*
      pnerr = VMM_GET_VAR(rum)
      pnerr = VMM_GET_VAR(rvm)
      pnerr = VMM_GET_VAR(ruw1m)
      pnerr = VMM_GET_VAR(ruw2m)
      pnerr = VMM_GET_VAR(rvw1m)
      pnerr = VMM_GET_VAR(rvw2m)
      pnerr = VMM_GET_VAR(xct1m)
      pnerr = VMM_GET_VAR(yct1m)
      pnerr = VMM_GET_VAR(zct1m)
      pnerr = VMM_GET_VAR(rdm)
      pnerr = VMM_GET_VAR(rcnm)
      pnerr = VMM_GET_VAR(r1m)
      pnerr = VMM_GET_VAR(rthm)
      pnerr = VMM_GET_VAR(rhellm)
*
      if (.not. Schm_hydro_L) then
*
*        TLM not done in PRE_TL
*        ---------------------- 
*
      else
         rw_  = 0
         rvv_ = 0
         r3_  = 0
         r3p_ = 0
      endif
*
*PDIR RESERVE=Ptopo_npeOpenMP

      call prep_2_tl ( ru,rv, ruw1,ruw2,rvw1,rvw2, xct1,yct1,zct1,topo,
     %                 rd,rcn,r1,rth, rw,rvv,r3,r3p, rhell,
     %                 wijk1,wijk2,
*
     %                 rum,  rvm,  ruw1m,ruw2m,rvw1m,rvw2m,
     %                 xct1m,yct1m,zct1m,
     %                 rdm,  rcnm, r1m,  rthm, rhellm,
     %                 wijk1m,wijk2m,
*
     %                 LDIST_DIM,l_ni,l_nj,l_nk )
*PDIR RELEASE
*
      pnerr = vmmuld(-1,0)
*
1000  format(3X,'TLM of PRE-COMPUTATION FOR THE HELMHOLTZ PROBLEM: (S/R PRE_TL)')

      return
      end
