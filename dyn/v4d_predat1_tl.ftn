***s/r v4d_predat1_tl - TLM of v4d_predat1 (called when V4dg_part=3) 
*
#include <model_macros_f.h>
*
      subroutine v4d_predat1_tl
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_30 - Edouard S.        - remove pi' at the top (pptt1) and replace
* v2_30                       Schm_elast_L by Schm_cptop_L
* v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate 
*
*object
*     see id section
*
*#######################################
*  REMARK: INPUT TRAJECTORY:  tpt1m,st1m
*#######################################
*
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "cstv.cdk"
#include "dcst.cdk"
#include "geomg.cdk"
#include "schm.cdk"
#include "vt1.cdk"
#include "vtx.cdk"
#include "v4dg.cdk"
#include "vt1m.cdk"
#include "vtxm.cdk"
*
*modules
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      real    pr1
      integer pnerr, pnlod, pnlkey1(14), i, j, k 
*
*     ______________________________________________________
*
      if (.not. Schm_cptop_L) call gefstop('v4d_predat1_tl')
      if (.not. Schm_hydro_L) call gefstop('v4d_predat1_tl') 
*     ______________________________________________________
*
      if (Lun_out.gt.0) WRITE(Lun_out,1000) 
*   
*     -------------------------------------------
*     Set dependent variables phi',phi from T',s'
*     -------------------------------------------
      if(V4dg_part.eq.3) call v4d_vtap_tl() 
*
*     Get fields in memory
*     --------------------
      pnlkey1(1) = VMM_KEY(st1)
      pnlkey1(2) = VMM_KEY(qt1)
      pnlkey1(3) = VMM_KEY(pipt1)
      pnlkey1(4) = VMM_KEY(tt1)
      pnlkey1(5) = VMM_KEY(tpt1)
      pnlod = 5 
*
      pnlkey1(pnlod + 1) = VMM_KEY(st1m )
      pnlkey1(pnlod + 2) = VMM_KEY(qt1m )
      pnlkey1(pnlod + 3) = VMM_KEY(pipt1m)
      pnlod = pnlod + 3 
*
      pnerr = vmmlod(pnlkey1,pnlod)
*
      pnerr = VMM_GET_VAR(st1)
      pnerr = VMM_GET_VAR(qt1)
      pnerr = VMM_GET_VAR(pipt1)
      pnerr = VMM_GET_VAR(tt1)
      pnerr = VMM_GET_VAR(tpt1)
*
      pnerr = VMM_GET_VAR(st1m )
      pnerr = VMM_GET_VAR(qt1m )
      pnerr = VMM_GET_VAR(pipt1m)
*
*     -------------------------------------------
*     Set dependent variables when V4dg_part.eq.3
*     -------------------------------------------
      if(V4dg_part.eq.3) then
*
*     Compute T from T'
*     -----------------
      do k=1,G_nk
      do j= 1, l_nj 
      do i= 1, l_ni
*
*        TRAJECTORY NOT DONE 
*        -------------------
C        tt1m(i,j,k)  = tpt1m(i,j,k) + Cstv_tstr_8
*
*        TLM 
*        ---
         tt1(i,j,k)  = tpt1(i,j,k)
*
      end do
      end do
      end do
*
      endif
*
*     -------------------------------------------
*     Set dependent variables when V4dg_part.eq.3
*     -------------------------------------------
      if(V4dg_part.eq.3) then
*
*     Compute q 
*     ---------
      if (.not.G_lam) then
      do k=1,G_nk
      do j= 1, l_nj
      do i= 1, l_ni
*
*        TRAJECTORY 
*        ----------
         qt1m(i,j,k) = alog( geomg_pia(k) + geomg_pib(k)*exp(st1m(i,j)) )
*
*        TLM
*        ---
         qt1(i,j,k) = ( geomg_pib(k)*exp(st1m(i,j))*st1(i,j)       )/
     %                ( geomg_pia(k) + geomg_pib(k)*exp(st1m(i,j)) )
*
      end do
      end do
      end do
      endif
*
      endif
*
*     -------------------------------------------
*     Set dependent variables when V4dg_part.eq.3
*     -------------------------------------------
      if(V4dg_part.eq.3) then
*
*     Compute pi' 
*     -----------
      do k=2,G_nk
      do j= 1, l_nj
      do i= 1, l_ni
*
*     TRAJECTORY
*     ----------
      pipt1m(i,j,k) = exp(qt1m(i,j,k)) - geomg_z_8(k)
*
*     TLM
*     ---
      pipt1(i,j,k) =  exp(qt1m(i,j,k)) * qt1(i,j,k)
*
      end do
      end do
      end do
*
      do j= 1, l_nj
      do i= 1, l_ni
*
*        TRAJECTORY
*        ----------
         pipt1m(i,j,1) = 0.
*
*        TLM
*        ---
         pipt1(i,j,1) = 0.
*
      end do
      end do
*
      endif
*
      pnerr = vmmuld(-1,0)
*
*     Get fields in memory
*     --------------------
      pnlkey1(1) = VMM_KEY(tplt1)
      pnlkey1(2) = VMM_KEY(gptx)
      pnlkey1(3) = VMM_KEY(st1)
      pnlkey1(4) = VMM_KEY(fipt1)
      pnlkey1(5) = VMM_KEY(tpt1)
      pnlkey1(6) = VMM_KEY(pipt1)
      pnlod = 6 
*
      pnlkey1(pnlod+1) = VMM_KEY(st1m )
      pnlkey1(pnlod+2) = VMM_KEY(tpt1m)
      pnlkey1(pnlod+3) = VMM_KEY(gptxm)
      pnlkey1(pnlod+4) = VMM_KEY(tplt1m)
      pnlkey1(pnlod+5) = VMM_KEY(fipt1m)
      pnlkey1(pnlod+6) = VMM_KEY(pipt1m)
      pnlod = pnlod+6
*
      pnerr = vmmlod(pnlkey1,pnlod)
*
      pnerr = VMM_GET_VAR(tplt1)
      pnerr = VMM_GET_VAR(gptx)
      pnerr = VMM_GET_VAR(st1)
      pnerr = VMM_GET_VAR(fipt1)
      pnerr = VMM_GET_VAR(tpt1)
      pnerr = VMM_GET_VAR(pipt1)
*
      pnerr = VMM_GET_VAR(st1m )
      pnerr = VMM_GET_VAR(tpt1m)
      pnerr = VMM_GET_VAR(gptxm)
      pnerr = VMM_GET_VAR(tplt1m)
      pnerr = VMM_GET_VAR(fipt1m)
      pnerr = VMM_GET_VAR(pipt1m)
*
*     -------------------------------------------
*     Set dependent variables when V4dg_part.eq.3
*     -------------------------------------------
      if(V4dg_part.eq.3) then
*
*     Compute P and T'
*                    lin
*     ------------------
      do k=1,G_nk
         pr1 = Dcst_rgasd_8 * Cstv_tstr_8 * geomg_pib(k) / geomg_z_8(k)
         do j= 1, l_nj
         do i= 1, l_ni
*
*           TRAJECTORY
*           ----------
            gptxm(i,j,k)  = fipt1m(i,j,k) + pr1 * st1m(i,j)
*
*           TLM
*           ---
            gptx(i,j,k)  = fipt1(i,j,k) + pr1 * st1(i,j)
*
         end do
         end do
      end do
*
      do k=1,G_nk
         pr1 = Cstv_tstr_8*(geomg_pib(k)/geomg_z_8(k) - geomg_dpib(k))
      do j= 1, l_nj
      do i= 1, l_ni
*
*        TRAJECTORY
*        ----------
         tplt1m(i,j,k)= (Cstv_tstr_8+tpt1m(i,j,k))*
     %               (1.0+geomg_dpib(k)*(exp(st1m(i,j))-1.))*
     %      geomg_z_8(k) / (geomg_z_8(k) + pipt1m(i,j,k)) -  Cstv_tstr_8
*
*        TLM
*        ---
         tplt1(i,j,k) =
     %                  (            tpt1(i,j,k)  )*
     %               (1.0+geomg_dpib(k)*(exp(st1m(i,j))-1.)      )*
     %      geomg_z_8(k) / (geomg_z_8(k) + pipt1m(i,j,k)) +
*
     %                  (Cstv_tstr_8+tpt1m(i,j,k) )*
     %               (    geomg_dpib(k)* exp(st1m(i,j))*st1(i,j) )*
     %      geomg_z_8(k) / (geomg_z_8(k) + pipt1m(i,j,k)) +
*
     %                  (-1)*(
     %                  (Cstv_tstr_8+tpt1m(i,j,k) )*
     %               (1.0+geomg_dpib(k)*(exp(st1m(i,j))-1.)      )*
     %      geomg_z_8(k) / (geomg_z_8(k) + pipt1m(i,j,k))**2
     %                       )*pipt1(i,j,k)
*
*        TRAJECTORY
*        ----------
         tplt1m(i,j,k) = tplt1m(i,j,k) + pr1 * st1m(i,j)
*
*        TLM
*        ---
         tplt1(i,j,k) = tplt1(i,j,k) + pr1 * st1(i,j)
*
      end do
      end do
      end do
*
      endif
*
      pnerr = vmmuld(-1,0)
*
1000  format(/,'TLM of PREPROCESSING DATA: (S/R V4D_PREDAT1_TL PART 3)',
     %       /,'======================================================')
*
      return
      end
