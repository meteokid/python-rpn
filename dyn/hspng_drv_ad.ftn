***s/r hspng_drv_ad - ADJ of hspng_drv_tl 
*
#include <model_macros_f.h>
*
      subroutine hspng_drv_ad ( F_u,    F_v,  F_psd,  F_tp,  F_ip,
     %                          F_td,    F_t,   F_it, F_plt,   F_q,
     %                          F_pip,    F_w,   F_qp,  F_mu, F_mul, F_s, 
     %                          F_xfis, DIST_DIM,Nk)
*
#include "impnone.cdk"
*
      integer DIST_DIM, Nk
      real     F_u(DIST_SHAPE,Nk), F_v (DIST_SHAPE,Nk),
     %       F_psd(DIST_SHAPE,Nk), F_tp(DIST_SHAPE,Nk),
     %        F_ip(DIST_SHAPE,Nk), F_td(DIST_SHAPE,Nk),
     %         F_t(DIST_SHAPE,Nk), F_it(DIST_SHAPE,Nk),
     %       F_plt(DIST_SHAPE,Nk), F_q (DIST_SHAPE,Nk),
     %       F_pip(DIST_SHAPE,Nk), F_w (DIST_SHAPE,Nk),
     %        F_qp(DIST_SHAPE,Nk), F_mu(DIST_SHAPE,Nk),
     %       F_mul(DIST_SHAPE,Nk), F_s(DIST_SHAPE), F_xfis(DIST_SHAPE)
*
*author
*     M.Tanguay
*
*revision
* v3_02 - Tanguay M.        - initial MPI version
*
*object
*     see id section
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
*  F_u
*----------------------------------------------------------------
* 
*implicits
#include "glb_ld.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "schm.cdk"
#include "geomg.cdk"
#include "trp.cdk"
#include "hspng.cdk"
#include "hzd.cdk"
#include "ldnh.cdk"
#include "opr.cdk"
#include "ptopo.cdk"
#include "lun.cdk"
*
      integer i, j, k, dim
      real*8 HALF_8,TWO_8,ZERO_8,c_8,c1
      parameter( HALF_8  = 0.5 )
      parameter(  TWO_8  = 2.0 )
      parameter (ZERO_8  = 0.0)
*
      real*8 wk1_8(LDIST_SIZ*Nk)
      real*8 g1_8(LYDIST_SIZ*(Trp_12dmax-Trp_12dmin+1)*(G_ni+Ptopo_npex))
      real*8 g2_8((Trp_12dmax-Trp_12dmin+1)*(Trp_22max-Trp_22min+1)*(G_nj+Ptopo_npey))
      real*8, dimension (Ldnh_maxy*G_ni) :: aix_8,bix_8,cix_8,dix_8
      real*8, dimension (Trp_22max*G_nj) :: aiy_8,biy_8,ciy_8
*
*     ______________________________________________________
*
      if(.not. Schm_hydro_L) call gem_stop('hspng_drv_ad',-1)
*     ______________________________________________________
*
      if (Lun_debug_L) write(Lun_out,1000)
*
*     Zero adjoint variables
*     ----------------------
      dim= LDIST_SIZ*Nk
      do i = 1,dim
      wk1_8(i)  = ZERO_8
      enddo
*
      if ( Cstv_phidf_8 .gt. 0.0) then
*
         c_8 = Cstv_phidf_8*Cstv_dt_8/(Dcst_rayt_8*Dcst_rayt_8)

         call hspng_abc (aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $                     Geomg_cy2_8,Opr_opsxp0_8,Opr_opsxp2_8,Opr_opsyp0_8,
     $                     Opr_opsyp2_8,G_ni,G_nj,LYDIST_DIM,G_nj,l_nj)
*
         if (Hspng_uvwdt_L) goto 9988
*
*     ADJ of
*     The hydrostatic pressure: pi'
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         call hzd_del2_ad (F_pip, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*     ADJ of
*     The temperature: T', T'lin & hence T
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*
         do k=1, Nk
         do j=1, l_nj
         do i=1, l_ni
            F_tp(i,j,k) = F_t(i,j,k) + F_tp(i,j,k)
            F_t (i,j,k) = ZERO_8
         end do
         end do
         end do
*
         call hzd_del2_ad (F_plt, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
         call hzd_del2_ad (F_tp, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*     ADJ of
*     Mass related fields
*     ~~~~~~~~~~~~~~~~~~~
*
* ADJ of
* updating phi' at the top
*
         do j = 1, l_nj
         do i = 1, l_ni
            F_it(i,j,1) = F_ip(i,j,1) + F_it(i,j,1)
            F_ip(i,j,1) = ZERO_8
         end do
         end do
*
*
         do k = 2, Nk
         do j = 1, l_nj
         do i = 1, l_ni
            F_ip(i,j,k) = F_it(i,j,k) + F_ip(i,j,k)
            F_it(i,j,k) = ZERO_8
         end do
         end do
         end do
*
         call hzd_del2_ad (F_it, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
         call hzd_del2_ad (F_ip, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
 9988 continue
*
*        ADJ of
*        Total divergence
*        ~~~~~~~~~~~~~~~~
         call hzd_del2_ad (F_td, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*        ADJ of
*        Vertical motion
*        ~~~~~~~~~~~~~~~
         call hzd_del2_ad (F_psd, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
      endif
*
*     ADJ of
*     Momentum
*     ~~~~~~~~
      if ( Cstv_uvdf_8 .gt. 0.0 ) then
*
*        ADJ of
*        Horizontal Momentum
*        ~~~~~~~~~~~~~~~~~~~       
         if (Hspng_rwnd_L) then
*
*           ADJ of
*           Put back into original wind formats
            do k=1,G_nk
               do j=1,l_nj
                  c1 = geomg_cy_8(j) / Dcst_rayt_8
                  do i=1,l_ni
                     f_v(i,j,k) = f_v(i,j,k) * c1
                  end do
               end do
               do j=1,l_nj
                  c1 = geomg_cy_8(j) / Dcst_rayt_8
                  do i=1,l_ni
                     f_u(i,j,k) = f_u(i,j,k) * c1
                  end do
               end do
            end do
         endif
*
         c_8 = Cstv_uvdf_8*Cstv_dt_8/(Dcst_rayt_8*Dcst_rayt_8)
         call hspng_abc ( aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $               Geomg_cyv2_8,Opr_opsxp0_8,Opr_opsxp2_8,Hzd_yp0_8,Hzd_yp2_8,
     $               G_ni,G_nj,LYDIST_DIM,G_njv,l_njv)
*
         call hzd_del2_ad (F_v, wk1_8, Opr_opsxp0_8(G_ni+1), Hzd_opsyp0_8,
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_njv)
*
         call hspng_abc ( aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $               Geomg_cy2_8,Hzd_xp0_8,Hzd_xp2_8,Opr_opsyp0_8,Opr_opsyp2_8,
     $               G_ni,G_nj,LYDIST_DIM,G_nj,l_nj)
*
         call hzd_del2_ad (F_u, wk1_8, Hzd_opsxp0_8, Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
         if (Hspng_rwnd_L) then
*
*           ADJ of 
*           Put into real wind formats
*
            do k=1,G_nk
               do j=1,l_njv
                  c1 = Dcst_rayt_8 / geomg_cy_8(j)
                  do i=1,l_ni
                     f_v(i,j,k) = f_v(i,j,k) * c1
                  end do
               end do
               do j=1,l_nj
                  c1 = Dcst_rayt_8 / geomg_cy_8(j)
                  do i=1,l_ni
                     f_u(i,j,k) = f_u(i,j,k) * c1
                  end do
               end do
            end do
         endif
*
      endif     
*
*     __________________________________________________________________
 1000 format(/,3X,
     + 'ADJ of PERFORM FACTORIZED DEL-2 HORIZONTAL DIFFUSION: (S/R HSPNG_DRV_AD)')
*
      return
      end
