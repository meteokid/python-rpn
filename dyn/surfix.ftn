! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r surfix - force wind and temperature values at surface
*
#include "model_macros_f.h"
*
      subroutine surfix 
*
#include "impnone.cdk"
*
*
*author
*         Sylvie Gravel, September 2004
*
*revision
* v3_20 - Gravel S. - initial MPI version
*
*object
*	
*implicits
#include "glb_ld.cdk"
#include "vt0.cdk"
#include "vt1.cdk"
*
**
      integer  vmmlod,vmmget,vmmuln
      external vmmlod,vmmget,vmmuln

      integer err, key(3)

      integer i,j
*
*     ---------------------------------------------------------------
*
      key( 1) = VMM_KEY(ut1)
      key( 2) = VMM_KEY(vt1)
      key( 3) = VMM_KEY(tt1)
      err = vmmlod(key,3)
      err = VMM_GET_VAR(ut1)
      err = VMM_GET_VAR(vt1)
      err = VMM_GET_VAR(tt1)

      do j=1,l_nj
      do i=1,l_ni
        tt1(i,j,l_nk) = tt1(i,j,l_nk-1)
      enddo
      enddo
      do j=1,l_nj
      do i=1,l_niu
        ut1(i,j,l_nk) = ut1(i,j,l_nk-1)
      enddo
      enddo
      do j=1,l_njv
      do i=1,l_ni
        vt1(i,j,l_nk) = vt1(i,j,l_nk-1)
      enddo
      enddo

      err = vmmuln(key,4)
*
*     ---------------------------------------------------------------
*
      return
      end
