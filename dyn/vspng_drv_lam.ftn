***s/r vspng_drv_lam - Top sponge layer driver for LAM
*
#include "model_macros_f.h"
*
      subroutine vspng_drv_lam ( F_u, F_v, F_t, F_w, DIST_DIM, Nk)
*
#include "impnone.cdk"
*
      integer DIST_DIM, Nk
      real     F_u(DIST_SHAPE,Nk  ), F_v(DIST_SHAPE,Nk),
     %         F_t(DIST_SHAPE,Nk+1), F_w(DIST_SHAPE,Nk+1)
*
*author
*     Michel Desgagne  - October 2000
*
*revision
* v3_02   Lee V.    - initial version for LAM from vspng_drv
*
*object
*     Variable Vspng_uvwdt_L controls a mode in which 
*     vertical sponge is applied:
*              on Vspng_nk   levels      for momentum and
*              on top        level only  for all other variables
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
*  F_u
*----------------------------------------------------------------
* 
*implicits
#include "glb_ld.cdk"
#include "cstv.cdk"
#include "schm.cdk"
#include "vspng.cdk"
#include "type.cdk"
#include "ver.cdk"
*
      integer i, j, k, nkspng
*
      real work(LDIST_SHAPE,Nk)
**
*     __________________________________________________________________
*
*
*        Momentum
*        ~~~~~~~~
         call vspng_lam ( F_u, LDIST_DIM, l_niu, l_nj )
         call vspng_lam ( F_v, LDIST_DIM, l_ni , l_njv)
*
*        The temperature
*        ~~~~~~~~~~~~~~~
         call vspng_lam (  F_t, LDIST_DIM, l_ni, l_nj)
*
         call gem_stop("vspng_drv_lam: recompute FI",-1)
*
*****************************
*    Nonyhydrostatic model  * 
*****************************
*
         if ( .not. Schm_hydro_L ) then
*
*           Vertical motion (physical) 
*           ~~~~~~~~~~~~~~~~~~~~~~~~~~
            call vspng_lam ( F_w, LDIST_DIM, l_ni, l_nj)
*
         endif
*
         if (Vspng_uvwdt_L) Vspng_nk = nkspng
*     __________________________________________________________________
*
      return
      end
