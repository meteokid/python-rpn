!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
**s/r casc_predat - Performs preprocessing of the data: part1
*
#include "model_macros_f.h"
*
      subroutine casc_predat
*
      implicit none
*
*author 
*     Plante A.   - CMC - NOV 2007 
*
*revision
* v4_02 - Plante A.         - Modif for staggering formulation 1 C. Girard.
* v4_02 - Lee V.              s is now computed in readdyn.ftn or mtn_case.ftn
*                                                     or bubble.ftn
*
*object
*
*     The model is initialized from an "hydrostatic state".
*     For that reason, the computations found in that routine are
*     performed considering that:
*              dp
*     q'' = 0, --- = 1 and p = pi.
*              dpi
*arguments
*	none
*
*implicits
#include "glb_ld.cdk"
#include "glb_pil.cdk"
#include "lun.cdk"
#include "cstv.cdk"
#include "dcst.cdk"
#include "schm.cdk"
#include "ind.cdk"
#include "lctl.cdk"
#include "vt1.cdk"
#include "v4dg.cdk"
#include "vtopo.cdk"
#include "pres.cdk"
#include "hzd.cdk"
#include "type.cdk"
#include "ver.cdk"
#include "ptopo.cdk"
#include "theo.cdk"
*
      integer i, j, k, longueur, key(3), pnerr, kp, km
*
      integer  vmmlod, vmmget, vmmuld, nkey
      external vmmlod, vmmget, vmmuld
*
      real dummy
**
*     __________________________________________________________________
*
      if (Lun_debug_L) write (Lun_out,1000)
      if ( V4dg_conf.eq.0 ) then
*
           call diag_fip(Ind_fip,Ind_s,Ind_t,Ind_topo,
     $                                     1,l_ni,1,l_nj,G_nk)         
*
           if (Hzd_t1_0_L) call hzd_hoffld (Ind_u,   LDIST_DIM, G_nk, 1)
           if (Hzd_t1_0_L) call hzd_hoffld (Ind_v,   LDIST_DIM, G_nk, 2)
*
c          if (Acid_test_L) then 
c             call glbstat (Ind_zd,'Izd',LDIST_DIM,G_nk,1+acid_i0,G_ni-acid_in,
c    $                                         1+acid_j0,G_nj-acid_jn,1,G_nk)
c             call glbstat (Ind_td,'I_td',LDIST_DIM,G_nk,1+acid_i0,G_ni-acid_in,
c    $                                         1+acid_j0,G_nj-acid_jn,1,G_nk)
           if (Hzd_t1_0_L) call hzd_hoffld (Ind_zd, LDIST_DIM, G_nk+1, 3)
*     ------
*     4D-Var predat
*     ------
      else
*
*        Preprocessing of Control   variables only if V4dg_part=2
*        Preprocessing of Dependent variables only if V4dg_part=3
*        --------------------------------------------------------
         call v4d_predat (V4dg_part)
*
*        Set q=0 explicitly when .not.Schm_hydro_L and 4D-Var
*        -----------------------------------------------------
         if ( V4dg_part.eq.3.and..not.Schm_hydro_L ) then
*
           print *,'V4dg_part to be reviewed'
           call gem_stop('predat',-1)
           do k=0,G_nk+1
           do j=1,l_nj
           do i=1,l_ni
              Ind_q(i,j,k) = 0.0
           end do
           end do
           end do
*
         endif
*
      endif

*
*     __________________________________________________________________
      return
 1000 format(3X,'CASC_PREDAT:      (S/R CASC_PREDAT)')
      end
