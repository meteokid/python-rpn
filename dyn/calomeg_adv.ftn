***s/p calomeg_adv - compute vertical velocity in pressure coordinates
*                    from advection
*
#include "model_macros_f.h"
*
      subroutine calomeg_adv (F_ww,F_st1,F_piup,DIST_DIM,Nk,F_checkstep_L)
*
      implicit none
*
      integer DIST_DIM, Nk
      real F_ww(DIST_SHAPE,Nk+1),F_st1(DIST_SHAPE)
      real F_piup(DIST_SHAPE,Nk+1)
      logical F_checkstep_L
*
*author
*     Andre Plante dec 2006 based on calzz from Richard Moffet.
*
*revision
*
*object
*	compute vertical velocity in hydrostatic pressure coordinates
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_ww           O                 dpi/dt (Pa/s)
* F_st1        I                   s at time t1 = exp(PIt1/Zsruf)
* F_piup       I                   Hydrostatic pressure at upstream location
*                                  obtaned from lagragian advection.
*
*implicits
#include "glb_ld.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "lctl.cdk"
#include "type.cdk"
#include "ver.cdk"
*
**
      integer i,j,k,i0,in,j0,jn
      real*8 phi
      real ytmp(DIST_SHAPE),xtmp(DIST_SHAPE)
      
*     __________________________________________________________________
*
      i0=1
      in=l_ni
      j0=1
      jn=l_nj
*
      if ( Lctl_step .eq. 0 .and. F_checkstep_L)then
*
!$omp parallel
!$omp do
         do k=1,l_nk+1
            do j=j0,jn
            do i=i0,in
               F_ww (i,j,k) = 0.0
            end do
            end do
         end do
!$omp enddo
!$omp end parallel
*
      else
*
!$omp parallel
!$omp do
         do j=j0,jn
            do i=i0,in
               xtmp(i,j)=F_st1(i,j)
            end do
            call vsexp (ytmp(i0,j),xtmp(i0,j),(in-i0+1))
         end do
!$omp enddo
!$omp do
         do k=1,l_nk+1
            do j=j0,jn
            do i=i0,in
               F_ww (i,j,k) = (Ver_a_8%t(k) + Ver_b_8%t(k)*ytmp(i,j)
     $              - F_piup(i,j,k) )/Cstv_dt_8            
            end do
            end do
         end do
!$omp enddo
!$omp end parallel
*
      endif
*     __________________________________________________________________
*
      return
      end 
