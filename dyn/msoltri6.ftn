***s/r msoltri6 - solution of a tridiagonal problem
*
      subroutine msoltri6 ( F_r, F_rhs,
     %                      F_bi_8, F_ci_8, F_ai_8,
     %                      NIDIST, NJDIST, NI, NJ )
*
#include "impnone.cdk"
*
      integer NIDIST, NJDIST, NI, NJ
      real    F_r(NIDIST,NI), F_rhs(NIDIST,NI)
      real*8    F_bi_8(NI), F_ci_8(NI), F_ai_8(NI)
*
*author
*   michel valin
*
*revision
* v2_00 - Lee/Patoine       - initial MPI version (from msoltri v1_03)
*
*
*object
*         see above id
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_r          O    - solution
* F_rhs        I    - right-hand-side
* F_bi_8       I    - bi of set_trig21
* F_ci_8       I    - ci of set_trig21
* F_ai_8       I    - ai of set_trig21
* NIDIST       I    - dist btwn element of two consecutive indx i
* NJDIST       I    - dist btwn element of two consecutive indx j
* NI           I    - x-dimension
* NJ           I    - y-dimension
*
*notes
*          - set_trig21 must have been called
*          - F_r and F_rhs can occupy the same location
*
**
*
      integer i,l
*
      do i=1,NI
      do l=1,NJ*NJDIST,NJDIST
         F_r(l,i) = F_rhs(l,i) * F_bi_8(i)
      enddo
      enddo
*
      do i=2,NI
      do l=1,NJ*NJDIST,NJDIST
         F_r(l,i) = F_r(l,i) - F_ai_8(i) * F_r(l,i-1)
      enddo
      enddo
*
      do i=NI-1,1,-1
      do l=1,NJ*NJDIST,NJDIST
         F_r(l,i) = F_r(l,i) - F_ci_8(i) * F_r(l,i+1)
      enddo
      enddo
*
      return
      end

