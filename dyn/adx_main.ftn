!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r adx_main - adx_main_1_wnd: Process winds in preparation for advection
*                 adx_main_2_pos: Calculate upstream positions at th and t1
*                 adx_main_3_int: Interpolation of rhs
*
#include "model_macros_f.h"
*
      subroutine adx_main ( F_it )
*
#include "impnone.cdk"
*
      integer F_it
*
*author
*     alain patoine
*
*revision
* v3_00 - Desgagne & Lee    - Lam configuration
* v3_01 - Lee V.            - Initialize Lam truncated trajectory counters
* v3_20 - Tanguay M.        - Option of storing instead of redoing TRAJ 
*
*object
*     see id section
*
*arguments
*______________________________________________________________________
*        |                                                       |     |
* NAME   | DESCRIPTION                                           | I/O |
*--------|-------------------------------------------------------|-----|
* F_it   | total number of iterations for trajectories           |  i  |
*________|_______________________________________________________|_____|
*
*notes
*______________________________________________________________________
*                             WORK FIELDS                              |
*----------------------------------------------------------------------|
* There are 3 different species of work fields used throughout the     |
* advection process.                                                   |
*----------------------------------------------------------------------|
* wrk1?: Local grid, no halos, allocated in adx_main (12 units)        |
*        Used in adx_main_2_pos and adx_main_3_int to cary upstream    |
*        positions coordinates, interpolation parameters and           |
*        interpolated values.                                          |
*----------------------------------------------------------------------|
* wrk2?: Used to store positions and interpolation parameters relative |
*        to the work to be done for north and south neighbors.         |
*        Allocated to fit the number of points to treat.               |
*        Used both in adx_main_2_pos and adx_main_3_int (12 units).    |
*----------------------------------------------------------------------|
* wrk3?: Advection grid, with halos, allocated in adx_main (3 units).  |
*        Used for different purpose:                                   |
*                                                                      |
*                            adx_main_1_wnd ---> ( winds in work3 )    |
*                                                                      |
*    ( winds in work3 ) ---> adx_main_2_pos ---> ( t1 pos. in wrk3 )   |
*                                                                      |
*    ( t1 pos. in wrk3) ---> adx_main_3_int                            |
*                                                                      |
* Note that when we cary t1 positions in wrk3, it is larger than the   |
* data.                                                                |
*______________________________________________________________________|
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "ptopo.cdk"
#include "type.cdk"
#include "adx.cdk"
#include "v4dg.cdk"
#include "schm.cdk"
*
************************************************************************
      integer nijkag,i
      real , dimension (adx_nit*adx_njt*G_nk) :: u,v
      real , dimension (adx_nit*adx_njt*(G_nk+1)) :: w
      logical v4dstore_L
*
************************************************************************
      if (Lun_debug_L) write (Lun_out,1000)
*
************************************************************************
      v4dstore_L = V4dg_conf.ne.0 .and. V4dg_oktr_L
*
      do i=1, 4
         adx_trunc(i) = 0
      enddo
*
      call adx_main_1_wnd ( u, v, w, l_ni, l_nj, G_nk)
* 
      call adx_main_2_pos ( F_it, u, v, w )
*
*     Store TRAJ advection winds 
*     --------------------------
      if ( v4dstore_L ) call v4d_rwtraj (13,u,v,w) 
*
      call adx_main_3_int ( u, v, w )
*
*     Store TRAJ RHS interpolated
*     ---------------------------
      if ( v4dstore_L ) call v4d_rwtraj (8)
*
      
***********************************************************************
*
 1000  format(3X,'HORIZONTAL ADVECTION: (S/R ADX_MAIN)')
*
      return
      end
