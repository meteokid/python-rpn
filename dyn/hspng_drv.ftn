! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r hspng_drv - Main driver for horizontal sponge on poles
*
#include "model_macros_f.h"
*
      subroutine hspng_drv ( F_u, F_v, F_zd, F_w, DIST_DIM, Nk)
*
#include "impnone.cdk"
*
      integer DIST_DIM, Nk
      real     F_u(DIST_SHAPE,Nk  ) , F_v(DIST_SHAPE,Nk  ),
     %         F_zd(DIST_SHAPE,Nk+1), F_w(DIST_SHAPE,Nk+1)
*
*author
*     Michel Desgagne  - from hzd_fact.ftn
*
*revision
* v3_01 - Lee V             - initial MPI version for HSPONGE 
* v3_01 - Desgagne M        - introduce hspng_rwnd_L
* v3_20 - Toviessi J. P.    - variable higher order diffusion operator
* v4    - Gravel-Girard-PLante - staggered version
* v4_04 - Girard-PLante     - diffuse only horizontal winds and zdot.
*
*object
*     The diffusion coefficients are (Hspng_coef*Cstv_dt_8) for the
*     horizontal momentum only.
*     The filtering is applied only on Hspng_nj rows on the poles
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
*  F_u
*----------------------------------------------------------------
* 
*implicits
#include "glb_ld.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "schm.cdk"
#include "geomg.cdk"
#include "trp.cdk"
#include "hspng.cdk"
#include "hzd.cdk"
#include "ldnh.cdk"
#include "opr.cdk"
#include "ptopo.cdk"
#include "lun.cdk"
#include "type.cdk"
#include "ver.cdk"
*
      integer i, j, jj, k
      real*8 HALF_8,TWO_8,c_8
      parameter( HALF_8  = 0.5 )
      parameter(  TWO_8  = 2.0 )
*
      real*8 wk1_8(LDIST_SIZ*(Nk+1))
      real*8 g1_8(LYDIST_SIZ*(Trp_12dmax-Trp_12dmin+1)*(G_ni+Ptopo_npex))
      real*8 g2_8((Trp_12dmax-Trp_12dmin+1)*(Trp_22max-Trp_22min+1)*(G_nj+Ptopo_npey))
      real*8 g1p_8(LYDIST_SIZ*(Trp_p12dmax-Trp_p12dmin+1)*(G_ni+Ptopo_npex))
      real*8 g2p_8((Trp_p12dmax-Trp_p12dmin+1)*(Trp_22max-Trp_22min+1)*(G_nj+Ptopo_npey))
      real*8, dimension (Ldnh_maxy*G_ni) :: aix_8,bix_8,cix_8,dix_8
      real*8, dimension (Trp_22max*G_nj) :: aiy_8,biy_8,ciy_8
**
*     __________________________________________________________________
*
      if (Hspng_nj.lt.1) return
*
      if (Lun_debug_L) write(Lun_out,1000)
*
*     Horizontal Momentum
*     ~~~~~~~~~~~~~~~~~~~       
      c_8 = Hspng_coef*Cstv_dt_8/(Dcst_rayt_8*Dcst_rayt_8)
      if (Hzd_difva_L) then
         call hspng_abc ( aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $        Geomg_cy2_8,Hzd_xp0_8,Hzd_xp2_8,Opr_opsyp0_8,Hzd_yp2su_8,
     $        G_ni,G_nj,LYDIST_DIM,G_nj,l_nj)
      else
         call hspng_abc ( aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $        Geomg_cy2_8,Hzd_xp0_8,Hzd_xp2_8,Opr_opsyp0_8,Opr_opsyp2_8,
     $        G_ni,G_nj,LYDIST_DIM,G_nj,l_nj)
      endif
*     
      call hzd_del2 (F_u, wk1_8, Hzd_opsxp0_8, Opr_opsyp0_8(G_nj+1),
     $     aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $     LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $     Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*     
      call hspng_abc ( aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $     Geomg_cyv2_8,Opr_opsxp0_8,Opr_opsxp2_8,Hzd_yp0_8,Hzd_yp2_8,
     $     G_ni,G_nj,LYDIST_DIM,G_njv,l_njv)
*     
      call hzd_del2 (F_v, wk1_8, Opr_opsxp0_8(G_ni+1), Hzd_opsyp0_8,
     $     aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $     LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $     Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_njv)
*     
      if (Hzd_difva_L) then
         call hspng_abc (aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $        Geomg_cy2_8,Opr_opsxp0_8,Opr_opsxp2_8,Opr_opsyp0_8,
     $        Hzd_yp2su_8,G_ni,G_nj,LYDIST_DIM,G_nj,l_nj)
      else
         call hspng_abc (aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $        Geomg_cy2_8,Opr_opsxp0_8,Opr_opsxp2_8,Opr_opsyp0_8,
     $        Opr_opsyp2_8,G_ni,G_nj,LYDIST_DIM,G_nj,l_nj)
      endif
*     
*     Model Vertical motion
*     ~~~~~~~~~~~~~~~~~~~~~
      if(.true.)then
*********not physical, done nevertheless*******
         call hzd_del2  (F_zd, wk1_8,
     $        Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $        aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $        LDIST_DIM,Nk+1, G_ni,G_nj, Ldnh_maxy,
     $        Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
      endif
*     
C     Note from Andre Plante : in the version 3.*.* the true vertical 
C     wind was not diffused if the switch Hspng_uvwdt_L was set to true.
C     Since this option was used most of the time, we do not diffuse
C     the true vertical wind to mimic this. One can restore the diffusion
C     on w with the following code.
      if(.false.)then
         if(.not.Schm_hydro_L)then
*     
*           Vertical wind
*           ~~~~~~~~~~~~~
            call hzd_del2  (F_w, wk1_8,
     $        Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $        aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1p_8,g2p_8,
     $        LDIST_DIM,Nk+1, G_ni,G_nj, Ldnh_maxy,
     $        Trp_p12dmax,Trp_p12dn, Trp_22max ,Trp_22n ,G_nj)
*     
         endif
      endif
*     __________________________________________________________________
 1000 format(/,3X,
     + 'PERFORM FACTORIZED DEL-2 HORIZONTAL DIFFUSION: (S/R HSPNG_DRV)')
*
      return
      end
