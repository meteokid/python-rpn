***s/r hzd_fact_tr - Equivalent to hzd_fact for TRAJECTORY 
*                    (F_pip, F_qp (No Hyd) ONLY)
*
#include <model_macros_f.h>
*
      subroutine hzd_fact_tr (F_pip,F_qp,DIST_DIM,Nk) 
*
#include "impnone.cdk"
*
      integer DIST_DIM, Nk
      real    F_pip(DIST_SHAPE,Nk), F_qp(DIST_SHAPE,Nk)
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_21 - Tanguay M.        - remove vertical modulation
* v2_31 - Tanguay M.        - TRAJ of control for diffusion on momentum only
* v3_03 - Tanguay M.        - Adjoint NoHyd configuration
*
*object
*     see id section
*
*arguments
* 
*implicits
#include "glb_ld.cdk"
#include "ldnh.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "trp.cdk"
#include "hzd.cdk"
#include "opr.cdk"
#include "schm.cdk"
#include "geomg.cdk"
#include "ptopo.cdk"
#include "lun.cdk"
*
      integer i, j, k, dim
      real*8 c_8
      real work(LDIST_SHAPE,Nk)
      real*8 wk1_8(LDIST_SIZ*Nk)
      real*8 g1_8(LYDIST_SIZ*(Trp_12dmax-Trp_12dmin+1)*(G_ni+Ptopo_npex))
      real*8 g2_8((Trp_12dmax-Trp_12dmin+1)*(Trp_22max-Trp_22min+1)*(G_nj+Ptopo_npey))
      real*8, dimension (Ldnh_maxy*G_ni) :: aix_8,bix_8,cix_8,dix_8
      real*8, dimension (Trp_22max *G_nj) :: aiy_8,biy_8,ciy_8
**
*     __________________________________________________________________
*
*
      if (Lun_debug_L) write(Lun_out,1000)
*
      if (Hzd_uvwdt_L) return 
*
*     Geopotential & total divergence (Cstv_phidf_8*Cstv_dt_8)
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      if ( Cstv_phidf_8 .gt. 0.0) then
*
         c_8 = Cstv_phidf_8*Cstv_dt_8/(Dcst_rayt_8*Dcst_rayt_8)
         call hzd_abc (aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,c_8,
     $       Geomg_cy2_8,Opr_opsxp0_8,Opr_opsxp2_8,Opr_opsyp0_8,
     $       Opr_opsyp2_8,G_ni,G_nj,Ldnh_maxy,l_nj,
     $       Trp_22max,Trp_22n,LYDIST_DIM,G_nj,l_nj)
*
*     Save pi' for the diffusion of q'
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         if ( (.not.Schm_hydro_L) .and. Schm_difqp_L ) then
            do k = 1, Nk
            do j = 1,l_nj
            do i = 1,l_ni
               work(i,j,k) = F_pip(i,j,k)
            end do
            end do
            end do
         endif
*
*     The hydrostatic pressure: pi'  
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         call hzd_del2  (F_pip, wk1_8, 
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
*****************************
*  3. Nonyhydrostatic model *
*****************************
*
         if ( .not. Schm_hydro_L ) then
*
         if ( Schm_difqp_L ) then ! q' & related variables
*
*        Indirect diffusion of q'
*        ~~~~~~~~~~~~~~~~~~~~~~~~
         do k=1, Nk  !
         do j=1,l_nj ! p = (pi)exp(q')
         do i=1,l_ni ! ~~~~~~~~~~~~~~~
            work(i,j,k) = ( Geomg_z_8(k) + dble(work(i,j,k)) )
     %                       *exp( dble(F_qp(i,j,k)) )
         end do
         end do
         end do
*
         call hzd_del2  (work, wk1_8,
     $              Opr_opsxp0_8(G_ni+1), Opr_opsyp0_8(G_nj+1),
     $              aix_8,bix_8,cix_8,dix_8,aiy_8,biy_8,ciy_8,g1_8,g2_8,
     $              LDIST_DIM,Nk, G_ni,G_nj, Ldnh_maxy,
     $              Trp_12dmax,Trp_12dn, Trp_22max ,Trp_22n ,G_nj)
*
         do k=1, Nk  !
         do j=1,l_nj ! q' = log(p/pi)
         do i=1,l_ni ! ~~~~~~~~~~~~~~
            F_qp(i,j,k) = log(             dble(work(i,j,k))
     %                       /( Geomg_z_8(k) + dble(F_pip(i,j,k)) )  )
         end do
         end do
         end do
*
         endif
         endif
*
      endif
*
 1000 format(/,
     + 3X,'TRAJ of PERFORM FACTORIZED HORIZONTAL DIFFUSION: (S/R HZD_FACT_TR)',
     +/3X,'==================================================================',/)
*
      return
      end
