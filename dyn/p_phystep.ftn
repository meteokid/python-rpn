***s/r p_phystep - Apply the physical processes: CMC/RPN package
*
#include <model_macros_f.h>
*
      subroutine p_phystep (F_stepno)
*
#include "impnone.cdk"
*
      integer F_stepno
*
*author 
*     Michel roch - rpn - april 1994
*
*revision
* v2_00 - Desgagne M.       - initial MPI version
* v2_21 - Desgagne/Methot/Bilodeau - dzmin calculation
* v2_31 - Desgagne          - clean up and introduce h2o tracers
* v2_32 - Lee V.            - call genslabp here, add "HY" record to slabs
* v3_00 - Laroche S.        - adapted for simplified physics
* v3_02 - Tanguay M.        - Add V4dg_oktr_L for v4d_rwtraj_kmkt 
*   
*object
*	Computes the physical processes and apply the resulting
*	tendencies to the dynamic variables of the model:
*	CMC/RPN package
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_stepno      O           step number
*----------------------------------------------------------------
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "mem.cdk"
#include "macro.cdk"
#include "ptopo.cdk"
#include "busind.cdk"
#include "dimout.cdk"
#include "pslab.cdk"
#include "v4dg.cdk"
#include "p4d_simp.cdk"
*
*modules
      integer  open_db_file,rewind_db_file,close_db_file
      external open_db_file,rewind_db_file,close_db_file
**
      integer dim,err,i,j,k
      real, dimension(:), allocatable :: up,vp,wp,tp,qp,trp,
     $                                   um,vm,tm,trm,lnpsm,
     $                                   sig,kmm,ktm
*
*     ---------------------------------------------------------------
*
      call genslabp()
      dim = (l_maxx-l_minx+1)*(l_maxy-l_miny+1)*l_nk
      allocate (up(dim),vp(dim),wp(dim),tp(dim),qp(dim),
     $          um(dim),vm(dim),tm(dim),lnpsm(dim),
     $          sig(dim),kmm(dim),ktm(dim),
     $          trp(dim*h2o_ntr),trm(dim*h2o_ntr))
*
*C       2.	load all fields required by the physic in memory
*		------------------------------------------------
*
      call p_vmmphy ( up, vp, wp, tp, qp, trp,
     $                um, vm,     tm,     trm,
     $                lnpsm, sig, LDIST_DIM,l_nk )
*
*
*               Store TRAJ for the simplified physics
*               -------------------------------------
      if ( V4dg_conf.ne.0 .and. F_stepno.gt.0) then 
                         call v4d_rwtraj_sigma  (sig,LDIST_DIM,l_nk)
        if( V4dg_oktr_L) call v4d_rwtraj_phystep(up,vp,tp,qp,trp,
     $                                           um,vm,tm,   trm,
     $                                           LDIST_DIM,l_nk)
      endif
*
*
*C       4.	compute physics tendencies
*		--------------------------
*	initialize the number of slices previously done
*
      Mem_pslic = 0
*
      if (.not.Mem_phyncore_L) then
         err = open_db_file   (Lun_waphy)
         err = rewind_db_file (Lun_waphy)
      endif
*
#if defined (MULTI)
#if defined (NEC)
      do 410 icpu = 2, Ptopo_npeMacro
*
        ptparm(icpu) = icpu
        ptcpu(icpu) = icpu
        call ptfork ( pnid(icpu), ptparm(icpu),
     $      p_physlb, ptcpu(icpu), F_stepno ,
     $                up, vp, wp, tp, qp, trp,
     $                um, vm,     tm,     trm,
     $                lnpsm, sig, kmm, ktm, LDIST_DIM, l_nk)
*
 410  continue
#endif
#endif
*
      call p_physlb ( 1, F_stepno,
     $                up, vp, wp, tp, qp, trp,
     $                um, vm,     tm,     trm,
     $                lnpsm, sig, kmm, ktm, LDIST_DIM, l_nk)
*
#if defined (MULTI)
#if defined (NEC)
      do 420 icpu = 2,Ptopo_npeMacro
         call ptjoin ( pnid(icpu) )
 420  continue
#endif
#endif
*
      if (.not.Mem_phyncore_L) err = close_db_file (Lun_waphy)
*
*C   6.	Apply physics tendencies to the appropriate dynamic fields
*C      and insure consistency with other dynamic variables
*       ----------------------------------------------------------
*
      call p_apply ( up,vp,um,vm,tm,trm, tp,qp,
     $               LDIST_DIM,l_nk,F_stepno.gt.0 )
*
*
*       Store TRAJ of vertical exchange coefficients from full-physics
*       --------------------------------------------------------------
      if ( V4dg_conf.ne.0 .and. P4d_pbl.eq.2 .and. F_stepno.gt.0 .and.
     $     V4dg_oktr_L ) call v4d_rwtraj_kmkt(kmm,ktm,LDIST_DIM,l_nk) 

      deallocate (up,vp,wp,tp,qp,trp,um,vm,tm,trm,lnpsm,sig,kmm,ktm)
*
      call frmslabfhand(Pslab_fhand,Pslab_slab,.true.)
*     ---------------------------------------------------------------
*
      return
      end
