*** s/r e_rdhint2 read and perform horizontal interpolation
*
#include <model_macros_f.h>
*
      integer function e_rdhint2 (  
     $            f, lat, lon, ni, nj, nomvar_S,ip1, ip2, ip3, etik_S,
     $            typvar_S, anyip_L, phigrid_L, interp_S, un1, stdo )
*
#include "impnone.cdk"
*
      character* (*) nomvar_S,interp_S,etik_S,typvar_S
      logical anyip_L,phigrid_L
      integer ni, nj, ip1, ip2, ip3, un1, stdo
      real  f(*), lat(*), lon(*)
*
*author
*     Michel Desgagne - January 2001
*
*revision
* v2_21 - Desgagne M.       - initial version
* v3_00 - Lee V.            - must interpolate if not phigrid_L
* v3_00 - Desgagne & Lee    - Lam configuration
*
*implicites
#include "e_maxprms.cdk"
#include "e_option.cdk"
#include "e_anal.cdk"
#include "e_grids.cdk"
#include "hgc.cdk"
*
* NOTES: will return e_rdhint2= -1 if nomvar_S is not found or if
*                                 a problem occurs
*                    e_rdhint2=  0 if nomvar_S is found with specified 
*                                 ip123 and no horizontal interpolation 
*                                 is required
*                    e_rdhint2=  1 if nomvar_S is found and horizontal 
*                                 interpolation is performed
*                    e_rdhint2=  2 if nomvar_S is found with no specific 
*                                 ip123 and no horizontal interpolation 
*                                 is required
**                  
      integer fstinf,fstprm,fstluk
      external fstinf,fstprm,fstluk
      integer  ezqkdef,ezgdef_fmem,ezdefset,ezsetopt,ezsint,gdrls
      external ezqkdef,ezgdef_fmem,ezdefset,ezsetopt,ezsint,gdrls
*
      character*1  typ, grd
      character*2  var
      character*8  lab
      logical tr_ip_L,must_interpo_L
      integer dte, det, ipas, p1, p2, p3, g1, g2, g3, g4, bit,
     $        dty, swa, lng, dlf, ubc, ex1, ex2, ex3
      integer i,key,ni1,nj1,nk1,nic,njc,nkc,err,src_gid,dst_gid
c      real lo(ni),la(nj)
      real,   dimension(:), allocatable  :: w1,xp,yp
*
*--------------------------------------------------------------------
*
      e_rdhint2 = -1      
      key = fstinf (un1,ni1,nj1,nk1,-1,etik_S,ip1,ip2,ip3,typvar_S,
     $                                                   nomvar_S)
      tr_ip_L = key.ge.0
*
      if ( (.not.tr_ip_L) .and. (anyip_L) ) then
         write(stdo,1000) nomvar_S,ip1,ip2,ip3
         key = fstinf (un1,ni1,nj1,nk1,-1,etik_S,-1,-1,-1,typvar_S,
     $                                                   nomvar_S)
      endif
      if (key .lt. 0) then
         write(stdo,2000) nomvar_S,ip1,ip2,ip3
         return
      endif
*
      allocate (w1(ni1*nj1*nk1))
      err = fstluk( w1, key, ni1,nj1,nk1)
      err = fstprm (key, DTE, DET, IPAS, ni1, nj1, nk1, BIT, DTY, P1, 
     $              P2, P3, TYP, VAR, LAB, GRD, G1, G2, G3, G4, SWA, 
     $              LNG, DLF, UBC, EX1, EX2, EX3)
      nic = ni1
      njc = nj1
      nkc = nk1
*
      if ( grd .ne. 'A' .and. grd .ne. 'B' .and.
     %     grd .ne. 'G' .and. grd .ne. 'Z' ) then
         write(stdo,3000) nomvar_S,ip1,ip2,ip3
         goto 999
      endif
*
      if (typ.eq.'A') then
          must_interpo_L =      ni1.ne.ni       .or. nj1.ne.nj 
     $               .or. g1.ne.ig1a     .or. g2.ne.ig2a
     $               .or. g3.ne.ig3a .or. grd.ne.'Z' 
     $               .or. .not. phigrid_L .or.GLHORINT

      else
          must_interpo_L =      ni1.ne.ni       .or. nj1.ne.nj 
     $               .or. g1.ne.ip1fi     .or. g2.ne.ip2fi
     $               .or. g3.ne.ip3fi .or. grd.ne.'Z' 
     $               .or. .not. phigrid_L
      endif
*

      if ( must_interpo_L ) then
*
         write(stdo,9000) nomvar_S,ip1,ip2,ip3
         src_gid = ezqkdef (nic, njc, GRD, g1, g2, g3, g4, un1)
         dst_gid = ezgdef_fmem (ni , nj , 'Z', 'E', Hgc_ig1ro,
     $              Hgc_ig2ro, Hgc_ig3ro, Hgc_ig4ro, lon, lat)
         err = ezdefset ( dst_gid, src_gid )
         err = ezsetopt ('INTERP_DEGREE', interp_S)
         err = ezsint(f, w1)
         e_rdhint2 = 1
*
      else
*
         e_rdhint2 = 0
         write(stdo,5000) nomvar_S
         if (.not.tr_ip_L) e_rdhint2 = 2

         do i=1,ni*nj
            f(i) = w1(i)
         enddo
*
      endif
*
      do i=1,ni*nj
         if ( abs( f(i) ) .lt. 1.0E-30 ) f(i) = 0.
      end do
*
 999  deallocate(w1)
*
 1000 format ( ' Warning: ',a2,' not found with ip123=', 3i5,/,
     $         ' Will try to locate it with no specific ip123')
 2000 format (/' Missing field: ',a2,' for ip1,ip3=:',3i5/)
 3000 format (/' UNKNOWN grid for field: ',a2,' ip123= ',3i5/)
 5000 format (/' NO horizontal interpolation ',a2,' (S/R e_rdhint2)')
 9000 format(' Horizontal interpolation: ',a2,' for ip123=',3i5,
     $       ' (S/R e_rdhint2)')
*
*---------------------------------------------------------------------
*
      return
      end

