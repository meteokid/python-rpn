! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r set_nest - initialization of the commons for nesting variables
*		  within the Virtual Memory manager (VMM)
*
#define SPY_VMM_CREATE spy_vmm_create
#include "model_macros_f.h"
*
      subroutine set_nest
      implicit none
*
*author
*     Desgagne/Lee -        spring 2002
*
*revision
* v3_00 - Desgagne/Lee      - initial version
* v3_20 - Lee V.            - shorten length of vmmname for zd
* v3_30 - Lee V.            - remove some VMM variables
*object
*	This subroutine initializes the commons containing the
*	keys used by the Virtual Memory Manager to identify the
*	nesting variables
*	
*arguments
*	none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "nest.cdk" 
#include "tr3d.cdk"
#include "schm.cdk"
#include "lam.cdk"
*
*modules
      integer vmmcre
      external vmmcre
      character*80 ptath
      integer i
*
**
*
*     ---------------------------------------------------------------
*
      if (Lun_out.gt.0) write (Lun_out,1000)
*
      COMMON_INIT(nest,-100)
*
*	Assign the names of the variables
*
      VMM_NAM(nest_u   ) = 'NEST_U'
      VMM_NAM(nest_v   ) = 'NEST_V'
      VMM_NAM(nest_t   ) = 'NEST_T'
      VMM_NAM(nest_zd  ) = 'NEST_ZD'
      VMM_NAM(nest_w   ) = 'NEST_W'
      VMM_NAM(nest_s   ) = 'NEST_S'
      VMM_NAM(nest_q   ) = 'NEST_Q'
      VMM_NAM(nest_tr  ) = 'NEST_TR'
      VMM_NAM(nest_uf  ) = 'NEST_UF'
      VMM_NAM(nest_vf  ) = 'NEST_VF'
      VMM_NAM(nest_tf  ) = 'NEST_TF'
      VMM_NAM(nest_zdf ) = 'NEST_ZDF'
      VMM_NAM(nest_wf  ) = 'NEST_WF'
      VMM_NAM(nest_sf  ) = 'NEST_SF'
      VMM_NAM(nest_qf  ) = 'NEST_QF'
      VMM_NAM(nest_trf ) = 'NEST_TRF'
*
*  Set the attributes of the variables
*
      ptath='SAVE=Y,CL=1,W=5,INIT=0,MUSTEXIST'
*
      VMM_CREATE(nest_u   , LARRAY3D, 1, ptath)
      VMM_CREATE(nest_v   , LARRAY3D, 1, ptath)
      VMM_CREATE(nest_w, LARRAY2D*(l_nk+1), 1, ptath)
      VMM_CREATE(nest_t   , LARRAY2D*(l_nk+1), 1, ptath)
      VMM_CREATE(nest_zd  , LARRAY2D*(l_nk+1), 1, ptath)
      VMM_CREATE(nest_s   , LARRAY2D, 1, ptath)
      if (.not. Lam_ctebcs_L) then
         VMM_CREATE(nest_uf   , LARRAY3D, 1, ptath)
         VMM_CREATE(nest_vf   , LARRAY3D, 1, ptath)
         VMM_CREATE(nest_wf, LARRAY2D*(l_nk+1), 1, ptath)
         VMM_CREATE(nest_tf   , LARRAY2D*(l_nk+1), 1, ptath)
         VMM_CREATE(nest_zdf  , LARRAY2D*(l_nk+1), 1, ptath)
         VMM_CREATE(nest_sf   , LARRAY2D, 1, ptath)
      endif
      if (.not. Schm_hydro_L) then
         VMM_CREATE(nest_q, LARRAY2D*(l_nk+2), 1, ptath)
         if (.not. Lam_ctebcs_L) then
            VMM_CREATE(nest_qf, LARRAY2D*(l_nk+2), 1, ptath)
         endif
      endif
      if ( Tr3d_ntr .gt. 0 ) then
         VMM_CREATE(nest_tr  , LARRAY2D*(l_nk+1), Tr3d_ntr, ptath)
         if (.not. Lam_ctebcs_L)
     %   VMM_CREATE(nest_trf  , LARRAY2D*(l_nk+1), Tr3d_ntr, ptath)
      endif
*
 1000 format(
     +/,'INITIALIZATION OF NESTING VARIABLE COMDECKS (S/R SET_NEST)',
     +/,'=========================================================')
*
*     ---------------------------------------------------------------
*
      return
      end
