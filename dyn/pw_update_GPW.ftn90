!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r pw_update - Update physical quantities
!
#include "model_macros_f.h"
!
      subroutine pw_update_GPW
      implicit none
!
!author
!     Michel Desgagne - May 2010
!
!revision
! v4_14 - Desgagne, M.     - Initial revision
!
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "cstv.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "vt1.cdk"
#include "vtx.cdk"
#include "p_geof.cdk"
#include "ver.cdk"
#include "pw.cdk"
!
      integer i, j, k, nik
      real*8 r0
      real xtmp(l_ni,l_nk+2), wtmp(l_ni,l_nk+1), wtmp2(l_ni,l_nk+1)
!     ________________________________________________________________
!
      gmmstat = gmm_get(gmmk_pw_wplus_s  ,pw_wplus   ,meta3d)
      gmmstat = gmm_get(gmmk_pw_gzplus_s ,pw_gzplus  ,meta3d)
      gmmstat = gmm_get(gmmk_pw_pmplus_s ,pw_pm_plus ,meta3d)
      gmmstat = gmm_get(gmmk_pw_ptplus_s ,pw_pt_plus ,meta3d)
!
      gmmstat = gmm_get(gmmk_tt1_s,   tt1  , meta3d)
      gmmstat = gmm_get(gmmk_wt1_s,   wt1  , meta3d)
      gmmstat = gmm_get(gmmk_st1_s,   st1  , meta2d)
      gmmstat = gmm_get(gmmk_fiptx_s, fiptx, meta3d)
      gmmstat = gmm_get(gmmk_topo_s,  topo , meta2d)
      if (.not. Schm_hydro_L ) then
         gmmstat = gmm_get(gmmk_qt1_s, qt1, meta3d)
      endif
!
      pw_pm_plus(:,:,1) = Cstv_ptop_8
      do k=1,l_nk+1
         do j=1,l_nj
         do i=1,l_ni
            pw_pm_plus(i,j,k+1) = exp ( Ver_a_8%m(k) + Ver_b_8%m(k)*st1(i,j) )
            pw_pt_plus(i,j,k  ) = sqrt( pw_pm_plus(i,j,k+1)*pw_pm_plus(i,j,k))
         enddo
         enddo
      enddo         
      pw_pt_plus(:,:,l_nk+2) = pw_pm_plus(:,:,l_nk+2)
!
!     compute omega
!     -----------------------
!
      call calomeg_w (pw_wplus,st1,wt1,tt1,LDIST_DIM,l_nk) 
!
      nik  = l_ni*(l_nk+1)
      do j=1,l_nj

         do i= 1, l_ni
            xtmp (i,1)           = log(pw_pt_plus(i,j,1))
            wtmp2(i,1)           =     pw_pt_plus(i,j,1)
            xtmp (i,l_nk+2)      = st1(i,j)+Cstv_Zsrf_8
            pw_gzplus(i,j,1)     = fiptx(i,j,0)+Ver_fistr_8%m(0)
            pw_gzplus(i,j,l_nk+2)= topo(i,j)
         enddo
         do k= 2, l_nk+1
         do i= 1, l_ni
            xtmp (i,k) = Ver_a_8%m(k-1) + Ver_b_8%m(k-1)*st1(i,j)
            wtmp2(i,k) = pw_pt_plus(i,j,k)
            pw_gzplus(i,j,k) = fiptx(i,j,k-1)+Ver_fistr_8%m(k-1)
         enddo
         enddo
!
         call vslog(wtmp,wtmp2,nik)
         do k= 1, l_nk+1
         do i= 1, l_ni
            wtmp2(i,k) = xtmp(i,k+1)-xtmp(i,k)
            xtmp(i,k)  = xtmp(i,k+1)-wtmp(i,k)
         enddo
         enddo
         call vsrec(wtmp,wtmp2,nik)
!
         do k= 1, l_nk+1
         do i= 1, l_ni
            r0 = wtmp(i,k)*xtmp(i,k)
            pw_gzplus(i,j,k) =  &
            r0*pw_gzplus(i,j,k) + (1.D0-r0)*pw_gzplus(i,j,k+1) - topo(i,j)
         end do
         end do
!
         do i= 1, l_ni
            pw_wplus (i,j,l_nk+2) = pw_wplus (i,j,l_nk+1) 
            pw_gzplus(i,j,l_nk+2) = 0.
         end do

      end do
!     ________________________________________________________________
!
      return
      end
