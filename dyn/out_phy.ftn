copyright (C) 2001  MSC-RPN COMM  %%%MC2%%%
***s/r out_phy
#include <model_macros_f.h>
*
      subroutine out_phy ( bus_o,doni,donj,stepno )
      use v4d_prof, only: Pr_nsim4d

      implicit none
*
      integer fni,fnj,doni,donj,ni,nj,stepno
      real bus_o(doni*donj,*)
*
*AUTHOR     Michel Desgagne                July 2004 (MC2)
*
*REVISION
* v3_20 - Lee V.            -  initial GEMDM version
*
*
*OBJECT
*    Gather the index of physics variables to write on disk 
*    for the current timestep.
*
*ARGUMENTS
*    NAMES     I/O  TYPE  A/S        DESCRIPTION
*
*   fni         I    I    S    folded dimension along X
*   fnj         I    I    S    folded dimension along Y
*   doni        I    I    S    computational hor. dimension along X
*   donj        I    I    S    computational hor. dimension along Y
*   ni          I    I    S    regular dimension along X
*   nj          I    I    S    regular dimension along Y
*   stepno      I    I    S    step number
*
*IMPLICIT
#include "glb_ld.cdk"
#include "glb_pil.cdk"
#include "dcst.cdk"
#include "dimout.cdk"
#include "geomg.cdk"
#include "geomn.cdk"
#include "init.cdk"
#include "rstr.cdk"
#include "grid.cdk"
#include "out.cdk"
#include "out3.cdk"
#include "p_bus.cdk"
#include "obus.cdk"
#include "grd.cdk"
#include "level.cdk"
#include "outp.cdk"
#include "ptopo.cdk"
#include "v4dg.cdk"
*
**
      character*4 ext_S
      integer i,j,k,mult,nk_o,levset,ii,jj,kk,ip3
      integer, dimension (:), allocatable :: ind_o
      integer irff(100)
      logical periodx_L
      real rff(100)
*----------------------------------------------------------------------
*
      if (Obus_top.le.0) return
      ip3=0
      if (V4dg_conf.ne.0) then
          if (.not.V4dg_4dvar_L) then
              ip3 = V4dg_status
              if (V4dg_conf/100.eq.1.and.V4dg_ad_L)
     %        ip3 = 20 + V4dg_status
          else
              ip3 = V4dg_status
              if(V4dg_tl_L) ip3 = 1000 + Pr_nsim4d
              if(V4dg_ad_L) ip3 = 2000 + Pr_nsim4d
          endif
      endif
*     setup of filename extension if needed
      ext_S=""
      if ( ((Init_balgm_L).and.(.not.Rstri_idon_L)).and.
     $     ((stepno.ge.(Init_dfnp-1)/2)) )
     $       ext_S = '_dgf'

*########## REGULAR OUTPUT #######################################
*
*     ON sortie_p sets
*
      do 100 kk=1,Outp_sets
         if ( Outp_dostep_L(kk) )then
         periodx_L=.false.
         if (.not.G_lam .and. (Grid_x1(Outp_grid(kk))-Grid_x0(Outp_grid(kk))+1).eq. G_ni ) periodx_L= .true.
            call out_sgrid(max(Grid_x0(outp_grid(kk)),1+Lam_pil_w-p_nmp),
     $                   min(Grid_x1(outp_grid(kk)),G_ni-Lam_pil_e+p_nmp),
     $                   max(Grid_y0(outp_grid(kk)),1+Lam_pil_s-p_nmp),
     $                   min(Grid_y1(outp_grid(kk)),G_nj-Lam_pil_n+p_nmp),
     $                   periodx_L,
     $                   Grid_ig1(outp_grid(kk)),Grid_ig2(outp_grid(kk)),
     $                   Grid_stride(outp_grid(kk)),Geomn_longs,Geomn_latgs)
         levset= Outp_lev(kk)
         nk_o =  Level_max(levset)
         allocate (ind_o(nk_o+1))
         call out_slev(Level_typ(levset),Level(1,levset),
     $                 ind_o,nk_o,G_nk,Level_kind_ip1,'p')
         call out_sfile(out3_closestep,stepno,ip3,ext_S)
         if (Level_typ(levset).eq.'M') then
         do ii=1, Outp_var_max(kk)
            do j=1,Obus_top
               if ( Outp_var_S(ii,kk).eq. Obus_var_S(j) ) then
*
                    if (obus_shp(j).gt.1) then
*                   3D field
                       if (obus_stag(j).eq.0) then
                           call ecris_fst2(bus_o(1,obus_offset(j)),
     $                       1,doni,1,donj,Geomg_hyb,obus_var_s(j),
     $                       1.0,0.0,Out_kind,G_nk,ind_o,nk_o,
     $                       Outp_nbit(ii,kk) )
                       else
*                   3D field staggerred
                           do i=1,G_nk-2
                              rff(i)= (Geomg_hyb(i+1)+Geomg_hyb(i))/2.
                           enddo
                           do i=G_nk-1,G_nk
                              rff(i)=Geomg_hyb(i)
                           enddo
                           call ecris_fst2(bus_o(1,obus_offset(j)),
     $                       1,doni,1,donj,rff,obus_var_s(j),
     $                       1.0,0.0,Out_kind,G_nk,ind_o,nk_o,
     $                       Outp_nbit(ii,kk) )
                       endif
                    else
*                      2D field-multiple
                       if ( obus_mult(j).gt.1) then
                          do mult=1,obus_mult(j)
                              rff(mult)= mult
                              irff(mult)=mult
                          enddo
                          call ecris_fst2(bus_o(1,obus_offset(j)),
     $                    1,doni,1,donj,rff,obus_var_s(j),
     $                    1.0,0.0,3,obus_mult(j),irff,obus_mult(j),
     $                    Outp_nbit(ii,kk) )
                       else
*                      2d field
                          call ecris_fst2(bus_o(1,obus_offset(j)),
     $                             1,doni,1,donj,0.0,obus_var_s(j),
     $                             Obus_mul(j),Obus_add(j), -1,1,1,1, 
     $                             Outp_nbit(ii,kk) )
                       endif
                    endif
               endif
            enddo
         enddo
         endif
*
         deallocate (ind_o)
*
         call out_cfile
         endif
*
  100 continue
*
*----------------------------------------------------------------------
      return
      end


