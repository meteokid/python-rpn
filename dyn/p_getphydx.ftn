***function p_getphydx - obtain index from physic buses for a physic variable
*
#include <model_macros_f.h>
*
      integer function p_getphydx(F_varname_S)
*
#include "impnone.cdk"
*
      character* (*) F_varname_S
*
*author: J.P. Toviessi - 1996 - cmc
*
*revision
* v2_00 - Lee V.            - initial MPI version (from gtphydx v1_03)
* v2_10 - Lee V.            - modified to output any variable from the 
* v2_10                       physics
* v2_20 - Lee V.            - enable to output entry bus variables 
*
*object
*     to obtain the index of the physics variable from the physics buses
*     (permanent,dynamic,volatile,entry).
*
*argument
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_varname_S    I    - name of variable for which the index is sought
*----------------------------------------------------------------
*
*implicits
*
#include "glb_ld.cdk"
#include "p_bus.cdk"
**
      integer i
      character*4 ptvar_S
      p_getphydx = -1
*
*     transfer F_varname_S to fixed length string
*
      ptvar_S = F_varname_S
*
*     looking in the permanent and class bus (BUSP)
      do i = 1, P_bper_top
         if(peron(i)(1:4) .eq. ptvar_S) then
            p_getphydx = i
            return
         endif
      enddo
*
*     looking in the dynamic bus (BUSD)
      do i = 1, P_bdyn_top
         if(dynon(i)(1:4) .eq. ptvar_S) then
            p_getphydx = i + P_bper_top
            return
         endif
      enddo
*
*     looking in the volatile bus (BUSV)
      do i = 1, P_bvol_top
         if(volon(i)(1:4) .eq. ptvar_S) then
            p_getphydx = i + P_bper_top + P_bdyn_top
            return
         endif
      enddo
*
*     looking in the entry bus (BUSE)
      do i = 1, P_bent_top
         if(enton(i)(1:4) .eq. ptvar_S) then
            p_getphydx = i + P_bper_top + P_bdyn_top + P_bvol_top
            return
         endif
      enddo
      return
      end
