! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r adx_pol0 - set values at the pole = 0.0; used for wind images
*                 and wind-like quantities.
*
      subroutine adx_pol0 ( F_field, F_j, F_nic, F_halox,
     %                      F_njc, F_haloy, F_nk )
*
#include "impnone.cdk"
*
      integer  F_j, F_nic, F_halox, F_njc, F_haloy, F_nk
*
      real F_field (-F_halox+1:F_nic+F_halox,
     %              -F_haloy+1:F_njc+F_haloy, F_nk)
*
*author
*     alain patoine
*
*revision
* v3_21 - Desgagne M.       - Revision Openmp
*
*language
*     fortran 77
*
*object
*     see id section
*
*arguments
*______________________________________________________________________
*              |                                                 |     |
* NAME         | DESCRIPTION                                     | I/O |
*--------------|-------------------------------------------------|-----|
*              |                                                 |     |
* F_field      | field to treat                                  |  io |
* F_j          | j position to fill                              |  i  |
*              |                                                 |     |
* F_nic        | \ number of points in x,y direction in central  |  i  |
* F_njc        | / portion of advection grid (excluding halos)   |  i  |
*              |                                                 |     |
* F_halox      | size of halo in x direction (advection grid)    |  i  |
* F_haloy      | size of halo in y direction (advection grid)    |  i  |
*              |                                                 |     |
* F_nk         | number of levels                                |  i  |
*______________|_________________________________________________|_____|
*
*implicits
*     none
*
*modules
*     none
************************************************************************
      integer i,k
*
!$omp do
      do k = 1,F_nk
*
         do i=-F_halox+1,F_nic+F_halox
            F_field(i,F_j,k) = 0.0
         enddo
*
      enddo
!$omp enddo
*
      return
      end

