!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r wdpers - transposes the winds at time t1 into wind 
*               components at thh
*
#include "model_macros_f.h"
*
      subroutine wdpers_h
*
#include "impnone.cdk"
*
*author 
*     Sylvie Gravel - rpn - nov 1994
*
*revision
* v2_00 - Desgagne M.       - initial MPI version
* v3_00 - Desgagne & Lee    - Lam configuration
* v3_20 - Tanguay M.        - 1d higher order diffusion operator 
* v3_21 - Tanguay M.        - do filtering at t=0 in v4d_predat
*
*object
*	
*arguments
*	none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "vthh.cdk"
#include "rhsc.cdk"
#include "vt1.cdk"
#include "hzd.cdk"
#include "lctl.cdk"
*
*modules
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
*notes
*	zdthh is a displacement, not a position
*
      integer pnerr, pnlkey1(12),i, j, k
**
*     ---------------------------------------------------------------
*
      if (Lun_debug_L) write(Lun_out,1000)
      pnlkey1(1) = VMM_KEY(uthh)
      pnlkey1(2) = VMM_KEY(vthh)
      pnlkey1(3) = VMM_KEY(ut1)
      pnlkey1(4) = VMM_KEY(vt1)
      pnlkey1(5) = VMM_KEY(zdthh)
      pnlkey1(6) = VMM_KEY(zdt1)
*
      pnerr = vmmlod(pnlkey1,6)
      pnerr = VMM_GET_VAR(zdthh)
      pnerr = VMM_GET_VAR(zdt1)
      pnerr = VMM_GET_VAR(uthh)
      pnerr = VMM_GET_VAR(vthh)
      pnerr = VMM_GET_VAR(ut1)
      pnerr = VMM_GET_VAR(vt1)
*
*     Filtering  
*     ---------
      if (Lctl_step.gt.1) then
      call tmg_start0 ( 12, 'HZD1D    ' )
      if (Hzd_t1_0_L) call hzd_hoffld (ut1,   LDIST_DIM, G_nk, 1)
      if (Hzd_t1_0_L) call hzd_hoffld (vt1,   LDIST_DIM, G_nk, 2)
      if (Hzd_t1_0_L) call hzd_hoffld (zdt1, LDIST_DIM, G_nk+1, 3)
      call tmg_stop0 (12)
      endif
*
*C	1. Initialise wind, pi* dot and upstream positions at
*	   time t0-dt/2 (thh) for mid trajectory computations
*	   --------------------------------------------------
*
*
      do k=1,l_nk
         do j= 1, l_nj
         do i= 1, l_ni
            uthh(i,j,k)   = ut1(i,j,k)
         end do
         end do
         do j= 1, l_njv
         do i= 1, l_ni
            vthh(i,j,k) = vt1(i,j,k)
         end do
         end do
      end do
      do k=1,l_nk+1
         do j= 1, l_nj
         do i= 1, l_ni
            zdthh(i,j,k) = 0.0
         end do
         end do
      end do
*
      pnerr = vmmuld(-1,0)
*
*
*     ---------------------------------------------------------------
*
 1000 format(
     +3X,'TRANSFER WINDS T1 ==> THH : (S/R WDPERS_H)')
*
      return
      end
