***s/r nesajr -- Horizontal blending of field "fn" with field "fd".
*
#include "model_macros_f.h"
*
      subroutine nesajr (F_fn, F_fd, DIST_DIM, Nk, F_is, F_js, 
     $                                      F_ndavx, F_ndavy)
      implicit none
*
      integer DIST_DIM, NK, F_is, F_js, F_ndavx, F_ndavy
      real F_fn(DIST_SHAPE,Nk), F_fd(DIST_SHAPE,Nk)
*
*author 
*     Desgagne       - spring 2002 (after MC2 v_4.9.3)
*
*revision
* v3_00 - Desgagne             - initial version
*
*object
*     This subroutine blends the field "fn", updated by a dynamic
*     timestep, with the nesting field "fd". Nesting is performed
*     on ndavx+1 points along the x-axis and on ndavy+1 points along 
*     the y-axis.
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
*  F_fn         O           field to be blended
*  F_fd         I           blending field
*  F_is         I           staggering parameter along x
*  F_js         I           staggering parameter along y
*  F_ndavx      I           thichness of sponge layer along x
*  F_ndavy      I           thichness of sponge layer along y
*----------------------------------------------------------------
*
*implicit
#include "glb_ld.cdk"
*
**
*----------------------------------------------------------------------
      if ((F_ndavx.eq.0).and.(F_ndavy.eq.0)) return
      if (north+south+east+west.eq.4)
     $  call nes4s (F_fn,F_fd,DIST_DIM,Nk,F_is,F_js,F_ndavx,F_ndavy)
      if (north+south+east+west.eq.3)
     $  call nes3s (F_fn,F_fd,DIST_DIM,Nk,F_is,F_js,F_ndavx,F_ndavy)
      if (north+south+east+west.eq.2)
     $  call nes2s (F_fn,F_fd,DIST_DIM,Nk,F_is,F_js,F_ndavx,F_ndavy)
      if (north+south+east+west.eq.1)
     $  call nes1s (F_fn,F_fd,DIST_DIM,Nk,F_is,F_js,F_ndavx,F_ndavy)
*----------------------------------------------------------------------
      return
      end



