***s/r nest_update -
*
#include "model_macros_f.h"
*
      subroutine nest_update ()
      implicit none
*
*author 
*     Michel Desgagne   - Spring 2006
*
*revision
* v3_30 - Lee V.          - initial version
*
*object
*
*arguments
*       none
*
*implicits
#include "acid.cdk"
#include "glb_ld.cdk"
#include "bcsdim.cdk"
#include "bcsgrds.cdk"
#include "bcsmem.cdk"
#include "nest.cdk"
#include "tr3d.cdk"
#include "schm.cdk"
*
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      integer err,key(7),nvar,id
      integer key1(Tr3d_ntr),key1_,n
      real tr
      pointer (patr, tr(LDIST_SHAPE,*))
*----------------------------------------------------------------------
*
      if (north+south+west+east.lt.1) return
*
      key(1)=VMM_KEY(nest_u)
      key(2)=VMM_KEY(nest_v)
      key(3)=VMM_KEY(nest_t)
      key(4)=VMM_KEY(nest_psd)
      key(5)=VMM_KEY(nest_s)
      nvar = 5
*
      if (.not.Schm_hydro_L) then
         key(6)=VMM_KEY(nest_w)
         key(7)=VMM_KEY(nest_qsec)
         nvar = 7
      endif
*
      err = vmmlod(key,nvar)
      err = VMM_GET_VAR(nest_u)
      err = VMM_GET_VAR(nest_v)
      err = VMM_GET_VAR(nest_t)
      err = VMM_GET_VAR(nest_psd)
      err = VMM_GET_VAR(nest_s)
      if (.not.Schm_hydro_L) then
         err = VMM_GET_VAR(nest_w)
         err = VMM_GET_VAR(nest_qsec)
      endif
*
      call trnes (nest_u,bcs_u(bcs_is),bcs_u(bcs_in),
     $       bcs_u(bcs_iw),bcs_u(bcs_ie),l_minx,l_maxx,l_miny,l_maxy,
     $       minxs,maxxs,minys,maxys,minxw,maxxw,minyw,maxyw,G_nk,1)
      call trnes (nest_v,bcs_v(bcs_is),bcs_v(bcs_in),
     $       bcs_v(bcs_iw),bcs_v(bcs_ie),l_minx,l_maxx,l_miny,l_maxy,
     $       minxs,maxxs,minys,maxys,minxw,maxxw,minyw,maxyw,G_nk,1)
      call trnes (nest_t,bcs_t(bcs_is),bcs_t(bcs_in),
     $       bcs_t(bcs_iw),bcs_t(bcs_ie),l_minx,l_maxx,l_miny,l_maxy,
     $       minxs,maxxs,minys,maxys,minxw,maxxw,minyw,maxyw,G_nk+1,1)
      call trnes (nest_s,bcs_s(bcs_is),bcs_s(bcs_in),
     $       bcs_s(bcs_iw),bcs_s(bcs_ie),l_minx,l_maxx,l_miny,l_maxy,
     $       minxs,maxxs,minys,maxys,minxw,maxxw,minyw,maxyw,1,1)
      call trnes (nest_psd,bcs_psd(bcs_is),bcs_psd(bcs_in),
     $     bcs_psd(bcs_iw),bcs_psd(bcs_ie),l_minx,l_maxx,l_miny,l_maxy,
     $       minxs,maxxs,minys,maxys,minxw,maxxw,minyw,maxyw,G_nk+1,1)
      if (.not.Schm_hydro_L) then
          call trnes (nest_w,bcs_w(bcs_is),bcs_w(bcs_in),
     $       bcs_w(bcs_iw),bcs_w(bcs_ie),l_minx,l_maxx,l_miny,l_maxy,
     $       minxs,maxxs,minys,maxys,minxw,maxxw,minyw,maxyw,G_nk+1,1)
          call trnes (nest_qsec,bcs_qsec(bcs_is),bcs_qsec(bcs_in),
     $       bcs_qsec(bcs_iw),bcs_qsec(bcs_ie),l_minx,l_maxx,l_miny,l_maxy,
     $       minxs,maxxs,minys,maxys,minxw,maxxw,minyw,maxyw,G_nk+2,1)
      endif

      err = vmmuld(key,nvar)
*
      key1_ = VMM_KEY (nest_tr)
      do n=1,Tr3d_ntr
         key1(n) = key1_ + n
      end do
      if (Tr3d_ntr.gt.0) then
         err = vmmlod(key1,Tr3d_ntr)
         do n=1,Tr3d_ntr
            id = (n-1)*bcs_sz+1
            err = vmmget(key1(n),patr,tr)
            call trnes(tr,bcs_tr(id),
     $                 bcs_tr(id+bcs_in-1),bcs_tr(id+bcs_iw-1),
     $                 bcs_tr(id+bcs_ie-1),l_minx,l_maxx,l_miny,l_maxy,
     $       minxs,maxxs,minys,maxys,minxw,maxxw,minyw,maxyw,G_nk+1,1)
         enddo
         err = vmmuld(key1,Tr3d_ntr)
      endif
*
*----------------------------------------------------------------------
      return
      end
