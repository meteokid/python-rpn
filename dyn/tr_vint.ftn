! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r tr_vint - Perform vertical interpolation on 3D tracers
*
#include "model_macros_f.h"
*
      subroutine tr_vint ( tr,trname,trval,data_spec,bmf_time1,
     $      bmf_time2,nk,pps,rna_a,rna_b,ps,vterp_lv,DIST_DIM )
      implicit none
*
      character* (*) trname
      integer data_spec(*),nk,bmf_time1,bmf_time2,vterp_lv,DIST_DIM
      real tr(DIST_SHAPE,*),trval,pps(*),ps(*)
      real*8 rna_a(*),rna_b(*)
*
*author
*     Michel Desgagne  -  Sept 2001
*
*revision
* v2_31 - Desgagne M.       - initial version
* v3_00 - Desgagne & Lee    - Lam configuration
* v3_11 - Lee V.           - correct vertical interp on tracers from pres anal
* v3_30 - Lee V.           - clip tracers to zero after interpolation
*
*object
*
*arguments
*
*implicits
#include "glb_ld.cdk"
#include "acq.cdk"
#include "schm.cdk"
#include "type.cdk"
#include "ver.cdk"
#include "cstv.cdk"
*
      integer i,j,k,jjj,kk,err,bmf_get
      external bmf_get
      real w1(l_ni,l_nj,vterp_lv),w2(l_ni,l_nj,G_nk+2)
      real dstlev(l_ni,l_nj,G_nk+2)
      real srclev(l_ni,l_nj,vterp_lv)
*
*-------------------------------------------------------------------
*
      err = -1
      if (trname.ne.'    ')
     $err= bmf_get ( trname,bmf_time1,bmf_time2,-1,w1,
     $                         -1.,1,l_ni,1,l_nj,1,nk )
*
      if (err.eq.0) then
        if ((schm_offline_L).and.(Acqi_vterplv.eq.1)) then
            do k=1,G_nk+2
            do j=1,l_nj
            do i=1,l_ni
               tr(i,j,k) = w1(i,j,1)
            enddo
            enddo         
            enddo       
         else if (data_spec(1).eq.0) then
            do k=1,G_nk+2
            do j=1,l_nj
            do i=1,l_ni
               tr(i,j,k) = w1(i,j,k)
            enddo
            enddo         
            enddo 
         else if (data_spec(2).eq.4) then
            print *,' tr_vint: cannot do pressure interp'
            stop
            call vte_vrtical ( w1, ps, l_ni*l_nj, G_nk, rna_a, 
     $                                          vterp_lv, .false. )
            do k=1,G_nk+2
            do j=1,l_nj
            do i=1,l_ni
               tr(i,j,k) = w1(i,j,k)
            enddo
            enddo         
            enddo 
         else
            call get_lnpress3d(srclev,ps,l_ni*l_nj,rna_a,
     $            rna_b, Cstv_pisrf_8,vterp_lv,Acqi_datasp(2))
            call get_lnpress3d(dstlev,pps,l_ni*l_nj,Ver_a_spcl_8%t,
     $            Ver_b_spcl_8%t, Cstv_pisrf_8,G_nk+2,Acqi_datasp(2))
            call vte_intvertx(w2,w1,srclev,dstlev,Acqi_nbpts,
     $           vterp_lv,G_nk+2,'HU')
* ALWAYS clip tracers to zero after vertical interpolation (Desgagne)
            do k=1,G_nk+2
            do j=1,l_nj
            do i=1,l_ni
               tr(i,j,k) = amax1(w2(i,j,k),0.0)
            enddo
            enddo         
            enddo 
         endif
      else 
* No data found for this tracer, set to assigned value
         do k=1,G_nk+2
         do j=1,l_nj
         do i=1,l_ni
            tr(i,j,k) = trval
         enddo
         enddo         
         enddo 
      endif
*
*-------------------------------------------------------------------
*
      return
      end


