! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r theo_nest - nesting for theoretical cases only
*
#include "model_macros_f.h"
*
      subroutine theo_nest
      implicit none
*author 
*     Desgagne & Lee      - spring 2002 (after MC2 v_4.9.3)
*
*revision
* v3_00 - Desgagne & Lee     - initial version
* v3_01 - Desgagne M.        - add Robert & Yakimiw horizontal blending
* v3_11 - Gravel S.          - adapt for theoretical cases
* v3_30 - Lee V.             - extracted from glb_bound
*
*object
*
*arguments
*       none
*
*implicits
#include "glb_ld.cdk"
#include "theo.cdk"
#include "zblen.cdk"
*
*----------------------------------------------------------------------
*
      if (north+south+west+east.ge.1) then
         if ( Theo_case_S .eq. 'BUBBLE'   .or.   
     $        Theo_case_S .eq. 'BUBBLE_G' .or.   
     $        Theo_case_S .eq. '2_BUBBLES' ) then
              call mirror()
         else
              call nest_bcs
              call nest_blen
         endif

         call slabsym()
      endif
*
 9988 if ( Zblen_L ) call height_sponge()
*      
*----------------------------------------------------------------------
*
      return
      end
