***s/r hatoprg - downward vertical integration 
*
#include <model_macros_f.h>
*
      subroutine hatoprg ( F_gg, F_ff, F_con, F_hz_8, ng, Nk )
*
#include "impnone.cdk"
*
      integer ng, Nk
      real F_gg(ng,Nk),F_ff(ng,Nk),F_con
      real*8  F_hz_8(Nk)
*
*author
*     J. Cote - rpn - nov 93 
*
*revision
* v2_00 - Desgagne M.       - initial MPI version (from hatoprg v1_03)
* v3_00 - Desgagne & Lee    - Lam configuration
* v3_21 - Desgagne M.       - Revision OpenMP
*
*object  DOWNWARD vertical integration 
*
*                 / z(sfc) 
*        G   =  C |        F dz 
*         k       / z(k)
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
*  F_gg        O          resulting vertical integration
*  F_ff        I          input field to be integrated  
*  F_con       I          mutiplication coefficient 
*  F_hz_8      I          intervals in z-direction
*----------------------------------------------------------------
*
*implicits 
#include "glb_ld.cdk"
*
      integer i, k
      real*8 wk(G_nk-1),r
*
**
*     __________________________________________________________________
*
      wk(:  ) = .5*F_con*F_hz_8(:)
*
*mdmdmdmd real r,rtmp
c      do i= 1, ng
c         r = 0.0
c         do k=G_nk-1,1,-1
c            F_gg(i,k+1) = r
c            rtmp = wk(k) * ( F_ff(i,k+1) + F_ff(i,k) )
c            r = r + rtmp
c         end do
c         F_gg(i,1) = r
c      end do
*
!$omp do
      do i= 1, ng
*
         r=0.
         do k= G_nk-1, 1, -1
*
           F_gg(i,k+1) = r
           r = r + wk(k)*( F_ff(i,k+1) + F_ff(i,k) )
*
         end do
         F_gg(i,1) = r
*
      end do
!$omp enddo
*
*     __________________________________________________________________
*
      return
      end
