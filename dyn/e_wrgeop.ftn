! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r e_wrgeop
*
      subroutine e_wrgeop(topo_L) 
      implicit none
      logical topo_L
*
*author 
*     M. Desgagne - January 2001
*
*revision
* v2_20 - Pellerin P.       - Adapted from MC2 to writeout geobus
* v2_21 - Desgagne M.       - Include global statistics
* v2_21 - Lee V.            - Correction on IF statement for LAM
* v3_30 - Desgagne M.       - new physics interface
* v4_03 - Lee/Desgagne - ISST
*
#include "e_grids.cdk"
* comdecks used also in GEMPP
#include "model_macros_f.h"
#include "itf_phy_buses.cdk"
#include "geobus.cdk"
#include "lctl.cdk"
#include "lun.cdk"
#include "path.cdk"
#include <clib_interface.cdk>
*
*MODULES
*
**
      integer i, j, nim, njm, ict, ivar, im, osgeo,topovar,topoict,err
      character*1024 rootfn
*
*----------------------------------------------------------------------
*
      Lctl_r8stat_L=.true.
      nim=nifi
      njm=njfi
*
      if (.not.lam) nim=nifi-1
*
*     contraction of the geophysical bus (to remove the last column)
*
         ict=0
         do ivar = 1, p_bgeo_top
         do im   = 1, geopar(ivar,3)
            do j=1,njm
            do i=1,nim
               ict=ict+1
               geobus(ict)=
     $         geobus(geopar(ivar,1)+ (im-1)*nifi*njfi+ (j-1)*nifi+ i-1)
c              if (geonm(ivar,1).eq.'MF') print*,'ict=',ict,'geobus(ict)=',geobus(ict)
            end do
            end do
         end do
         end do
*
*     re-defining geobus structure in terms of nim,njm
*
         p_bgeo_top=0
         p_bgeo_siz=0
         topovar=0
         topoict=0
         do i=1,p_bgeo_top
            geonm(i,1)=' '
            geonm(i,2)=' '
            geonm(i,5)=' '
         enddo
         call e_geopini (nim,njm,-1)
*
      lun_out = 6
      do i=1,p_bgeo_top
         if (geonm(i,1).eq.'MF') then
                topovar=i
                topoict=geopar(i,1)
         endif
      do j=1,geopar(i,3)
         call statfld (geobus(geopar(i,1)+(j-1)*nim*njm),geonm(i,1),
     $                 j,"geopfld",1,nim,1,njm,1,1,1,1,nim,njm,1)
      end do
      end do
      if (topovar.eq.0) print *,'NO TOPO FOUNd'
*
      rootfn = trim(Path_output_S)//'/INIT_SFC/'
      err    = clib_mkdir (trim(rootfn))
      osgeo = 53
      open(osgeo,file=trim(rootfn)//'/geophy.bin',access='SEQUENTIAL',
     $                                      form='UNFORMATTED')
*
      if (topo_L) then
          p_bgeo_top=1
          p_bgeo_siz= nim*njm
          print *,'topoict=',topoict ,topoict+nim*njm-1
          print *,'e_wrgeop: topovar=',topovar,geonm (topovar,1)
          print *,'e_wrgeop: mf(12861)=',geobus(12861)
          geopar(topovar,1) = 1
          geopar(topovar,2) = p_bgeo_siz
          geopar(topovar,3) = 1
          write(osgeo) p_bgeo_top, p_bgeo_siz
          write(osgeo) geonm (topovar,1), geonm (topovar,2), geonm (topovar,5)
          write(osgeo) geopar(topovar,1), geopar(topovar,2), geopar(topovar,3)
          write(osgeo) (geobus(i),i=topoict,topoict+p_bgeo_siz-1)
          close (osgeo)
          return
      endif
      write(osgeo) p_bgeo_top, p_bgeo_siz
      write(osgeo) (geonm (i,1),i=1,p_bgeo_top),
     $             (geonm (i,2),i=1,p_bgeo_top),
     $             (geonm (i,5),i=1,p_bgeo_top)
      write(osgeo) (geopar(i,1),i=1,p_bgeo_top),
     $             (geopar(i,2),i=1,p_bgeo_top),
     $             (geopar(i,3),i=1,p_bgeo_top)
      write(osgeo) (geobus(i),i=1,p_bgeo_siz)
*
      close (osgeo)
*
*----------------------------------------------------------------------
      return
      end



