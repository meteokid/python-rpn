***s/p sglobo - initialize output options in Setsor and Slab tables
*
#include <model_macros_f.h>
*
      integer function sglobo()
#include "impnone.cdk"
*
*author 
*     J. Caveen - rpn - octobre 1994
*
*revision
* v2_00 - Lee V.            - initial MPI version (from sglobo v1_03)
* v2_10 - Lee V.            - replaced CNMXPHY with Slab_pntop
* v2_21 - J. P. Toviessi    - rename slab to Pslab
* v2_30 - Lee V.            - default of bit output is set to Out_nbitg
* v2_30                       unless otherwise specified in Out_xnbits
* v2_31 - Lee V.            - include chemistry tracer output
*
*object
*
*arguments
*
*implicits
#include "glb_ld.cdk"
#include "dimout.cdk"
#include "out.cdk"
#include "setsor.cdk"
#include "lun.cdk"
#include "p_bus.cdk"
#include "chem.cdk"
*
*modules
      integer getvndx, p_getphydx,chem_getdx
      external getvndx, p_getphydx,chem_getdx
      integer i, pnerror, pnindx
      integer pnfiltv, pnbitv, pnbits
*
*     ---------------------------------------------------------------
*
      do i = 1, CNMXDYN
         Setsor_useit(i) = 0
         Setsor_xnbits(i) = Out_nbitg
         Setsor_filtcoef(i) = 0.0
         Setsor_filtpass(i) = 0
      enddo
      do i = 1, P_bphy_top
         Phy_useit(i) = 0
         Phy_xnbits(i) = Out_nbitg
      enddo
      do i = 1, Chem_ntr
         Chem_useit(i) = 0
         Chem_xnbits(i) = Out_nbitg
      enddo
*
*     Compute vector lengths of variables listed for filtering 
*     and compaction
*
      pnfiltv = 0
      pnbitv = 0
      pnbits = 0

      do i = 1,MAXELEM
         if(Out_filt_S(i) .eq. ' ') goto 30
         pnfiltv = pnfiltv + 1
      enddo
 30   continue

      do i = 1,MAXELEM
         if(Out_xnbits_S(i) .eq. ' ') goto 60
         pnbitv = pnbitv + 1
      enddo
 60   continue
      do i = 1, MAXELEM
         if(Out_xnbits(i) .eq. 0) goto 70
         pnbits = pnbits + 1
      enddo
 70   continue
*
*     Check that compaction vector lengths are consistent
*
      if(pnbitv .ne. pnbits) then
         if (Lun_out.gt.0) write(Lun_out,2700) pnbitv,pnbits
         pnerror = pnerror + 1
      endif
*
*     Transfer exceptional compactions to global common
*
      do 110 i = 1,pnbitv
         if(Out_xnbits(i) .le. 0) then
            if (Lun_out.gt.0) write(Lun_out,2600) Out_xnbits(i)
            Out_xnbits(i) = Out_nbitg
            pnerror = pnerror + 1
         endif
         pnindx = getvndx(Out_xnbits_S(i))
         if(pnindx .gt. 0) then
            Setsor_xnbits(pnindx) = Out_xnbits(i)
         else
             pnindx = p_getphydx(Out_xnbits_S(i))
             if(pnindx .gt. 0) then
                Phy_xnbits(pnindx) = Out_xnbits(i)
             else
                pnindx = chem_getdx(Out_xnbits_S(i))
                if(pnindx .gt. 0) then
                   Chem_xnbits(pnindx) = Out_xnbits(i)
                else
                   if (Lun_out.gt.0) write(Lun_out,2500) Out_xnbits_S(i)
                   pnerror = pnerror + 1
                endif
             endif
         endif
 110  continue
*
      do 150 i = 1,pnfiltv
         pnindx = getvndx(Out_filt_S(i))
         if(pnindx .gt. 0) then
            if(Setsor_filtpass(pnindx) . ne. 0) then
               if (Lun_out.gt.0) write(Lun_out,2102) Out_filt_S(i)
               pnerror = pnerror + 1
            endif
            if(Out_filtpass(i) .le. 0) then
               if (Lun_out.gt.0) write(Lun_out,2601) Out_filtpass(i)
               Out_filtpass(i) = 1
               pnerror = pnerror + 1
            endif
            Setsor_filtpass(pnindx) = Out_filtpass(i)
            Setsor_filtcoef(pnindx) = Out_filtcoef(i)
         endif
 150  continue
*
      sglobo = pnerror
*
*     ---------------------------------------------------------------
*
 2100 format(
     $     ' SGLOBO - WARNING: MULTIPLY DEFINED VARIABLE: ',
     $     A8,' IN DIRECTIVE Out_xnbits_S for Dynamic Variables')
 2101 format(
     $     ' SGLOBO - WARNING: MULTIPLY DEFINED VARIABLE: ',
     $     A8,' IN DIRECTIVE Out_xnbits_S for Physics Variables')
 2102 format(
     $     ' SGLOBO - WARNING: MULTIPLY DEFINED VARIABLE: ',
     $     A8,' IN DIRECTIVE Out_filt_S for Dynamic Variables')
 2500 format(' SGLOBO - WARNING: Unknown variable in Out_xnbits_S: ',A8)
 2600 format(
     $     ' SGLOBO - WARNING: Negative value in Out_xnbits = ',
     $     I6,', WILL SET TO Out_nbitg by default')
 2601 format(' SGLOBO - WARNING: Negative value in Out_filtpass = ',
     $     I6,', WILL SET TO 1 by default')
 2700 format(' SGLOBO - WARNING: Lengths of vectors for ',
     $     'Out_xnbits_S and Out_xnbits are not the SAME:',
     $     /,' Number counted: Out_xnbits_S = ',I5,' Out_xnbits = ',I5)
      return
      end
