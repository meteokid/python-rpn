!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r get_topo - Obtain topography from geophysical file

#include "model_macros_f.h"
!
      subroutine get_topo ( F_topo, ni, nj )
      implicit none
!
      integer ni,nj
      real F_topo (ni,nj)
!
!author   
!     M. Desgagne  -   Spring 2010
!
!revision
! v4_13 -  Desgagne M.           - initial version
!
#include "glb_ld.cdk"
#include "ptopo.cdk"
#include "path.cdk"
#include "dcst.cdk"
#include "schm.cdk"
!
      character*8 inttyp
      integer status
      real   xfi(G_ni), yfi(G_nj), topo_destination(G_ni,G_nj)
      real*8 rad2deg_8 

!-----------------------------------------------------------------------
!
      status = 0

      if (.not.Schm_topo_L) then
         F_topo   = 0.0
         return
      endif

      If (Ptopo_myproc==0) Then

         inttyp      = 'LINEAR'
         rad2deg_8   = 180.0d0/Acos(-1.d0)
         xfi(1:G_ni) = G_xg_8(1:G_ni)*rad2deg_8
         yfi(1:G_nj) = G_yg_8(1:G_nj)*rad2deg_8

         call get_field ( topo_destination, G_ni, G_nj, 'ME', &
                          trim(Path_input_S)//'/GEOPHY'     , &
                          inttyp, xfi, yfi, status)

      endif

      call handle_error (status,'GET_TOPO','Topography NOT specified')

      call glbdist (topo_destination,G_ni,G_nj,F_topo,1,l_ni,1,l_nj,1,0,0)

      F_topo = F_topo * Dcst_grav_8
!
!-----------------------------------------------------------------------
!
      return
      end
!

