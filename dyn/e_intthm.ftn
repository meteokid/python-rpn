***s/r e_intthm  - Interpolate GZ,VT,HU on model grid.
*
#include <model_macros_f.h>
*
      subroutine e_intthm 
      implicit none
*
*AUTHOR  M. ROCH - july 95 - from intscal
*
*revision
* v2_31 - M. Desgagne
* v3_00 - Desgagne & Lee    - Lam configuration
* v3_02 - Lee V.            - added one more argument to e_bmfrd
* v3_02 -                   - correction to search for GZ at 1.0 eta/sg
*
*object
*    Computes  the ln of surface and top pressure given the topo 
*    (topography calculated on the model grid, phi,U or V), then
*    project the geopotential, virtual temperature,
*    specific humidity onto that grid
*
*arguments
*______________________________________________________________________
*                    |                                                 |
* NAME               | DESCRIPTION                                     |
*--------------------|-------------------------------------------------|
* Input only         |                                                 |
* lat                | vector of latitudes                             |
* lon                | vector of longitudes                            |
*----------------------------------------------------------------------
*
*IMPLICITES
#include "e_fu.cdk"
#include "e_grids.cdk"
#include "e_anal.cdk"
#include "e_option.cdk"
#include "dcst.cdk"
#include "e_tr.cdk"
#include "hgc.cdk"
*
      integer  e_rdhint3,e_bmfrd
      external e_rdhint3,e_bmfrd
*
      character*4 vtt,vhh
      logical anyip_L,arret_L
      integer i, k, ng, err
      real c1, c2, hu(nifi*njfi), tt(nifi*njfi)
*
*---------------------------------------------------------------------
*
      c1 = Dcst_tcdk_8
      c2 = 10. * Dcst_grav_8
      vtt=vt//'  '
      vhh=vh//'  '
      ng = nifi*njfi
*
      write(6,1001)
*
*     For searching the GZ,HU,TT,VT records, correct IP1 targets must be found
      anyip_L = .false.
      arret_L = .true.
      if ( gletaanl .or. glsiganl .or. glhybanl ) then
         write(6,*)
     $      'ANALYSIS IS IN SIGMA OR ETA OR HYBRID COORDINATES'
*
         do k=1,lv
            if (e_rdhint3 (hu,dstf_gid,nifi,njfi,'HU  ',na(k),ip2a,
     $          ip3a,' ',tva,.true.,.false.,'CUBIC',e_fu_anal,6).lt.0) 
     $          goto 55  
            anal_hav(1) = e_rdhint3 (tt,dstf_gid,nifi,njfi,vtt,na(k),
     $             ip2a,ip3a,' ',tva,.true.,.false.,'CUBIC',e_fu_anal,6)
            if (anal_hav(1).lt.0) goto 55 
            do i=1,ng
               tt(i) = tt(i) + c1
            enddo
            if (vt.eq.'TT') call mfotvt (tt,tt,hu,ng,1,ng)
            call e_bmfsplitxy2 (hu,nifi,njfi,'HU  ',k,lv,pni,0,0,0)
            call e_bmfsplitxy2 (tt,nifi,njfi,'VT  ',k,lv,pni,0,0,0)
         end do
*
         err = e_bmfrd (dstf_gid, nifi, njfi, 'P0  ', 0., 100., -1, 
     $                                                 1, anyip_L,arret_L)
         if (anal_hav(1).eq.0) then
            err = e_bmfrd (dstf_gid, nifi, njfi, 'GZ  ', 0., c2,na,
     $                                                 lv, anyip_L,arret_L )
         else
            err = e_bmfrd (dstf_gid, nifi, njfi, 'GZ  ', 0., c2,na(lv), 
     $                                                 1, anyip_L,arret_L )
         endif
*     
      else
*
         write(6,*)'ANALYSIS IS IN PRESSURE COORDINATES' 
         anal_hav(1) = e_bmfrd ( dstf_gid, nifi, njfi, 'GZ  ', 0., 10.,
     $                                                  na,lv, anyip_L,arret_L )
         if (vh.eq.'HU') then
            err = e_bmfrd ( dstf_gid, nifi, njfi, vhh   , 0., 1. ,
     $                                             na,lv, anyip_L,arret_L )
         else
            do k=1,lv
               if (e_rdhint3 (hu,dstf_gid,nifi,njfi,vhh,na(k),ip2a,
     $            ip3a,' ',tva,.true.,.false.,'CUBIC',e_fu_anal,6).lt.0)
     $              goto 55               
               if (e_rdhint3 (tt,dstf_gid,nifi,njfi,vtt,na(k),ip2a,
     $            ip3a,' ',tva,.true.,.false.,'CUBIC',e_fu_anal,6).lt.0)
     $              goto 55
               do i=1,ng
                  tt(i) = tt(i) + c1
               enddo
               rna(k)=rna(k)*100.
               do i=1,nifi*njfi
                  hu(i) = max(0., hu(i))
               enddo
               call mesahu (hu, hu, tt, rna(k), 1, 0,
     $                      vt.eq.'TT' , .false., ng, 1, ng)
               call e_bmfsplitxy2 (hu,nifi,njfi,'HU  ',k,lv,pni,0,0,0)
            end do
         endif
*
      endif
*
*     For tracer variables, search does not have to be successful
      anyip_L = .true.
      arret_L = .false.
      do i=1,E_tr3d_ntr
         print*, E_tr3d_name_S(i),i
         err = e_bmfrd ( dstf_gid, nifi, njfi, E_tr3d_name_S(i), 
     $                                 0., 1., na, lv, anyip_L,arret_L )
      end do
      do i=1,E_trvs_ntr
         print*, E_trvs_name_S(i),i
         err = e_bmfrd ( dstf_gid, nifi, njfi, E_trvs_name_S(i), 
     $                                 0., 1., na, lv, anyip_L,arret_L )
      end do
*     
 1001 format(/,'COMPUTE TT, HU and GZ (S/R E_INTTHM)',/,25('+'))
*
      return
 55   call e_arret( 'e_intthm' )
*------------------------------------------------------------------
*
      end
