***s/r e_intthm  - Interpolate GZ,VT,HU on model grid.
*
#include <model_macros_f.h>
*
      subroutine e_intthm ( lat, lon, nix, njx )
      implicit none
*
      integer nix, njx
      real    lat(*), lon(*)
*
*AUTHOR  M. ROCH - july 95 - from intscal
*
*revision
* v2_31 - M. Desgagne
* v3_00 - Desgagne & Lee    - Lam configuration
*
*object
*    Computes  the ln of surface and top pressure given the topo 
*    (topography calculated on the model grid, phi,U or V), then
*    project the geopotential, virtual temperature,
*    specific humidity onto that grid
*
*arguments
*______________________________________________________________________
*                    |                                                 |
* NAME               | DESCRIPTION                                     |
*--------------------|-------------------------------------------------|
* Input only         |                                                 |
* lat                | vector of latitudes                             |
* lon                | vector of longitudes                            |
*----------------------------------------------------------------------
*
*IMPLICITES
#include "e_locdim.cdk"
#include "e_maxprms.cdk"
#include "e_times.cdk"
#include "e_files.cdk"
#include "e_grids.cdk"
#include "e_anal.cdk"
#include "e_option.cdk"
#include "pres.cdk"
#include "dcst.cdk"
#include "e_tr.cdk"
*
      character*4 vtt,vhh
      integer i, k
      real c1,c2,hu_temp(nix*njx,lv),tt_temp(nix*njx,lv)
*
*---------------------------------------------------------------------
*
      c1 = Dcst_tcdk_8
      c2 = 10. * Dcst_grav_8
      vtt=vt//'  '
      vhh=vh//'  '
*
      write(stdout,1001)
*
      if ( gletaanl .or. glsiganl .or. glhybanl ) then
           write(stdout,*)
     $      'ANALYSIS IS IN SIGMA OR ETA OR HYBRID COORDINATES'
            call e_bmfrd (lat, lon, nix, njx, 'P0  ', 0., 100., -1, 
     $                                                  1, .true. )
            if (.not. glhorint) then
                call e_bmfrd (lat,lon, nix, njx, 'GZ  ', 0., c2, na,
     $                                                  lv, .true. )
            else
                call e_bmfrd (lat,lon, nix, njx, 'GZ  ', 0., c2, 12000, 
     $                                                     1, .true. )
            endif
            vhh='HU  '
            call e_lianalx4 (hu_temp,lat, lon, nix, njx, vhh, 0., 1.,
     $                                        na,lv, .true., .true. )
            do k=1,lv
            call e_bmfsplitxy2 (hu_temp(1,k),nix,njx,'HU  ',k,lv,pni,
     $                                                         0,0,0)
            enddo
            if (vt.eq.'VT') then
                call e_bmfrd ( lat, lon, nix, njx, vtt, c1,1.,
     $                                         na,lv, .true. )
            else
                call e_lianalx4 ( tt_temp,lat, lon, nix, njx, vtt, c1, 
     $                                    1. ,na,lv, .true., .true. )
                call mfotvt (tt_temp,tt_temp,hu_temp,nix*njx,lv,nix*njx)
                do k=1,lv
                   call e_bmfsplitxy2 (tt_temp(1,k),nix,njx,'VT  ',k,
     $                                                  lv,pni,0,0,0)
                enddo
            endif
      else
            write(stdout,*)'ANALYSIS IS IN PRESSURE COORDINATES' 
            call e_bmfrd ( lat, lon, nix, njx, 'GZ  ', 0., 10.,
     $                                          na,lv, .true. )
            if (vh.eq.'HU') then
                call e_bmfrd ( lat, lon, nix, njx, vhh   , 0., 1. ,
     $                                              na,lv, .true. )
            else
                call e_lianalx4 ( tt_temp,lat, lon, nix, njx, vtt, c1, 
     $                                   1. , na, lv, .true., .true. )
                call e_lianalx4 ( hu_temp,lat, lon, nix, njx, vhh, 0., 
     $                                   1. , na, lv, .true., .true. )
                do k=1,lv
                   rna(k)=rna(k)*100.
                   do i=1,nix*njx
                      hu_temp(i,k) = max(0., hu_temp(i,k))
                   enddo
                enddo
                call mesahu (hu_temp, hu_temp, tt_temp, rna, 1, 0,
     $                      vt.eq.'TT' , .false., nix*njx, lv, nix*njx)
                do k=1,lv
                   call e_bmfsplitxy2 (hu_temp(1,k),nix,njx,'HU  ',k,
     $                                                 lv,pni,0,0,0)
                enddo
            endif
         endif
         do i=1,E_tr3d_ntr
            print*, E_tr3d_name_S(i),i
            call e_bmfrd ( lat, lon, nix, njx, E_tr3d_name_S(i), 
     $                                 0., 1., na, lv, .false. )
         end do
         do i=1,E_trvs_ntr
            print*, E_trvs_name_S(i),i
            call e_bmfrd ( lat, lon, nix, njx, E_trvs_name_S(i), 
     $                                 0., 1., na, lv, .false. )
         end do
*
 1001 format(/,'COMPUTE TT, HU and GZ (S/R E_INTTHM)',/,25('+'))
*
*------------------------------------------------------------------
*
      return
      end
