!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r wil_calp
!
#include "model_macros_f.h"
!
      SUBROUTINE WIL_CALP(CMN,DMN,EMN,EPSIL,LROW,LDIAG,ALP,DALP)
!
      implicit none
!
!implicits
#include "wil_glb_ld.cdk"
!
      REAL CMN(G_LRM), DMN(G_LRM), EMN(G_LRM), EPSIL(G_NALP)
      INTEGER LROW(0:G_KK,2), LDIAG(0:G_NN,2)
!
      REAL ALP (G_NALP,G_NLATB2), DALP(G_NALP,G_NLATB2)
!
!author Jacob et al. 1992 
!
!revision
! v4_04 - Jacob et al.     - initial version CALP 
! v4_04 - Tanguay M.       - Williamson's cases
!
!object
!     CALCULATES THE ASSOCIATED LEGENDRE POLYNOMIALS USING A HIGHLY
!     STABLE FOUR TERM RECURRENCE RELATION GIVEN BY BELOUSOV (1962).
!     THE SPECTRAL TRUNCATION PARAMETERS ARE DEFINED BY 3 PARAMETERS:
!     MM, THE LARGEST FOURIER WAVENUMBER; KK, THE HIGHEST DEGREE OF THE
!     ASSOCIATED LEGENDRE POLYNOMIALS, AND NN THE HIGHEST DEGREE OF THE
!     ASSOCIATED LEGENDRE POLYNOMIALS FOR M=0.  THE LENGTH OF THE
!     ASSOCIATED LEGENDRE POLYNOMIAL ARRAY ALP IS GIVEN BY THE RELATION
!     LEN = ((MM+1)*(NN+1) - (LMN**2 + LMN)/2)  WHERE LMN = MM + NN - KK
!     VARIABLES ARE STORED ALONG DIAGONALS STARTING WITH DIAGONAL M=N.
!     THE LENGTH OF EACH ROW IS STORED IN THE ARRAY LROW(0:KK,2).
!     THE LENGTH OF EACH DIAGONAL IS STORED IN THE ARRAY LDIAG(0:NN,1)
!     AND IS EVALUATED IN SUBROUTINE CEPS AS (MM+1)-AMAX(MM+N-KK,0)
!     WHERE 0>N>NN.  CUMULATIVE DIAGONAL LENGTHS (CUMULATIVE
!     DISPLACEMENTS) ARE ALSO STORED IN LDIAG(0:NN,2) SO THAT THE
!     ASSOCIATED LEGENDRE POLYNOMIAL OF ORDER M, DEGREE N, AND ARGUMENT
!     SNJ(NL) IS ADDRESSED AS ALP(1 + LDIAG(N-M,2)+M),NL), OR USING THE
!     STATEMENT FUNCTION IDSP AS ALP(IDSP(M,N),NL).  THE SAME FORM
!     APPLIES FOR ADDRESSING THE DERIVATIVES (DALP) AND RECURRENCE
!     COEFFICIENTS DEFINED IN THE EPSIL MATRIX.
!
!implicits
#include "wil_dcst.cdk"
!------------------------------------------------------------------
!
      REAL CN2N1N(G_KK+1,3)
      REAL COL1(G_KK), COL2(G_KK), SNPSUM(G_KK), CSPSUM(G_KK), SQNP(G_KK),            &
           AN(G_KK), CSFAC(G_KK), SNFAC(G_KK), COSTBL(G_KK), SINTBL(G_KK)            
!
      REAL RNORM,COS2P,RLAT,SNJ,THTA
      INTEGER N,M,JK,JM,JN,MSTART,NSTART
      INTEGER MLIM,IS,ISM1,NL,LAT
!
      REAL WIL_GLAT
      EXTERNAL WIL_GLAT
!
!     ADDRESS COMPUTATION OF ALP, DALP, EPSIL            
!     E.G., EPSIL(M,N) = EPSIL(IDSP(M,N))                                       
!     ---------------------------------------
      INTEGER MDUM, NDUM, IDSP, IDSPR
      IDSP(MDUM,NDUM) = 1 + LDIAG(NDUM-MDUM,2)+MDUM                             
!                                                                               
!     ADDRESS COMPUTATION OF BELOUSOV RECURRENCE         
!     COEFFICIENT MATRICES.  E.G., CMN(M,N) = CMN(IDSPR(M,N))                   
!     -------------------------------------------------------
      IDSPR(MDUM,NDUM) = 1 + LROW(NDUM,2)+MDUM                                  
!
!------------------------------------------------------------------
!     COMPUTE ASSOCIATED LEGENDRE POLYNOMIALS AND THEIR DERIVATIVES FOR         
!     THE TRUNCATED WAVENUMBER SPACE DEFINED IN LDIAG(0:NN,1:2) WITH            
!     ARGUMENTS GIVEN BY GRID FUNCTION GLAT USING BELOUSOV'S ALGORITHM.         
!     THE PROCEDURE INVOLVES EXTRA WORK FOR ANY TRUNCATION OTHER THAN           
!     TRIANGULAR BECAUSE BELOUSOV'S RECURRENCE REQUIRES POLYNOMIAL              
!     INFORMATION IN PART OF THE REGION BETWEEN KK AND NN.  MORE                
!     ELABORATE BOOKKEEPING COULD REDUCE THIS EXTRA COMPUTATION, BUT BY         
!     LESS THAN A FACTOR OF TWO (PROBABLY LESS THAN 10% OF TOTAL WORK).         
!------------------------------------------------------------------
!
!     PRECOMPUTE SOME FACTORS
!     -----------------------
      AN(1) = SQRT(0.75)
      DO 190 N=2,G_KK
         AN(N) = AN(N-1)*SQRT(1.0-(1.0/REAL(4*N*N)))
  190 CONTINUE
!                                                                               
!     BEGIN PROCEDURE ... OUTER LOOP OVER LATITUDE (ARGUMENT)                   
!     -------------------------------------------------------
!                                                                               
      DO 290 NL=1,G_NLATB2                                                        
!                                                                               
!     DETERMINE PROPER INDEX FOR LATITUDE DEPENDENT QUANTITIES                  
!     (PROVISION FOR DOING THIS COMPUTATION ON THE FLY, NOT IN USE)             
!     -------------------------------------------------------------     
         LAT = NL                                                               
         RLAT = WIL_GLAT(LAT)
!
!        LATITUDE = RLAT
!                                                                               
!        BEGIN BY COMPUTING 1ST TWO ELEMENTS IN EACH ROW (M=0:1;N=0:KK)         
!        EVALUATE THE SERIES EXPANSIONS (19) AND (21) IN BELOUSOV (1962)        
!        FINAL RESULTS ARE STORED IN WORK ARRAYS COL1 AND COL2                  
!        --------------------------------------------------------------
!        COS2P = SQRT(CSJ(LAT))                                                 
         COS2P = COS(RLAT)
         SNJ   = SIN(RLAT)
         THTA  = Wil_Dcst_pi_8/2.0 - RLAT
         CN2N1N(1,1)  = SQRT(0.50)                                              
         ALP(1,NL)  = CN2N1N(1,1)                                               
         DALP(1,NL) = 0.0                                                       
!                                                                               
!        INITIALIZE WORKING SPACE                                               
!        ------------------------
         DO 205 N=1,G_KK                                                          
            SNPSUM(N) = 0.0                                                     
            CSPSUM(N) = 0.0                                                     
            SQNP(N)   = 1.0/SQRT(REAL(N*N + N))                                
            CSFAC(N)  = 1.0                                                     
            SNFAC(N)  = REAL(N)*SQNP(N)                                        
            COSTBL(N) = COS(REAL(N)*THTA)                                 
            SINTBL(N) = SIN(REAL(N)*THTA)                                 
  205    CONTINUE                                                               
!                                                                               
!        EACH INCREMENT IN JK EVALUATES AN ADDITIONAL TERM IN EXPANSIONS        
!        ---------------------------------------------------------------
         JK=1                                                                   
         DO 215 N=1,G_KK                                                          
            CSPSUM(N) = CSPSUM(N)+COSTBL(N-JK+1)*CSFAC(N)                       
            SNPSUM(N) = SNPSUM(N)+SINTBL(N-JK+1)*SNFAC(N)                       
  215    CONTINUE                                                               
!                                                                               
         DO 225 JK=3,G_KK+1,2                                                     
!                                                                               
            NSTART = MAX0(JK-1,1)                                               
            N = NSTART                                                          
            CSFAC(N)  = REAL(JK-2)/REAL(JK-1)*REAL(2*N-JK+3)                  &
                        /REAL(2*N-JK+2)*CSFAC(N)                               
            CSPSUM(N) = CSPSUM(N) + CSFAC(N)*0.50                               
!                                                                               
            DO 220 N=NSTART+1,G_KK                                                
               CSFAC(N)  = REAL(JK-2)/REAL(JK-1)*REAL(2*N-JK+3)               &
                           /REAL(2*N-JK+2)*CSFAC(N)                            
               SNFAC(N)  = CSFAC(N)*REAL(N-JK+1)*SQNP(N)                       
               CSPSUM(N) = CSPSUM(N)+COSTBL(N-JK+1)*CSFAC(N)                    
               SNPSUM(N) = SNPSUM(N)+SINTBL(N-JK+1)*SNFAC(N)                    
  220       CONTINUE                                                            
  225    CONTINUE                                                               
!                                                                               
         RNORM = 1.0/ALP(1,NL)                                                  
         DO 230 N=1,G_KK                                                          
            COL1(N) = AN(N)*CSPSUM(N)*RNORM                                     
            COL2(N) = AN(N)*SNPSUM(N)*RNORM                                     
  230    CONTINUE                                                               
!                                                                               
         DO 260 N=1,G_KK                                                          
!                                                                               
!        EVALUATE REMAINING POLYNOMIALS BY SWEEPING THROUGH ROWS N=1:KK         
!        FIRST TWO ELEMENTS OBTAINED FROM THE ABOVE SERIES EXPANSIONS           
!        --------------------------------------------------------------
            CN2N1N(1,3) = COL1(N)                                               
            CN2N1N(2,3) = COL2(N)                                               
!                                                                               
!           NECESSARY DETOUR TO "PRIME THE PIPELINE" (FIRST PASS)               
!           -----------------------------------------------------
            IF (N .EQ. 1) THEN                                                     
               CN2N1N(1,2)   = CN2N1N(1,3)                                      
               CN2N1N(2,2)   = CN2N1N(2,3)                                      
               ALP(G_MM+2,NL)  = CN2N1N(1,2)                                      
               DALP(G_MM+2,NL) = SQRT(3.0)*CN2N1N(1,1)                             &
                                 - SNJ*CN2N1N(1,2)                         
               ALP(2,NL)     = CN2N1N(2,2)                                      
               DALP(2,NL)    = -SNJ*CN2N1N(2,2)                            
            ELSE                                                               
!                                                                               
!           EVALUATE THE REMAINDER OF THIS ROW (M = 2, 3, 4, ...)               
!           USING BELOUSOV'S RECURRENCE RELATION                                
!           -----------------------------------------------------
            MLIM = MIN0(G_MM,N-1)                                                 
            DO 235 M=2,MLIM                                                     
               JM = M+1                                                         
               CN2N1N(JM,3) = CMN(IDSPR(M,N))*CN2N1N(JM-2,1)                     &
                              -SNJ*(DMN(IDSPR(M,N))                         &
                              *CN2N1N(JM-2,2) - EMN(IDSPR(M,N))                  &
                              *CN2N1N(JM,2))                                    
  235       CONTINUE                                                            
!                                                                               
!           PUT VALUES OF THE POLYNOMIALS CONTAINED IN CN2N1N(0:MLIM,3)         
!           INTO THE ASSOCIATED LEGENDRE POLYNOMIAL ARRAY ALP                   
!           -----------------------------------------------------------
            MSTART = MAX0(N-G_NN,0)                                               
            DO 240 M=MSTART,MLIM                                                
               JM = M+1                                                         
               ALP(IDSP(M,N),NL) = CN2N1N(JM,3)                                 
  240       CONTINUE                                                            
!                                                                               
!           SPECIAL EVALUATION REQUIRED FOR DIAGONAL ELEMENT M=N                
!           ----------------------------------------------------
            IF (N .LE. G_MM) THEN
               CN2N1N(N+1,3)      = SQRT(1.0 + (1.0/REAL(2*N)))*COS2P           &
                                      *CN2N1N(N,2)                              
               ALP(IDSP(N,N),NL)  = CN2N1N(N+1,3)                               
               DALP(IDSP(N,N),NL) = -REAL(N)*SNJ*CN2N1N(N+1,3)            
            ENDIF
!                                                                               
!           MAKE ROOM FOR NEW POLYNOMIAL EVALUATION IN CN2N1N(0:MLIM,3)         
!           -----------------------------------------------------------
            DO 250 JM=1,N+1                                                     
               CN2N1N(JM,1) = CN2N1N(JM,2)                                      
               CN2N1N(JM,2) = CN2N1N(JM,3)                                      
  250       CONTINUE                                                            
!
            ENDIF
!                                                                               
  260    CONTINUE                                                               
!                                                                               
!        EFFICIENTLY EVALUATE DERIVATIVES SEPARATELY (ALONG DIAGONALS)          
!        -------------------------------------------------------------
         DO 280 JN = 1,G_NN                                                       
            IS   = LDIAG(JN,2)                                                  
            ISM1 = LDIAG(JN-1,2)                                                
            DO 270 M=0,LDIAG(JN,1)-1                                            
               JM = M+1                                                         
               N  = JN+M                                                        
               DALP(IS+JM,NL) = REAL(2*N+1)*EPSIL(IS+JM)* &
                           ALP(ISM1+JM,NL)-REAL(N)*SNJ*ALP(IS+JM,NL)
  270       CONTINUE                                                            
  280    CONTINUE                                                               
!                                                                               
  290 CONTINUE                                                                  
!                                                                               
      RETURN                                                                    
      END                                                                       
