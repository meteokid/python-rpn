***s/r p_factor - calculate interpolation factors for
*                 special temperature level at top & bottom
*
#include "model_macros_f.h"
*
      subroutine p_factor(f_a, f_b, f_c, f_csh, f_qsec, DIST_DIM,Nk)
*
      implicit none
      integer DIST_DIM, Nk
      real f_a(DIST_SHAPE,2), f_b(DIST_SHAPE,2), f_c(2)
      real f_csh(DIST_SHAPE), f_qsec(DIST_SHAPE,0:Nk+1)
*
*
*author
*     Sylvie Gravel rpn - october 2006
*
*revision
* v3_?  - Gravel S.         - original version
*
*object
*     f_a(:,1) * T(3/4)   = f_b(:,1)*T(1/2)   + f_c(1)
*     f_a(:,2) * T(N+1/4) = f_b(:,2)*T(N+1/2) + f_c(2)
* 
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
*----------------------------------------------------------------
*
*implicits
#include "glb_ld.cdk"
#include "schm.cdk"
#include "type.cdk"
#include "ver.cdk"
#include "cstv.cdk"
* 
**
      integer i, j
      real aaa,bbb,ccc,ddd,c0
      real half,quarter,one
      parameter( one=1.0, half=0.5, quarter=0.25 )
*
*     ________________________________________________________________
*

*
      aaa = dlog(Ver_z_8%m(1)/Ver_z_8%t(1))
      bbb = dlog(Ver_z_8%t(G_nk+1)/Ver_z_8%m(G_nk))
      ccc = half*Ver_hz_8%t(1)/Ver_z_8%t(1)
      ddd = half*Ver_hz_8%t(G_nk+1)/Ver_z_8%t(G_nk+1)
c      f_c(1) = (aaa - ccc)*Cstv_tstr_8
      f_c(1)=0.
c      f_c(2) = (bbb - ddd)*Cstv_tstr_8
      f_c(2)=0.

!$omp do
*
      do j=1,l_nj
         do i= 1, l_ni 
            c0 = one + Ver_boz_8%t(1)*f_csh(i,j)
c            f_a(i,j,1) = aaa + dlog(one+Ver_boz_8%m(1)*f_csh(i,j))
c     %                       -alog(c0)
            f_a(i,j,1) = 1.0
c            f_b(i,j,1) = ccc * (one+Ver_dpib_8%t(1)*f_csh(i,j))/c0
            f_b(i,j,1) = 1.0
            c0 = one + Ver_boz_8%t(G_nk+1)*f_csh(i,j)
c            f_a(i,j,2) = bbb + alog (c0) 
c     %                       - dlog(one+Ver_boz_8%m(G_nk)*f_csh(i,j))
            f_a(i,j,2) = 1.
c            f_b(i,j,2) = ddd * (one+Ver_dpib_8%t(G_nk+1)*f_csh(i,j))/c0
            f_b(i,j,2) = 1.

c            if (.not. Schm_hydro_L) then
c                c0 = -(f_qsec(i,j,0)+3.*f_qsec(i,j,1))*quarter
c                f_a(i,j,1) = f_a(i,j,1)*exp(c0)
c                c0 = -half*(f_qsec(i,j,0)+f_qsec(i,j,1))
c                f_b(i,j,1) = f_b(i,j,1)*exp(c0)
c                c0 = -(f_qsec(i,j,G_nk+1)+3.*f_qsec(i,j,G_nk))*quarter
c                f_a(i,j,2) = f_a(i,j,2)*exp(c0)
c                c0 = -half*(f_qsec(i,j,G_nk+1)+f_qsec(i,j,G_nk))
c                f_b(i,j,2) = f_b(i,j,2)*exp(c0)
c            endif
         end do
      end do
!$omp enddo
*
      return
      end

