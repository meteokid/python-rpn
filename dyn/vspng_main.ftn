!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r vspng_main - applies horizontal diffusion with vertical modulation
*                   on Vspng_nk top levels
*
#include "model_macros_f.h"
*
      subroutine vspng_main
*
#include "impnone.cdk"
*
*author
*     Michel Desgagne  - October 2000
*
*revision
* v2_11 - Desgagne M.       - initial version 
* v2_21 - Desgagne M.       - new call to horwavg
* v2_30 - Edouard  S.       - adapt for vertical hybrid coordinate
* v3_02 - Lee V.            - adapt for LAM 
* v3_10 - Corbeil & Desgagne & Lee - AIXport+Opti+OpenMP
* v4    - Gravel-Girard-PLante - staggered version
* v4_04 - Girard-PLante     - diffuse only winds, zdot and first Temp. level.
*                           - Move hspng_main/hspng_drv from hdif_phy 
*                           - Always diffuse real winds if not LAM.
* v4_05 - PLante A.         - Diffuse w.
*
*object
* applies horizontal diffusion with vertical modulation of 
* the diffusion coefficient on Vspng_nk top levels 
*  (1) del-2 horizontal diffusion used for non-LAM
*  (2) 9 point explicit filter used for LAM
*	
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "schm.cdk"
#include "vspng.cdk"
#include "hspng.cdk"
#include "vt1.cdk"
*
*modules
      integer  vmmlod,vmmuld,vmmget
      external vmmlod,vmmuld,vmmget
*
      integer pnerr, pnlod, pnlkey1(5)
**
*     _________________________________________________________________

      if(Hspng_nj.lt.1.and.Vspng_nk.lt.1)then
         return
      endif
      pnlkey1(1) = VMM_KEY(ut1)
      pnlkey1(2) = VMM_KEY(vt1)
      pnlkey1(3) = VMM_KEY(zdt1)
      pnlkey1(4) = VMM_KEY(tt1)
      pnlkey1(5) = VMM_KEY(wt1)
      pnlod = 5
*     - - - - - - - - - - - - - - -
      pnerr = vmmlod(pnlkey1,pnlod)
*     - - - - - - - - - - - - - - -
      pnerr = VMM_GET_VAR(ut1)
      pnerr = VMM_GET_VAR(vt1)
      pnerr = VMM_GET_VAR(zdt1)
      pnerr = VMM_GET_VAR(tt1)
      pnerr = VMM_GET_VAR(wt1)
*
      call iw2rwnd ( ut1, vt1, LDIST_DIM, G_nk, 1 )
      if (G_lam) then
         call vspng_drv_lam (ut1,vt1,zdt1,wt1,tt1,LDIST_DIM,G_nk )
      else
         call vspng_drv (ut1,vt1,zdt1,wt1,tt1,LDIST_DIM,G_nk)
         call hspng_drv (ut1,vt1,zdt1,wt1,LDIST_DIM,G_nk)
      endif
      call iw2rwnd ( ut1, vt1, LDIST_DIM, G_nk, 2 )
*
      pnerr = vmmuld(-1,0)
*    
      return
      end
