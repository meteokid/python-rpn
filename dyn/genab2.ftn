***s/r e_genab2  - Using Laprise & Girard, generates de A and B of the
*                  hybrid coordinate and the analytical derivative of 
*                  d(psurf*B)/d(A + psurf*B)
*
#include "model_macros_f.h"
*
      subroutine genab2 ( F_ptop, F_coef, F_psurf_8, fnk )
      implicit none
*
      integer fnk    
      real  F_ptop, F_coef
      real*8  F_psurf_8
*
*author 
*      S. Gravel  - rpn - feb 2003
*
*revision
* v3_03 - Gravel S.        - initial MPI version 
*
*object
*    Using Laprise & Girard, generates de A and B of the hybrid coordinate
*    see: Laprise & Girard, 1990, J. of Climate, eq. 5.1
*    Based on subroutine genab, genab2 also includes the evaluation of the 
*    analytical derivative of psurf*B with respect to Z
*
**
#include "type.cdk"
#include "ver.cdk"

      integer k
      real pref, psurf, pr1, pr2
*     __________________________________________________________________
*
*     BEWARE
*     if F_coef is greater than 1., pref is subject to restriction for
*     stability reasons.
*
      pref = 100.*F_ptop/Ver_hybm%t(1)   ! convert to pascal
      psurf= 100.*F_psurf_8         ! convert to pascal
*
      pr1 = 1./(1. - Ver_hybm%t(1))
      do k = 1, fnk+1
        ver_pibb%t(k)  = ((Ver_hybm%t(k) - Ver_hybm%t(1))*pr1 ) ** F_coef
        Ver_pia%t(k)  = pref * ( Ver_hybm%t(k) - ver_pibb%t(k) )
      enddo
      do k = 1, fnk
        ver_pibb%m(k)  = ((Ver_hybm%m(k) - Ver_hybm%t(1))*pr1 ) ** F_coef
        Ver_pia%m(k)  = pref * ( Ver_hybm%m(k) - ver_pibb%m(k) )
      enddo
*
      if (F_coef .gt. 1.0) then
        do k = 1,fnk+1
          pr2 = F_coef*(Ver_hybm%t(k) - Ver_hybm%t(1))**(F_coef-1.)
          Ver_dpba(k) = psurf*pr2/ 
     $                (pref*(1. - Ver_hybm%t(1))**F_coef +
     $                         (psurf-pref)*pr2)
        enddo
      else 
        do k = 1,fnk+1
          Ver_dpba(k) = psurf/(psurf - pref*Ver_hybm%t(1))
        enddo
      endif
*     __________________________________________________________________
*
      return
      end

