***s/r mtn_cfg - reads parameters from namelist mtn_cfgs
*
#include "model_macros_f.h"
*
      integer function mtn_cfg (unf)
      implicit none
      integer unf
*
*author 
*     sylvie gravel   -  Apr 2003
*
*revision
* v3_20 - gravel s        - initial version 
* v3_30 - Lee V.          - New control parameters added
*
*object
*     See above id
*	
*arguments - none
*
#include "theonml.cdk"
*
      integer i, j, k, idatx, longueur
      real*8 delta_8, zmt_8(maxhlev)
      real*8 c1_8,Exner_8,Pres_ptop_8,height_8,pres_8,height_top_8
**
*     ---------------------------------------------------------------
      mtn_cfg = -1
      do k = 1, maxhlev
         hyb(k) = -1.
      end do

      Grd_rot_8 = 0.0
      Grd_rot_8(1,1) = 1.
      Grd_rot_8(2,2) = 1.
      Grd_rot_8(3,3) = 1.
      Grd_roule=.false.
*
      G_lam=.true.
      Grd_xlat1=0.
      Grd_xlon1=180.
      Grd_xlat2=0.
      Grd_xlon2=270.
*
      Offc_b0_8 =  0.5
      Offc_b1_8 =  0.5
*      	  
      Grd_rcoef = 1.0
*
      Tr3d_userntr=0

      Lam_nesdt=0
      Lam_ctebcs_L=.true.
      
      Hzd_lnr = 0.

      Schm_phyms_L = .false.
      Schm_hydro_L=.false.
      Adw_halox  = 3
      Adw_haloy  = 2

      G_halox=3
 
      Zblen_L = .true.
      Zblen_spngtt_L=.true.

      Adw_interp_type_S = 'LAG3D'

      if ( Theo_case_S.eq.'MTN_SCHAR') then

         Out3_etik_s='SCHAR'

         Height_top_8 = 19500.d0

         mtn_tzero=288.
         mtn_nstar= 0.01
         mtn_flo  = 10.
         mtn_hwx  =10
         mtn_hwx1 = 8
         mtn_hght = 250.

         Grd_ni = 401
CAP         Grd_ni = 101
         Grd_nj = 1
         G_nk   = 65

         Grd_dx = 500.                                   !  in meters
         Grd_dx = (Grd_dx/Dcst_rayt_8)*(180./Dcst_pi_8)  ! in degrees

         Hblen_x=15
         Hblen_y=0

         Zblen_spngthick=9000.
         Zblen_hmin = Height_top_8 - Zblen_spngthick

         Step_total = 1600
         Step_gstat = 80

         Cstv_dt_8 = 8.
         Cstv_tstr_8 = 2.144760293471223e+02
         Cstv_pisrf_8 = 1000.

         Vtopo_start = -1
         Vtopo_ndt = 0

      else if ( Theo_case_S.eq.'MTN_SCHAR2') then

         Out3_etik_s='SCHAR2'
	  
         Height_top_8 = 19500.d0

         mtn_tzero=273.16
         mtn_nstar= 0.01871
         mtn_flo  = 18.71
         mtn_hwx  = 10
         mtn_hwx1 = 8
         mtn_hght = 250.

         Grd_ni = 401
         Grd_nj = 1
         G_nk   = 65

         Grd_dx = 500.                                   !  in meters
         Grd_dx = (Grd_dx/Dcst_rayt_8)*(180./Dcst_pi_8)  ! in degrees
	  
         Hblen_x =15
         Hblen_y =0 

c        Zblen_spngthick=1.00531e+04
         Zblen_spngthick=9000.
         Zblen_hmin = Height_top_8 - Zblen_spngthick
      
         Step_total = 2400
         Step_gstat = 100
         Cstv_dt_8 = 5.34         !   CFL=0.2
c        Cstv_dt_8 = 26.7         !   CFL=1.0
         Cstv_tstr_8 = mtn_tzero
         Cstv_pisrf_8 = 1000.

         Vtopo_start = -1
         Vtopo_ndt = 0

      else if ( Theo_case_S.eq.'MTN_PINTY') then

         Out3_etik_s='PINTY'

         Height_top_8 = 20000.d0
	  
         mtn_tzero=273.16
         mtn_nstar=-1
         mtn_flo  = 32.
         mtn_hwx  =5
         mtn_hght = 100.

         Grd_ni = 161
         Grd_nj = 1
         G_nk   = 80

         Grd_dx = 3200.                                  ! in meters
         Grd_dx = (Grd_dx/Dcst_rayt_8)*(180./Dcst_pi_8)  ! in degrees
	  
         Hblen_x = 15
         Hblen_y = 0

         Zblen_spngthick=10000.
         Zblen_hmin = Height_top_8 - Zblen_spngthick
      
         Step_total = 800
         Step_gstat = 100

         Cstv_dt_8 = 50.
         Cstv_tstr_8 = mtn_tzero
         Cstv_pisrf_8 = 1000.
         Vtopo_start = -1
         Vtopo_ndt = -1

      else if ( Theo_case_S.eq.'MTN_PINTY2') then

         Out3_etik_s='PINTY2'

         Height_top_8 = 20000.d0
	  
         mtn_tzero=273.16
         mtn_nstar=-1
         mtn_flo  = 8.
         mtn_hwx  =5
         mtn_hght = 100.

         Grd_ni = 161
         Grd_nj = 1
         G_nk   = 81

         Grd_dx = 3200.                                  ! in meters
         Grd_dx = (Grd_dx/Dcst_rayt_8)*(180./Dcst_pi_8)  ! in degrees
	  
         Hblen_x = 15
         Hblen_y = 0

         Zblen_spngthick=2500.
         Zblen_hmin = Height_top_8 - Zblen_spngthick
      
         Step_total = 1600
         Step_gstat = 100

         Cstv_dt_8 = 200.
         Cstv_tstr_8 = mtn_tzero
         Cstv_pisrf_8 = 1000.
         Vtopo_start = -1
         Vtopo_ndt = -1

      else    ! PINTYNL

         Out3_etik_s='PINTYNL'

         Height_top_8 = 20000.d0
         Pres_ptop_8 = 95.75000118766453d0
         print*,'Pres_ptop_8=',Pres_ptop_8

         mtn_tzero=273.16
         mtn_nstar= 0.02
         mtn_flo  = 32.
         mtn_hwx  =5
         mtn_hght = 800.

         Grd_ni = 161
         Grd_nj = 1
         G_nk   = 80

         Grd_dx = 3200.                                  ! in meters
         Grd_dx = (Grd_dx/Dcst_rayt_8)*(180./Dcst_pi_8)  ! in degrees

         Hblen_x = 15
         Hblen_y = 0

         Zblen_spngthick=10000.
         Zblen_hmin = Height_top_8 - Zblen_spngthick
      
         Step_total = 1000
         Step_gstat = 100
         Cstv_dt_8 = 50.
         Cstv_tstr_8 = 2.946394714296820e+02
         Cstv_pisrf_8 = 1000.
         Vtopo_start = -1
         Vtopo_ndt = 60

      endif
      
      Pres_ptop=Pres_ptop_8

      Hgc_gxtyp_s='E'
      call cxgaig ( Hgc_gxtyp_S,Hgc_ig1ro,Hgc_ig2ro,Hgc_ig3ro,Hgc_ig4ro,
     $                        Grd_xlat1,Grd_xlon1,Grd_xlat2,Grd_xlon2 )

      rewind (unf)
      read ( unf, nml=mtn_cfgs, end = 9220, err=9000)
      go to 9221
 9220 write( Lun_out,9230) Theo_case_S
 9221 continue

cap      Step_rsti = Step_total+100

      Pres_pref = Cstv_pisrf_8

*   adjust dimensions to include piloted area (pil_n, s, w, e)

      Grd_ni = Grd_ni + Glb_pil_w + Glb_pil_e
      Grd_nj = Grd_nj + Glb_pil_n + Glb_pil_s
      Grd_nila = Grd_ni
      Grd_njla = Grd_nj
      Grd_jref = (Grd_nj+1 )/2

      if(mtn_nstar.lt.0.)           !  isothermal case
     $   mtn_nstar=Dcst_grav_8/sqrt(Dcst_cpd_8*Cstv_tstr_8)
      if(mtn_nstar.eq.0.0) then     !  isentropic case
         c1_8=Dcst_grav_8/(Dcst_cpd_8*Cstv_tstr_8)
         Exner_8=1.d0-c1_8*Height_top_8
      else
         c1_8=Dcst_grav_8**2/(Dcst_cpd_8*mtn_tzero*mtn_nstar**2)
         Exner_8=1.d0-c1_8+c1_8
     $              *exp(-mtn_nstar**2/Dcst_grav_8*Height_top_8)
      endif
      Pres_ptop_8 = Exner_8**(1.d0/Dcst_cappa_8)*Cstv_pisrf_8
      Pres_ptop=Pres_ptop_8
      print*,'pres_ptop=',pres_ptop
      if ( Theo_nivdist_S .eq. 'UNI') then
         write( Lun_out, 9400)
         delta_8 = (Cstv_pisrf_8/Pres_ptop_8)**(1.d0/G_nk)
         zmt_8(1)=2.d0*Pres_ptop_8*delta_8/(delta_8+1.d0)
         do k=2,G_nk
            zmt_8(k)=zmt_8(1)*delta_8**(k-1);
         enddo
         hyb(1)=0.0         
         do k=1,G_nk
            hyb(k+1) = (zmt_8(k) - Pres_ptop_8)/(Cstv_pisrf_8 - Pres_ptop_8)
            write( Lun_out, *) hyb(k+1),hyb(k+1)-hyb(k)
         enddo
         hyb(G_nk+2)=1.0
c        write( Lun_out, *) (hyb(k), k=1,G_nk+2)
      else if ( Theo_nivdist_S .eq. 'UNIFORMINHEIGHT') then
         write( Lun_out, 9401)
         hyb(1)=0.0
         do k=2,G_nk+1
            height_8=Height_top_8*(1.d0-(dble(k-1)-.5d0)/G_nk)
            Exner_8=1.d0-c1_8+c1_8*exp(-mtn_nstar**2/Dcst_grav_8*height_8)
            pres_8=Exner_8**(1.d0/Dcst_cappa_8)*Cstv_pisrf_8
            hyb(k)=(pres_8-Pres_ptop_8)/(Cstv_pisrf_8-Pres_ptop_8)
            write( Lun_out, *) hyb(k),hyb(k)-hyb(k-1)
         enddo
         hyb(G_nk+2)=1.0
c        write( Lun_out, *) (hyb(k),hyb(k)-hyb(k-1), k=1,G_nk+2)
      endif
*
      Grd_dy = Grd_dx
      Grd_x0=0.
      Grd_xl=Grd_x0 + (Grd_ni -1) * Grd_dx
      Grd_y0= - (Grd_jref-1) * Grd_dy
      Grd_yl=Grd_y0 + (Grd_nj -1) * Grd_dy
      if ( (Grd_x0.lt.  0.).or.(Grd_y0.lt.-90.).or.
     $     (Grd_xl.gt.360.).or.(Grd_yl.gt. 90.) ) then
          write (Lun_out,9600) Grd_x0,Grd_y0,Grd_xl,Grd_yl
          return
       endif
      Grd_dxmax=Grd_xl
      Grd_dymax=Grd_yl
      call datp2f( idatx, Lam_runstrt_S)
      Out3_date= idatx
	  
      G_halox = min(G_halox,Grd_ni-1)
      G_haloy = G_halox
	  
      do i=1,Tr3d_userntr
       Tr3d_username_S(i)="MTN"
       Tr3d_usersval(i)= 0.
      enddo
*
      mtn_cfg = 1
*
      if(matlab_write_L.and.Ptopo_myproc.eq.0)then

         open(unit=62,file=
     $        matlab_dir_S(1:longueur(matlab_dir_S))//
     $        'from_fortran_mtn_cfg.bin',
     $        status='replace',form='unformatted')
         write(62)G_nk
c a modifer         write(62)(Ver_hyb_8%m(k),k=2,G_nk)
         close(62)
      endif
*
      return   
*
 9000 write (Lun_out, 9100)
*     ---------------------------------------------------------------
 9100 format (/,' NAMELIST mtn_cfgs INVALID FROM FILE: model_settings'/)
 9230 format (/,' Default setup will be used for :',a/)
 9400 format (/1x,'From subroutine mtn_cfg:',
     $        /1x,'Uniform distribution of level is requested',
     $        /1x,'Values for hyb calculated by s/r mtn_cfg')
 9401 format (/1x,'From subroutine mtn_cfg:',
     $        /1x,'Uniform distribution of levels is requested',
     $        /1x,'Uniform distribution in terms of height',
     $        /1x,'Values for hyb recalculated by s/r mtn_cfg')
 9500 format (/1x,'From subroutine mtn_cfg:',
     $        /1x,'wrong value for model top')
 9600 format (/1x,'From subroutine mtn_cfg:',
     $        /1x,'wrong lam grid configuration  ')
      end
*
