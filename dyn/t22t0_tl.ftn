***s/r t22t0_tl -  TLM of t22t0 
*
#include <model_macros_f.h>
*
      subroutine t22t0_tl
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_30 - Edouard S.        - remove pi' at the top (pptt0)
* v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate
*                           - adapt for tracers in tr3d  
*
*object
*     see id section
*	
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "schm.cdk"
#include "tr3d.cdk"
#include "vt0.cdk"
#include "vt2.cdk"
#include "vt0m.cdk"
#include "vt2m.cdk"
*     ______________________________________________________
*
      if(.not. Schm_hydro_L) call gefstop('t22t0_tl')
*     ______________________________________________________
*
*C       1.    Change all variable names and exchange their keys
*              -------------------------------------------------
*
*     TRAJECTORY
*     ----------
      call shuffle(vmmk_ut0m   ,vmmk_ut2m   ,vmmk_ut0m_s)
      call shuffle(vmmk_vt0m   ,vmmk_vt2m   ,vmmk_vt0m_s)
      call shuffle(vmmk_tdt0m  ,vmmk_tdt2m  ,vmmk_tdt0m_s)
      call shuffle(vmmk_qt0m   ,vmmk_qt2m   ,vmmk_qt0m_s)
      call shuffle(vmmk_tpt0m  ,vmmk_tpt2m  ,vmmk_tpt0m_s)
      call shuffle(vmmk_fipt0m ,vmmk_fipt2m ,vmmk_fipt0m_s)
      call shuffle(vmmk_pipt0m ,vmmk_pipt2m ,vmmk_pipt0m_s)
      call shuffle(vmmk_tplt0m ,vmmk_tplt2m ,vmmk_tplt0m_s)
      call shuffle(vmmk_psdt0m ,vmmk_psdt2m ,vmmk_psdt0m_s)
      call shuffle(vmmk_st0m   ,vmmk_st2m   ,vmmk_st0m_s)
*
      if ( Tr3d_ntr .gt. 0 ) then
         call shuffle(vmmk_trt0m  ,vmmk_trt2m  ,vmmk_trt0m_s)
      endif
*
*     TLM
*     ---
      call shuffle(vmmk_ut0   ,vmmk_ut2   ,vmmk_ut0_s)
      call shuffle(vmmk_vt0   ,vmmk_vt2   ,vmmk_vt0_s)
      call shuffle(vmmk_wt0   ,vmmk_wt2   ,vmmk_wt0_s)
      call shuffle(vmmk_tdt0  ,vmmk_tdt2  ,vmmk_tdt0_s)
      call shuffle(vmmk_tt0   ,vmmk_tt2   ,vmmk_tt0_s)
      call shuffle(vmmk_fit0  ,vmmk_fit2  ,vmmk_fit0_s)
      call shuffle(vmmk_qt0   ,vmmk_qt2   ,vmmk_qt0_s)
      call shuffle(vmmk_tpt0  ,vmmk_tpt2  ,vmmk_tpt0_s)
      call shuffle(vmmk_fipt0 ,vmmk_fipt2 ,vmmk_fipt0_s)
      call shuffle(vmmk_qpt0  ,vmmk_qpt2  ,vmmk_qpt0_s)
      call shuffle(vmmk_pipt0 ,vmmk_pipt2 ,vmmk_pipt0_s)
      call shuffle(vmmk_tplt0 ,vmmk_tplt2 ,vmmk_tplt0_s)
      call shuffle(vmmk_psdt0 ,vmmk_psdt2 ,vmmk_psdt0_s)
      call shuffle(vmmk_st0   ,vmmk_st2   ,vmmk_st0_s)
*
      if ( Tr3d_ntr .gt. 0 ) then
         call shuffle(vmmk_trt0  ,vmmk_trt2  ,vmmk_trt0_s)
      endif
*
      return
      end
