! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
#include "model_macros_f.h"
      subroutine e_trinit ()
      implicit none
*
*revision
* v3_22 - Lee V.            - removed Trvs tracers
#include "e_tr.cdk"
*
      character*50 dumc
      integer i,in
*
      E_tr3d_ntr = 0
      do i=1,MAXTR
         E_tr3d_name_S(i) = '0000'
         call low2up (E_tr3d_list_S(i),dumc)
         if ((dumc(1:2).eq."HU").or.(dumc(1:2).eq."ES")) dumc = ''
         E_tr3d_list_S(i) = dumc
      end do
*
      do i=1,MAXTR
         if (E_tr3d_list_S(i).ne.'') then
            E_tr3d_ntr = E_tr3d_ntr+1
            in=index(E_tr3d_list_S(i),"=")+1
            if (in.ge.3) then
               E_tr3d_name_S(E_tr3d_ntr) = E_tr3d_list_S(i)(1:in-2)
               read (E_tr3d_list_S(i)(in:20),*) E_tr3d_sval (E_tr3d_ntr)
            else
               E_tr3d_name_S(E_tr3d_ntr) = E_tr3d_list_S(i)
               E_tr3d_sval  (E_tr3d_ntr) = 0.
            endif
         endif
      end do
*
      return
      end
