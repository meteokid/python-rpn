#if defined (DOC)
!*
!*
!***comdeck itf_cpl_cplg.cdk
!*
!* Author: Sophie Valcke -RPN/CERFACS - March 2005
!* Modifications:
!*   S. Chamberland, RPN, April 2006
!*         remove c_cploasis_ from namelist
!*         add C_cplflds2file_L, C_isautonomus_L, C_timeout
!*_________________________________________________________________
!*                                                                 |
!*  VARIABLES FOR COUPLING SYSTEM                                  |
!*  To couple the MEC with other models                            |
!*_________________________________________________________________|
!*                    |                                            |
!* NAME               | DESCRIPTION                                |
!*--------------------|--------------------------------------------|
!*                                                                 |
!* Configurable in namelist:                                       |
!*  C_coupling_L      |  .true. = extraction of coupling info      |
!*  C_cploasis_L      |  .true. = coupling with ext. model via oasis |
!*  C_cplflds2file_L  |  .true. = coupling fields are written in RPNSTD files|
!*  C_cpld2ocean_L    |  .true. = coupling with an ocean model     |
!*  C_cpld2land_L     |  .true. = coupling with an land model      |
!*  C_cpld2atmos_L    |  .true. = coupling with an atmos model     |
!*  C_isautonomus_L   |  .true. = the model is autonomous          |
!*                                i.e. it can continue even if the coupling crash |
!*  C_timeout         |  -1 : if > 0, set a timeout for mgi/gossip operations [sec] |
!*                                                                 |
!* Logicals (set in itf_cpl_init_cplfld and possibly in namelist):       |
!*  lg_atmos          |  .true. = MEC simulates atmosphere         |
!*  lg_ocean          |  .true. = MEC simulates ocean              |
!*  lg_land           |  .true. = MEC simulates land               |
!*                                                                 |
!* Name:  (set in c_defmec.ftn):                                   |
!*  cg_mecname        |    MEC name for Oasis                      |
!*                                                                 |
!* Coupling fields (in namelist or in c_initfld.ftn90)             |
!**  Different coupling configuration can be realized:             |
!**                                                                |
!** 1- Coupling between MEC_atmosoceanland and IML_ocean           | 
!**    In MEC_atmoslandocean (MECalo):                             |
!**      -> get from_ocean_S                                       |
!**      -> put from_atmos_S                                       |
!**                                                                |
!** 2- Coupling between MEC_atmos and MEC_oceanland                |
!**    In MEC_atmos (MECatm):                                      |
!**      -> get from_ocean_S and from_land_S                       | 
!**      -> put from_atmos_S                                       |
!**    In MEC_oceanland (MECocl):                                  |
!**      -> get from_atmos_S                                       |
!**      -> put from_ocean_S and from_land_S                       |
!**                                                                |
!** 3- Coupling between MEC_atmosocean and MEC_land and IML_ocean  |
!**    In MEC_atmosocean (MECaoc):                                 |
!**      -> get from_ocean_S (from IML_ocean)                      |
!**      -> get from_land_S (from MEC_land)                        |
!**      -> put from_atmos_S (to IML_ocean and MEC_land)           |
!**    In MEC_land (MEClan)                                        |
!**      -> get from_atmos_S from MEC_atmosocean                   |
!**      -> put from_land_S to MEC_atmos                           |
!**                                                                |
!*  ip_from_max       |   Maximum dimension of from_xxxxx_S vector |
!*  from_atmos_S      |   Name of fields sent by atmosphere        |
!*  ig_froma_dim      |   Used dimension of from_atmos_S           |
!*  from_ocean_S      |   Name of fields sent by ocean             |
!*  ig_fromo_dim      |   Used dimension of from_ocean_S           |
!*  from_land_S       |   Name of fields sent by land              |
!*  ig_froml_dim      |   Used dimension of from_land_S            |
!*  sfc_in_S          |   Name of fields received by MEC           |
!*  ig_sfc_in_dim     |   Number of fields received by MEC         |
!*  sfc_out_S         |   Name of fields sent by MEC               |
!*  ig_sfc_out_dim    |   Number of fields sent by MEC             |
!*  ig_max_inout_dim  |   Max (ig_sfc_in_dim and ig_sfc_out_dim)   |
!*                                                                 |
!* Others:                                                         |
!*  ig_oatime         |   time in Oasis (in seconds)               |
!*  iga_varidin       |   Ids for input coupling fields            |
!*  iga_varidou       |   Ids for output coupling fields           |
!*  rga_fldout        |   Coupling fields sent to coupler          |
!*  rga_fldin         |   Coupling fields received from coupler    |
!*  rga_cpl2phy       |   Local pe array: coupling fields to/from physics |
!*                                                                 |
!* Coupling mask (see readgeo.ftn and itf_cpl_set_coupling.ftn):         |
!*  rga_msk           |  Coupling mask based on sea-land mask,     |
!*                       MGEN, or on explicit mask, MCPL.          |  
!*  lg_mcpl           |  .true. if coupling mask is based on MCPL  |
!  
!*-----------------------------------------------------------------
!*	
#endif
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
	logical C_coupling_L, C_cploasis_L
	logical C_cplflds2file_L
!
! Logical C_cpld2ocean_L, C_cpld2land_L, C_cpld2atmos_L: in namelist
! must be true if MEC is coupled to an atmosphere, and/or ocean, and/or land
	logical C_cpld2ocean_L, C_cpld2land_L, C_cpld2atmos_L
!
! Logical lg_atmos, lg_ocean, lg_land:
! true if MEC is atmosphere, and/or ocean, and/or land
	logical    :: lg_atmos, lg_ocean, lg_land

	logical C_isautonomus_L
	integer C_timeout
!
! (defined/read in namelist by proc 0, then broadcast in itf_cpl_init_cplfld.ftn)
      MARK_COMMON_BEG (C_nml)
        common /C_nml/ C_coupling_L, C_cploasis_L, 
     $                 C_cplflds2file_L,C_isautonomus_L,
     $	               C_cpld2ocean_L, C_cpld2land_L, C_cpld2atmos_L, 
     $                 lg_atmos, lg_ocean, lg_land, C_timeout 
      MARK_COMMON_END (C_nml)
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! Maximum dimension of from_xxxxx_S vector  
	integer                             :: ip_from_max
        parameter (ip_from_max = 25)
!
! from_atmos_S (see c_initfld.ftn90):
        character*3, dimension(ip_from_max) :: from_atmos_S
	integer                             :: ig_froma_dim
!
! from_ocean_S (see c_initfld.ftn90):
        character*3, dimension(ip_from_max) :: from_ocean_S
	integer                             :: ig_fromo_dim
!
! from_land_S (see c_initfld.ftn90):
        character*3, dimension(ip_from_max) :: from_land_S
	integer                             :: ig_froml_dim
!
! (defined by all procs in itf_cpl_init_cplfld.ftn)
      MARK_COMMON_BEG (C_from)
	common / C_from / from_atmos_S, from_ocean_S, from_land_S 
        common / C_from_dim / ig_froma_dim, ig_fromo_dim, ig_froml_dim
      MARK_COMMON_END (C_from)
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!     Arrays of fields received or sent by MEC (see c_initfld.ftn90)
!
      integer                       :: ig_sfc_in_dim
      integer                       :: ig_sfc_out_dim
      integer                       :: ig_max_inout_dim
!
! (defined by all procs in itf_cpl_init_cplfld.ftn)
      common /C_dim/ ig_sfc_in_dim, ig_sfc_out_dim, ig_max_inout_dim
!
      character(len=3)              :: sfc_in_S
      character(len=3)              :: sfc_out_S
      pointer (p_sfc_in_S, sfc_in_S(*))
      pointer (p_sfc_out_S, sfc_out_S(*))
!
! (alloc and defined by proc 0 in itf_cpl_init_cplfld.ftn, 
!  used by proc 0 in itf_cpl_cplg_surf.ftn)
      common /C_sfc/ p_sfc_in_S, p_sfc_out_S
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!     Time in Oasis (in seconds)
      integer ig_oatime
! (defined in itf_cpl_set_coupling.ftn by all procs, 
!  used and incremented in p_main by all procs)
      common /C_time/ ig_oatime
!
!     Id of MEC for Oasis
      integer ig_compid
! (defined in itf_cpl_set_coupling.ftn by proc 0, used in itf_cpl_cplg_surf.ftn by proc 0)
      common /C_compid/ ig_compid
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!     Id of coupling fields for Oasis
      integer :: iga_varidin
      pointer (p_iga_varidin, iga_varidin(*))
      integer :: iga_varidou
      pointer (p_iga_varidou, iga_varidou(*))
!
! (defined in itf_cpl_set_coupling.ftn by proc 0, used in itf_cpl_cplg_surf.ftn by proc 0)
      common /C_varid/ p_iga_varidin, p_iga_varidou
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!     Coupling fields received from Oasis (allocated on process 0 only)
      real :: rga_fldin
      pointer (p_rga_fldin, rga_fldin(*))
!     Coupling fields sent to Oasis or other surface modules (process 0 only)
      real :: rga_fldout
      pointer (p_rga_fldout, rga_fldout(*))
!     Process local array for coupling fields to/from physics
      real, dimension (:), pointer :: rga_cpl2phy
!
! (alloc by proc 0 in itf_cpl_init_cplfld, glbcolc and glbdist by all procs 
!  in itf_cpl_cplg_surf, used by proc 0 in  itf_cpl_cplg_surf)
      common /C_fldinout/ p_rga_fldin, p_rga_fldout, rga_cpl2phy
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!     Index of coupling field first element in rga_fldin iga_xxx(1)
!     or in rga_fldout iga_xxx(2)
!
      integer, dimension(2) :: 
     $     iga_tja, iga_uda, iga_vda,
     $     iga_t8a, iga_u8a, iga_v8a, 
     $     iga_tda, 
     $     iga_p8a, iga_h8a, 
     $     iga_fba, iga_fia, iga_rta, iga_mca,
     $     iga_glw, iga_i8w, iga_i7w, iga_tmw,
     $     iga_fcw, iga_fvw, iga_bmw, iga_alw, iga_tgw, iga_mcw,
     $     iga_fci, iga_fvi, iga_bmi, iga_ali, iga_tgi, iga_mci,  
     $     iga_fcl, iga_fvl, iga_bml, iga_all, iga_tgl, iga_mcl,
     $     iga_fcg, iga_fvg, iga_bmg, iga_alg, iga_tgg, iga_mcg  
!
! (defined by all procs in itf_cpl_init_cplfld.ftn)
      common /C_indfld/ 
     $     iga_tja, iga_uda, iga_vda, 
     $     iga_t8a, iga_u8a, iga_v8a,
     $     iga_tda, 
     $     iga_p8a, iga_h8a,  
     $	   iga_fba, iga_fia, iga_rta, iga_mca,
     $     iga_glw, iga_i8w, iga_i7w, iga_tmw,
     $     iga_fcw, iga_fvw, iga_bmw, iga_alw, iga_tgw, iga_mcw,
     $     iga_fci, iga_fvi, iga_bmi, iga_ali, iga_tgi, iga_mci,  
     $     iga_fcl, iga_fvl, iga_bml, iga_all, iga_tgl, iga_mcl,
     $     iga_fcg, iga_fvg, iga_bmg, iga_alg, iga_tgg, iga_mcg  
!
!     Position of the coupling field in rga_fldin iga_n_xxx(1)
!     or in rga_fldout iga_n_xxx(2)
! 
      integer, dimension(2) :: 
     $     iga_n_tja, iga_n_uda, iga_n_vda,
     $     iga_n_t8a, iga_n_u8a, iga_n_v8a, 
     $     iga_n_tda,
     $     iga_n_p8a, iga_n_h8a,
     $     iga_n_fba, iga_n_fia, iga_n_rta, iga_n_mca,
     $     iga_n_glw, iga_n_i8w, iga_n_i7w, iga_n_tmw,
     $     iga_n_fcw, iga_n_fvw, iga_n_bmw, iga_n_alw, iga_n_tgw, iga_n_mcw,
     $     iga_n_fci, iga_n_fvi, iga_n_bmi, iga_n_ali, iga_n_tgi, iga_n_mci,  
     $     iga_n_fcl, iga_n_fvl, iga_n_bml, iga_n_all, iga_n_tgl, iga_n_mcl,
     $     iga_n_fcg, iga_n_fvg, iga_n_bmg, iga_n_alg, iga_n_tgg, iga_n_mcg  
!
! (defined by all procs in itf_cpl_init_cplfld.ftn)
      common /C_pos/ 
     $     iga_n_tja, iga_n_uda, iga_n_vda,
     $     iga_n_t8a, iga_n_u8a, iga_n_v8a, 
     $     iga_n_tda,
     $     iga_n_p8a, iga_n_h8a,  
     $     iga_n_fba, iga_n_fia, iga_n_rta, iga_n_mca,
     $     iga_n_glw, iga_n_i8w, iga_n_i7w, iga_n_tmw,
     $     iga_n_fcw, iga_n_fvw, iga_n_bmw, iga_n_alw, iga_n_tgw, iga_n_mcw,
     $     iga_n_fci, iga_n_fvi, iga_n_bmi, iga_n_ali, iga_n_tgi, iga_n_mci,  
     $     iga_n_fcl, iga_n_fvl, iga_n_bml, iga_n_all, iga_n_tgl, iga_n_mcl,
     $     iga_n_fcg, iga_n_fvg, iga_n_bmg, iga_n_alg, iga_n_tgg, iga_n_mcg
!
!     Array of integer = 1 if field is a coupling field in current simulation
!            1st dim: 1=FC, 2=FV, 3=BM, 4=AL, 5=TG, 6=MC     
!            2nd dim: 1=soil(L), 2=glaciers(G), 3=water(W), 4=ice(I)
! 
      integer, dimension(6,4) :: iga_cplfld
!
! (defined by all procs in itf_cpl_init_cplfld.ftn)
      common /C_cplfld/ iga_cplfld
!
!     Indices of surface types in physics
      integer :: ig_indx_soil   , ig_indx_glacier
      integer :: ig_indx_water  , ig_indx_ice
      integer :: ig_indx_agrege
! (get from physics by all procs in p_config.ftn, 
!  used by all procs in itf_cpl_getbus.ftn)
      common /C_indx/ ig_indx_soil, ig_indx_glacier, ig_indx_water, 
     $	     ig_indx_ice, ig_indx_agrege
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
      real, dimension (:), pointer :: rga_msk, rla_msk
!
! (alloc and defined by proc 0 in readgeo.ftn, 
!  used by proc 0 in itf_cpl_set_coupling.ftn and itf_cpl_cplg_surf.ftn)
      common /C_mask/ rga_msk, rla_msk
!
      logical :: lg_mcpl,GOMSST
! (defined by proc 0 in readgeo.ftn, used by proc 0 in itf_cpl_set_coupling.ftn)
      common /C_mcpl/ lg_mcpl,GOMSST
!
!     Counter of coupling exchanges (oasis_get - one for all fields)
      integer:: ig_ncpl
      common /C_ncpl/ ig_ncpl
!
!     To detect if oasis_put or oasis_get have effectively been performed
      logical :: lg_put, lg_get
!     To detect the first time oasis_get has effectively been performed
      logical :: lg_getfirst
      common /C_oaputget/ lg_put, lg_get, lg_getfirst
