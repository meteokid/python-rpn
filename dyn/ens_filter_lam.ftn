***s/r sol_main - Fourier filter
*
#include <model_macros_f.h>
      subroutine ens_filter_lam
#include "impnone.cdk"
*
*author 
*     Lubos Spacek - rpn - apr 2005
*
*revision
*
*object
*	
*arguments
*	none
*
*implicits
#include "ptopo.cdk"
#include "glb_ld.cdk"
#include "trp.cdk"
#include "ldnh.cdk"
#include "vt1.cdk"
#include "lctl.cdk"
#include "glb_pil.cdk"
*
*modules
      integer vmmlod, vmmget, vmmuld
      external vmmlod, vmmget, vmmuld
*
*variables
      integer ix,iy,iz,iz_local,kx,ky,kz,i,j,k
      integer np, rank, ierr, siz, trx, try, keys(2), npartiel
      real    pi, err
      real*8  dpi
!     Arrays
      real  , dimension(:,:,:), allocatable  :: dsp_local
      real*8, dimension(:,:,:), allocatable  :: psi_local,work_local
      real*8, dimension(:,:,:), allocatable  :: ffx_local,ffy_local
************************************************************************
      dpi=4.d0*atan(1.0d0)
      trx=100 ; try=100
*
*     Get needed fields in memory
*
      keys(1) = VMM_KEY(difut1)
      keys(2) = VMM_KEY(difvt1)
*
      ierr = vmmlod( keys, 2 )
      ierr = VMM_GET_VAR(difut1)
      ierr = VMM_GET_VAR(difvt1)

      do rank=0,Ptopo_numproc
      if(rank==Ptopo_myproc)then
         write(*,*)' T R A N S P O S E S',Ptopo_myproc,ierr
         write(*,*) Trp_12dmin, Trp_12dmax, Trp_12dn, Trp_12dn0
         write(*,*) Trp_22min , Trp_22max , Trp_22n , Trp_22n0
         write(*,*) minval(difut1),maxval(difut1),minval(difvt1),maxval(difvt1)
         write(*,"(72('='))")
      endif
      call rpn_comm_Barrier("grid", ierr)
      enddo

      call rpn_comm_Barrier("grid", ierr)

      allocate( dsp_local(l_minx:l_maxx,l_miny:l_maxy,G_nk))
      allocate( psi_local(ldnh_minx:ldnh_maxx,ldnh_miny:ldnh_maxy,G_nk))
      allocate( work_local(ldnh_miny:ldnh_maxy,Trp_12dmin:Trp_12dmax,
     %                                             G_ni+2+Ptopo_npex))
      call rpn_comm_xch_halo (difut1,LDIST_DIM,l_ni,l_nj,G_nk,
     %             G_halox,G_haloy,G_periodx,G_periody,l_ni,0)
 
      call rpn_comm_Barrier("grid", ierr)
      do iz=1,l_nk
         do iy=1+pil_s, l_nj-pil_n
            do ix=1+pil_w, l_ni-pil_e
            dsp_local(ix,iy,iz)=sqrt(0.5*
     %       (difut1(ix,iy,iz)**2+difvt1(ix,iy,iz)**2))
            dsp_local(ix,iy,iz)=2.d0+
     %         10.d0*dcos(2.*dpi*dble(ix-1-pil_w)/dble(G_ni-Lam_pil_e-Lam_pil_w))+
     %         10.d0*dsin(2.*dpi*dble(ix-1-pil_w)/dble(G_ni-Lam_pil_e-Lam_pil_w))+
     %         20.d0*dcos(4.*dpi*dble(ix-1-pil_w)/dble(G_ni-Lam_pil_e-Lam_pil_w))+
     %         20.d0*dsin(4.*dpi*dble(ix-1-pil_w)/dble(G_ni-Lam_pil_e-Lam_pil_w))+
     %         30.d0*dcos(6.*dpi*dble(ix-1-pil_w)/dble(G_ni-Lam_pil_e-Lam_pil_w))+
     %         30.d0*dsin(6.*dpi*dble(ix-1-pil_w)/dble(G_ni-Lam_pil_e-Lam_pil_w))
            enddo
         enddo
      enddo
c            dsp_local=2.0
      do rank=0,Ptopo_numproc
      if(rank==Ptopo_myproc)then
         write(*,*)'minval,maxval'
         write(*,*) minval(dsp_local(1:l_ni,1:l_nj,:)),
     %              maxval(dsp_local(1:l_ni,1:l_nj,:))
         write(*,*)'pil_e,pil_w,pil_n,pil_s',pil_e,pil_w,pil_n,pil_s
         write(*,*)'Lam_pil_e,Lam_pil_w,Lam_pil_n,Lam_pil_s',
     %              Lam_pil_e,Lam_pil_w,Lam_pil_n,Lam_pil_s
         write(*,*)'l_ni,l_niu,l_nj,l_njv',l_ni,l_niu,l_nj,l_njv
         write(*,*)ldnh_minx, ldnh_maxx, G_ni,ldnh_miny,ldnh_maxy,
     %           Trp_12dmin, Trp_12dmax, G_nk
         write(*,*)'l_min,l_max,x,y,l_nk',l_minx,l_maxx,l_miny,l_maxy,l_nk
      endif
      call rpn_comm_Barrier("grid", ierr)
      enddo

      siz=2
      work_local=0.0d0
      call sol_trsf (psi_local,dsp_local,ldnh_minx,ldnh_maxx,
     %                   ldnh_miny,ldnh_maxy,LDIST_DIM,l_nk, 1)

      call rpn_comm_transpose( psi_local, ldnh_minx, ldnh_maxx, G_ni,
     %                         (ldnh_maxy-ldnh_miny+1),
     %                Trp_12dmin, Trp_12dmax, G_nk, work_local, 1, 2 )
c
      call rpn_comm_Barrier("grid", ierr)

c      if(Ptopo_myproc==1)then
c      do i=1,G_ni
c         write(*,"(i3,6f10.1)")i,work_local(10,10,i),work_local(10,11,i),
c     % work_local(10,12,i),work_local(10,13,i),work_local(10,14,i),
c     % sin(144.d0*dpi*dble(i-1-pil_w)/dble(G_ni-Lam_pil_e-Lam_pil_w))
c      enddo
c      endif
cccccccccccccccccccccccccccccccccccccccccccc
      do rank=0,Ptopo_numproc
      if(rank==Ptopo_myproc.and..false.)then
         write(*,*)'====== fft x =',Ptopo_myproc
         do ix = 1,G_ni+2+Ptopo_npex
             do iz = 2,2
            write(*,'(2i3,9f8.0)')ix,iz,(work_local(iy,iz,ix),iy=1,9)
            enddo
         enddo
      endif
      call rpn_comm_Barrier("grid", ierr)
      enddo
cccccccccccccccccccccccccccccccccccccccccccccccccc

      call setfft8(G_ni-Lam_pil_e-Lam_pil_w) 
      do kz=1,l_nk

c        call ffft8(work_local(ldnh_miny,kz,1),(ldnh_maxy-ldnh_miny+1)
c     %       *(Trp_12dmax-Trp_12dmin+1),1, (ldnh_maxy-ldnh_miny+1), -1 )

        call ffft8(work_local(1+pil_s,kz,1+Lam_pil_w),
     %(ldnh_maxy-ldnh_miny+1)
     %       *(Trp_12dmax-Trp_12dmin+1),1,
     %(ldnh_maxy-ldnh_miny-pil_s-pil_n+1), -1 )
      enddo


c      work_local(:,:,trx:)=0.0d0

      call rpn_comm_Barrier("grid", ierr)
c

c      call rpn_comm_topo ( G_ni+2+Ptopo_npex,Trp_22min ,Trp_22max, trp_22n, npartiel ,
c     %                               0, trp_22n0, .false. , .true. )
      allocate( ffx_local(Trp_12dmin:Trp_12dmax,Trp_22min:Trp_22max,
     %                                             G_nj+2+Ptopo_npey))
      ffx_local=0.0d0

      call rpn_comm_transpose( work_local, ldnh_miny, ldnh_maxy, G_nj,
     %                         (Trp_12dmax-Trp_12dmin+1),
     %                    Trp_22min , Trp_22max, G_ni, ffx_local, 2, 2 )

c
      call rpn_comm_Barrier("grid", ierr)

      call setfft8(G_nj-Lam_pil_s-Lam_pil_n)
      do kx=1,Trp_22n
c      call ffft8(ffx_local(Trp_12dmin,kx,1),(Trp_12dmax-Trp_12dmin+1)
c     %     *(Trp_22max-Trp_22min+1),1, (Trp_12dmax-Trp_12dmin+1), -1 )

        call ffft8(ffx_local(1+pil_w,kx,1+Lam_pil_n),
     %(Trp_12dmax-Trp_12dmin+1)
     %       *(Trp_22max-Trp_22min+1),1,
     %(Trp_22max-Trp_22min-pil_e-pil_w+1), -1 )
      enddo

      do rank=0,Ptopo_numproc
      if(rank==Ptopo_myproc)then
         write(*,*)'====== fft 2 =',Ptopo_myproc,(Trp_12dmax-Trp_12dmin+1)*
     %  (Trp_22max-Trp_22min+1),Trp_12dmax-Trp_12dmin-pil_e-pil_w+1
         do iy = 1,G_nj+2+Ptopo_npey
            do iz = 2,2
            write(*,'(2i3,15f8.0)')iy,iz,(ffx_local(iz,ix,iy),ix=1,15)
            enddo
         enddo
      endif
       call rpn_comm_Barrier("grid", ierr)
      enddo
      call gem_stop('ens_filter',-1)      

c      ffx_local(:,:,try:)=0.0d0
c
      call rpn_comm_Barrier("grid", ierr)
c
c
      do kx=1,Trp_22n
      call ffft8(ffx_local(Trp_12dmin,kx,1),(Trp_12dmax-Trp_12dmin+1)
     %     *(Trp_22max-Trp_22min+1),1, (Trp_12dmax-Trp_12dmin+1), +1 )
      enddo
c
      call rpn_comm_Barrier("grid", ierr)
c
      call rpn_comm_transpose( work_local, ldnh_miny, ldnh_maxy, G_nj,
     %                         (Trp_12dmax-Trp_12dmin+1),
     %                    Trp_22min , Trp_22max, G_ni, ffx_local, -2, 2 )
c
      call rpn_comm_Barrier("grid", ierr)
c
      call setfft8(G_ni-Lam_pil_e-Lam_pil_w) 
      do kz=1,l_nk
        call ffft8(work_local(ldnh_miny,kz,1),(ldnh_maxy-ldnh_miny+1)
     %       *(Trp_12dmax-Trp_12dmin+1),1, (ldnh_maxy-ldnh_miny+1), +1 )
      enddo
c
      call rpn_comm_Barrier("grid", ierr)
      call gem_stop('ens_filter',-1)
c
      call rpn_comm_transpose( psi_local, ldnh_minx, ldnh_maxx, G_ni,
     %                         (ldnh_maxy-ldnh_miny+1),
     %                Trp_12dmin, Trp_12dmax, G_nk, work_local, -1, 2 )
c
      call rpn_comm_Barrier("grid", ierr)
c
      call sol_trsf (psi_local,difut1,ldnh_minx,ldnh_maxx,
     %                   ldnh_miny,ldnh_maxy,LDIST_DIM,l_nk, -1)

      deallocate(psi_local,dsp_local,work_local,ffx_local)

      ierr = vmmuld( -1, 0 )

      end subroutine ens_filter_lam
