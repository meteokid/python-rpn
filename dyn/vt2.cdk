!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
#if defined (DOC)
*
***comdeck vt2.cdk
*
*______________________________________________________________________
*                                                                      |
*  VMM variables at TIME t2                                            |
*______________________________________________________________________|
*                    |                                                 |
* NAME               | DESCRIPTION                                     |
*--------------------|-------------------------------------------------|
* ut2                | x component of velocity                         |
* vt2                | y component of velocity                         |
* wt2                | z component of velocity                         |
* tt2                | T (temperature)                                 |
* tdt2               | total divergence (dpi* dot / dpi* + D )         |
* fit2               | phi (geopotential)                              |
* qt2                | q = ln p                                        |
*--------------------|-------------------------------------------------|
* tpt2               | T'       \                                      |
* fipt2              | phi'      \  perturbations                      |
* qpt2               | q'        /                                     |
* pipt2              | pi'      /                                      |
*--------------------|-------------------------------------------------|
* tplt2              | T'  linear                                      |
*--------------------|-------------------------------------------------|
* mut2               | nonhydro index mu=dp/dpi-1 [= 0 if hydro]       |
* psdt2              | pi* dot (vert. vel. in pi* coord.)              |
* st2                | ln (pi_s/z_s)                                   |
*--------------------|-------------------------------------------------|
* hut2               | specific humidity                               |
* qct2               | mixing ratio of cloud water/ice                 |
* trt2               | passive tracer(s)                               |
*--------------------|-------------------------------------------------|
* xt2                | upstream x position                             |
* yt2                | upstream y position                             |
* zt2                | upstream z position                             |
* xct2               | upstream x position in cartesian coordinate     |
* yct2               | upstream y position in cartesian coordinate     |
* zct2               | upstream z position in cartesian coordinate     |
*----------------------------------------------------------------------
*
#endif
*
*NOTE: the equivalence statement below MUST mark the
*FIRST element of the common block or the OUTPUTS will be wrong.
*If you introduce an element in the beginning of this block, make
*changes to assure the equivalence statement below MARKS it.
*
      MARK_COMMON_BEG(vt2)
      DCL_VMMVAR( vt2,   ut2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,   vt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,   wt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,   tt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,  tdt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,  fit2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,   qt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,  tpt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2, fipt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,  qpt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2, pipt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2, tplt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,  mut2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2, psdt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,   st2, real, (LDIST_SHAPE)      )
      DCL_VMMVAR( vt2,  trt2, real, (LDIST_SHAPE,l_nk,*) )
      DCL_VMMVAR( vt2,   xt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,   yt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,   zt2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,  xct2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,  yct2, real, (LDIST_SHAPE,l_nk) )
      DCL_VMMVAR( vt2,  zct2, real, (LDIST_SHAPE,l_nk) )
      MARK_COMMON_END(vt2)

      character*8 vt2_n_first(1)
      equivalence (vt2_n_first,VMM_NAM(ut2))

