***s/r itf_phy_rdozone -- Initialization of climatological ozone data
*
#include "model_macros_f.h"
*
      subroutine itf_phy_rdozone (F_fichier_S, F_chemin_S)
      implicit none
*
      character* (*) F_fichier_S, F_chemin_S
*
*author
*     M. Desgagne  (Spring 2008)
*
*revision
* v3_31 - Desgagne M.       - initial version
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_fichier_S   I      file name of input file
* F_chemin_S    I      path of the input file
*
#include "ptopo.cdk"
#include "path.cdk"

      character*1024 filename
      character*60 datatype_S
      logical found_L
      integer iun,ilir,inbr,status,ierr
      integer fnom,fstouv,fstopc,fstfrm,fclos,wkoffit,bufnml(100000)
      data datatype_S /'CLIMATOLOGICAL OZONE FILE: '/
*-----------------------------------------------------------------
*
      status = 0
*
      if (Ptopo_myproc.eq.0) then
*
         filename = trim(Path_input_S)//'/'//trim(F_fichier_S)
         inquire (FILE=filename,EXIST=found_L)
         if (.not.found_L) then
            filename = trim(F_chemin_S)//trim(F_fichier_S)
            inquire (FILE=filename,EXIST=found_L)
         endif
*
         if (found_L) then
            ilir = wkoffit(filename)
            if (  (ilir.eq.1) .or.(ilir.eq.2).or.
     $            (ilir.eq.33).or.(ilir.eq.34) ) then
               write (6,1001) trim(datatype_S),trim(filename)
               call array_from_file(bufnml,size(bufnml),filename)
            else
               print*, ' FILE ',trim(filename)
               print*, ' NOT FST FILE FORMAT -- ABORT --'
               status = -1
            endif
         else
            print*
            print *,'********************************************'
            print *,'   CAN NOT FIND ',datatype_S,trim(filename)
            print *,'********************************************'
            status = -1
         endif

      endif
*
      call gem_stop('itf_phy_rdozone',status)
*
      if (Ptopo_myproc.gt.0) inbr = fstopc ('MSGLVL','SYSTEM',.false.)

      call RPN_COMM_bcast(bufnml,size(bufnml),"MPI_INTEGER",0,
     $                                           "grid",ierr )
      filename='ozone_localfile'
      call array_to_file (bufnml,size(bufnml),filename)
*
      iun  = 0
      ilir = fnom (iun,filename,'STD+RND+OLD',0)
      ilir = fstouv (iun,'RND')
*
      call rd_ozone (iun,status)
*
      inbr = fstfrm (iun)
      inbr = fclos  (iun)    
*
      call gem_stop('rd_ozone',status)
*
      inbr = fstopc ('MSGLVL','INFORM',.false.)

 1001 format (/a/a)
*
*-----------------------------------------------------------------
*
      return
      end
