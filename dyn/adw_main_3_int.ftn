! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r adw_main_3_int - Interpolation of rhs
*
#include "model_macros_f.h"
*
      subroutine adw_main_3_int ( F_u, F_v, F_w )
*
      implicit none
      real F_u(*), F_v(*), F_w(*)
*
*author
*     alain patoine
*
*revision
* v2_31 - Desgagne & Tanguay  - removed stkmemw, introduce tracers
* v2_31                       - tracers not monotone if V4dg_conf.ne.0
* v2_31 - R.Moffet            - do precalc (zz1) for ZZ in blomega
* v3_00 - Desgagne & Lee      - Lam configuration
* v3_02 - Tanguay             - Restore tracers monotone if V4dg_conf.ne.0 
* v3_02 - Lee V.              - revert adw_exch_1 for GLB only, 
* v3_02                         added adw_ckbd_lam,adw_cfl_lam for LAM only
* v3_03 - Tanguay M.          - stop if adw_exch_1 is activated when 4D-Var
* v3_10 - Corbeil & Desgagne & Lee - AIXport+Opti+OpenMP
* v3_11 - Gravel S.           - introduce key Adw_mono_L 
* v3_20 - Gravel & Valin & Tanguay - Lagrange 3D
* v3_20 - Tanguay M.          - Improve alarm when points outside advection grid
* v3_20 - Dugas B.            - correct calculation for LAM when Glb_pil gt 7
* v3_21 - Desgagne M.         - if  Lagrange 3D, call adw_main_3_intlag
* v3_30 - McTaggart-Cowan R.  - replace lag3d_L by Adw_interp_type_S
*
*language
*     fortran 77
*
*object
*     see id section
*
*arguments
*______________________________________________________________________
*        |                                                       |     |
* NAME   | DESCRIPTION                                           | I/O |
*--------|-------------------------------------------------------|-----|
*        |                                                       |     |
*        |                                                       |     |
* F_u,F_v| 3 components of upstream positions at t1 at input     |  iw |
* F_w    | used as work field afterward                          |     |
*________|_______________________________________________________|_____|
*
*implicits
#include "glb_ld.cdk"
#include "glb_pil.cdk"
#include "ptopo.cdk"
#include "geomg.cdk"
#include "orh.cdk"
#include "lctl.cdk"
#include "step.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "offc.cdk"
#include "cstv.cdk"
#include "rhsc.cdk"
#include "v4dg.cdk"
#include "type.cdk"
#include "adw.cdk"
#include "tr3d.cdk"
#include "vt1.cdk"
#include "vt0.cdk"
#include "vtx.cdk"
#include "ver.cdk"
#include "acid.cdk"
*
*modules
      integer  vmmlod, vmmget, vmmuld,longueur
      external vmmlod, vmmget, vmmuld
************************************************************************
      integer i0,in,j0,jn
      integer pnerr, pnlkey1(30), key1(Tr3d_ntr), key0(Tr3d_ntr), 
     $        key1_, key0_, pnlod, err, dim
*
      integer outside,sum_outside,ier
*
      integer n, nij, nijkt, nijkm, nijkad, cnt, unf
      integer i,j,k, n1,n2,np 
      integer DIST_DIM
*
      real*8 aaa
      real tr,tr0,buf(l_ni,G_nk+1), half
      parameter( half = 0.5 )
      pointer (patr, tr(LDIST_SHAPE,*)),(patr0, tr0(LDIST_SHAPE,*))
      real, allocatable, dimension(:,:,:,:) :: tr2
      real, allocatable, dimension(:) :: pos_x, pos_y, pos_z
*
      if ( Adw_interp_type_S(1:5).eq.'LAG3D' ) then
         call adw_main_3_intlag ( F_u, F_v, F_w )
         return
      endif
      call gem_stop('adw_main_3_int : spline not supported',-1)
*
      return
      end
