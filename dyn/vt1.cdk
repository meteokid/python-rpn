! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
#if defined (DOC)
*
***comdeck vt1.cdk
*
*______________________________________________________________________
*                                                                      |
*  VMM variables at TIME t1 (t0-dt)                                    |
*______________________________________________________________________|
*                    |                                                 |
* NAME               | DESCRIPTION                                     |
*--------------------|-------------------------------------------------|
*  ut1               | U: x component of velocity                      |
*  vt1               | V: y component of velocity                      |
*  wt1               | w: z component of velocity                      |
*  tt1               | T: temperature                                  |
* zdt1               | Zdot: generalized vertical velocity             |
*  st1               | s: log of surface pressure minus a constant     |
*fipt1               | fip: perturbation geopotential                  |
*--------------------|-------------------------------------------------|
*  qt1               | q: log of non-hydrostatic perturbation pressure |
*--------------------|-------------------------------------------------|
* trt1               | passive tracer(s)                               |
*----------------------------------------------------------------------|
*  zz1               | 3-d upstream position of fip used to comp. dz/dt|
* zzh1               | Horizontal upstream position of fip             |
* piup               | Upstream hydrostatic pressure at t-dt for omega |
*--------------------|-------------------------------------------------|
* xct1               | upstream x position in cartesian coordinate     |
* yct1               | upstream y position in cartesian coordinate     |
* zct1               | upstream z position in cartesian coordinate     |
*----------------------------------------------------------------------
*
#endif
*
*NOTE: the equivalence statement below MUST mark the
*FIRST element of the common block or the OUTPUTS will be wrong.
*If you introduce an element in the beginning of this block, make
*changes to assure the equivalence statement below MARKS it.
*
      MARK_COMMON_BEG (vt1)
      DCL_VMMVAR( vt1,   ut1, real, (LDIST_SHAPE,l_nk+1  ) )
      DCL_VMMVAR( vt1,   vt1, real, (LDIST_SHAPE,l_nk+1  ) )
      DCL_VMMVAR( vt1,   wt1, real, (LDIST_SHAPE,l_nk+1  ) )
      DCL_VMMVAR( vt1,   tt1, real, (LDIST_SHAPE,l_nk+2  ) )
      DCL_VMMVAR( vt1,  zdt1, real, (LDIST_SHAPE,l_nk+1  ) )
      DCL_VMMVAR( vt1,   st1, real, (LDIST_SHAPE)        )
      DCL_VMMVAR( vt1,   qt1, real, (LDIST_SHAPE,0:l_nk+1) )
      DCL_VMMVAR( vt1,  trt1, real, (LDIST_SHAPE,l_nk+2,*) )
      DCL_VMMVAR( vt1,   zz1, real, (LDIST_SHAPE,l_nk+1  ) )
      DCL_VMMVAR( vt1,  zzh1, real, (LDIST_SHAPE,l_nk    ) )
      DCL_VMMVAR( vt1,  piup, real, (LDIST_SHAPE,l_nk+1  ) )
      DCL_VMMVAR( vt1,   wup, real, (LDIST_SHAPE,l_nk    ) )
      DCL_VMMVAR( vt1,  zdup, real, (LDIST_SHAPE,l_nk+1  ) )
      DCL_VMMVAR( vt1,  xct1, real, (l_ni*l_nj*l_nk) )
      DCL_VMMVAR( vt1,  yct1, real, (l_ni*l_nj*l_nk) )
      DCL_VMMVAR( vt1,  zct1, real, (l_ni*l_nj*l_nk) )
      DCL_VMMVAR( vt1, fipt1, real, (LDIST_SHAPE,0:l_nk+1) )
      MARK_COMMON_END (vt1)
     
      character*8 vt1_n_first(1)
      equivalence (vt1_n_first,VMM_NAM(ut1))
     
