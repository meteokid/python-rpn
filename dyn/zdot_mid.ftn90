!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r zdot_mid - compute lagrangian model velocity (zdot) for advection
!
#include "model_macros_f.h"
!
      subroutine zdot_mid()
!
      implicit none
!
!author
!     Andre Plante, Claude Girard August 2007.
!
!revision
! v4_05 - Lepine M.         - VMM replacement with GMM
!
!object
!**********************************************************************
! See GEMzdotlag.doc
!**********************************************************************
!
!arguments
!        None
!
!implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "lun.cdk"
#include "glb_ld.cdk"
#include "glb_pil.cdk"
#include "vt0.cdk"
#include "vt1.cdk"
#include "vth.cdk"
#include "offc.cdk"
!
      integer i,j,k,i0,in,j0,jn
      real*8  one
      parameter( one = 1.d0 )
!
!     __________________________________________________________________
!
      if (Lun_debug_L) write (Lun_out,1000)

      gmmstat = gmm_get(gmmk_zdt0_s,zdt0,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'zdot_mid ERROR at gmm_get(zdt0)'
      gmmstat = gmm_get(gmmk_zdup_s,zdup,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'zdot_mid ERROR at gmm_get(zdup)'
      gmmstat = gmm_get(gmmk_zdth_s,zdth,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'zdot_mid ERROR at gmm_get(zdth)'
!
      i0=1
      in=l_ni
      j0=1
      jn=l_nj
      if (G_lam) then
!
         if (l_west)  i0=   1+Glb_pil_w
         if (l_east)  in=l_ni-Glb_pil_e
         if (l_south) j0=   1+Glb_pil_s
         if (l_north) jn=l_nj-Glb_pil_n
!
      endif
!
!$omp parallel
!
!$omp do          
      do k=1,G_nk+1
         do j=j0,jn 
         do i=i0,in
            zdth(i,j,k) = Offc_b0T_8*zdt0(i,j,k)+(one-Offc_b0T_8)*zdup(i,j,k)
         end do
         end do
      end do
!$omp enddo
!
!$omp end parallel      
!
!     __________________________________________________________________ 
!
1000  format(3X,'COMPUTE LAGRANGIAN ZDOT: (S/R ZDOT_MID)')
!
!     __________________________________________________________________
!
      return
      end
