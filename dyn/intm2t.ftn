! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r intm2t - downward vertical integration of variable ne momentum level.
*
#include "model_macros_f.h"
*
      subroutine intm2t (F_gg_t, F_ff_m, F_con, F_hz_m_8, DIST_DIM,Nk,
     $                   F_i0,F_in,F_j0,F_jn,F_k0)
*
#include "impnone.cdk"
*
      integer DIST_DIM, Nk,F_i0,F_in,F_j0,F_jn,F_k0
      real F_gg_t(DIST_SHAPE,Nk+1),F_ff_m(DIST_SHAPE,Nk),F_con
      real*8  F_hz_m_8(Nk)
*
*author
*     A. Plante - cmc - aug 2005 (based on hatoprg.ftn from J. Cote)
*
*revision
*
*object  DOWNWARD vertical integration for momentum variable. The output is on
*        the thermodynamic levels.
*
*                 / z(sfc) 
*        G   =  C |        F dz 
*         k       / z(k)
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
*  F_gg_t      O          resulting vertical integration (on thermo levels)
*  F_ff_m      I          input field to be integrated   (on momentum levels)
*  F_con       I          mutiplication coefficient 
*  F_hz_m_8    I          intervals in z-direction (on momentum levels)
*----------------------------------------------------------------
*
*implicits 
#include "glb_ld.cdk"
*
      integer i, j, k
      real w1(DIST_SHAPE,2)
      real*8  ccc 
*
*notes
*     The computation is done by horizontal slices 
**
*     __________________________________________________________________
*
      do j=F_j0,F_jn
      do i=F_i0,F_in
         w1(i,j,1) = 0.0
      end do
      end do 

      do k=G_nk,1,-1
         ccc = F_con*F_hz_m_8(k)
         do j=F_j0,F_jn
         do i=F_i0,F_in
            w1(i,j,2) = ccc*F_ff_m(i,j,k)
            F_gg_t(i,j,k+1) = w1(i,j,1)
            w1(i,j,1) = w1(i,j,1) + w1(i,j,2)
         end do
         end do
      end do

      do j=F_j0,F_jn
      do i=F_i0,F_in
         F_gg_t(i,j,1) = w1(i,j,1)
      end do
      end do

      return
      end
