***s/r wndth_tl - TLM of wndth 
*
#include <model_macros_f.h>
*
      subroutine wndth_tl
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
*
*object
*     see id section
*	
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "vt0.cdk"
#include "vth.cdk"
#include "vt1.cdk"
#include "vt0m.cdk"
#include "vthm.cdk"
#include "vt1m.cdk"
*
*modules
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      integer pnlod,pnerr, pnlkey1(18)
      integer i, j, k
*
*     ---------------------------------------------------------------
*
*     get fields in memory
*
      pnlkey1(1) = VMM_KEY(uth)
      pnlkey1(2) = VMM_KEY(ut1)
      pnlkey1(3) = VMM_KEY(ut0)
      pnlkey1(4) = VMM_KEY(vth)
      pnlkey1(5) = VMM_KEY(vt1)
      pnlkey1(6) = VMM_KEY(vt0)
      pnlkey1(7) = VMM_KEY(psdth)
      pnlkey1(8) = VMM_KEY(psdt1)
      pnlkey1(9) = VMM_KEY(psdt0)
      pnlod = 9
*
      pnlkey1(pnlod+1) = VMM_KEY(uthm)
      pnlkey1(pnlod+2) = VMM_KEY(ut1m)
      pnlkey1(pnlod+3) = VMM_KEY(ut0m)
      pnlkey1(pnlod+4) = VMM_KEY(vthm)
      pnlkey1(pnlod+5) = VMM_KEY(vt1m)
      pnlkey1(pnlod+6) = VMM_KEY(vt0m)
      pnlkey1(pnlod+7) = VMM_KEY(psdthm)
      pnlkey1(pnlod+8) = VMM_KEY(psdt1m)
      pnlkey1(pnlod+9) = VMM_KEY(psdt0m)
      pnlod = pnlod+9 
*
      pnerr = vmmlod(pnlkey1,pnlod)
*
      pnerr = VMM_GET_VAR(psdth)
      pnerr = VMM_GET_VAR(psdt1)
      pnerr = VMM_GET_VAR(psdt0)
      pnerr = VMM_GET_VAR(uth)
      pnerr = VMM_GET_VAR(vth)
      pnerr = VMM_GET_VAR(ut1)
      pnerr = VMM_GET_VAR(vt1)
      pnerr = VMM_GET_VAR(ut0)
      pnerr = VMM_GET_VAR(vt0)
*
      pnerr = VMM_GET_VAR(psdthm)
      pnerr = VMM_GET_VAR(psdt1m)
      pnerr = VMM_GET_VAR(psdt0m)
      pnerr = VMM_GET_VAR(uthm)
      pnerr = VMM_GET_VAR(vthm)
      pnerr = VMM_GET_VAR(ut1m)
      pnerr = VMM_GET_VAR(vt1m)
      pnerr = VMM_GET_VAR(ut0m)
      pnerr = VMM_GET_VAR(vt0m)
*
*
*C       1.    Perform the averaging
*              ---------------------
*
      do k=1,l_nk
         do j= 1+pil_s, l_nj-pil_n 
         do i= 1+pil_w, l_ni-pil_e 
*   
*        TRAJECTORY
*        ----------
         uthm  (i,j,k)= 0.5 * ut0m  (i,j,k)+ 0.5 * ut1m  (i,j,k)
         psdthm(i,j,k)= 0.5 * psdt0m(i,j,k)+ 0.5 * psdt1m(i,j,k)
*
*        TLM 
*        ---
         uth  (i,j,k) = 0.5 * ut0  (i,j,k) + 0.5 * ut1  (i,j,k)
         psdth(i,j,k) = 0.5 * psdt0(i,j,k) + 0.5 * psdt1(i,j,k)
*
         end do
         end do
*
         do j= 1+pil_s, l_njv-pil_n 
         do i= 1+pil_w, l_ni-pil_e 
*
*        TRAJECTORY
*        ----------
         vthm(i,j,k)  = 0.5 * vt0m(i,j,k)+ 0.5 * vt1m(i,j,k)
*
*        TLM 
*        ---
         vth(i,j,k)   = 0.5 * vt0(i,j,k) + 0.5 * vt1(i,j,k)
*
         end do
         end do
      end do
*
      pnerr = vmmuld(-1,0)
*
*     ---------------------------------------------------------------
*
 1000 format(
     +/ /,' TLM of AVERAGE WINDS t0-dt/2 (th): (S/R WNDTH_TL)',
     + /,'===================================================',
     +/ /)
      return
      end
