! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
c  s/r genab_8  - Using Laprise & Girard, generates de A and B of the
c                    hybrid coordinate for vertical interpolation
c
#include "model_macros_f.h"
c
      subroutine genab_8 (F_kcode,F_am_8,F_bm_8,F_at_8,F_bt_8,
     %                    F_hybm_8, F_ptop_8,F_pref_8,F_rcoef,NK)
      implicit none
      
      integer NK,F_kcode
      real F_rcoef
      real*8 F_ptop_8,F_pref_8
      real*8 F_hybm_8(NK)
      real*8 F_am_8(*), F_bm_8(*)
      real*8 F_at_8(*), F_bt_8(*)
c
c author 
c      A. Plante  - CMC - mai 2006
c
c revision
c
c object
c    To return a, b parameters for momentum levels, and special (not
c    thermo levels) These will be used for vertical interpolation
c    Using Laprise & Girard, generates de A and B of the hybrid coordinate
c    see: Laprise & Girard, 1990, J. of Climate, eq. 5.1
c    Based on subroutine genab_8 also includes the evaluation
c    of the analytical derivative of zsurf*B with respect to Z and other
c    parameters related to the vertical discretazation.
c
c               vvvvvvvvvvvvvvvvv Ver_z_8%m(0) Virtual level
c
c    model top  ================= Ver_z_8%t(1) = Ztop
c
c               - - - - - - - - - Ver_z_8%m(1)
c
c               ================= Ver_z_8%t(2) = ( Ver_z_8%m(2) + Ver_z_8%m(1) ) / 2
c
c               - - - - - - - - - Ver_z_8%m(2)
c
c                      ...
c
c               - - - - - - - - - Ver_z_8%m(G_nk-1)
c
c               ================= Ver_z_8%t(G_nk) = ( Ver_z_8%m(nk) + Ver_z_8%m(nk-1) ) / 2
c
c               - - - - - - - - - Ver_z_8%m(G_nk)
c               o o o o o o o o o Special level 
c model surface ================= Ver_z_8%t(G_nk+1) = Zsurf
c
c               vvvvvvvvvvvvvvvvv Ver_z_8%m(G_nk+1) Virtual level
c
* arguments
* F_kcode- in - code to determine formula for staggered vert. levels
* F_am_8 - out- A on special momentum levels
* F_bm_8 - out- B on special momentum levels
* F_at_8 - out- A on special thermo levels
* F_bt_8 - out- B on special thermo levels
* F_hybm_8-in - defined levels from user
* F_ptop_8-in - ptop in pascals
* F_pref_8-in - pref in pascals
* F_rcoef -in - RCOEF
* NK      -in - number of vertical levels defined in F_hybm_8
c none
c
#include "glb_ld.cdk"
#include "lun.cdk"
#include "cstv.cdk"
c
      integer k
      real*8 pr1, etatop_8,  ztop_8
      real*8 eta_pi_8,eta_8
c     __________________________________________________________________
c
c     BEWARE
c     if F_coef is greater than 1., pref is subject to restriction for
c     stability reasons.
c
      ztop_8  = log(F_ptop_8)
c
      etatop_8=ztop_8/log(F_pref_8)
c
c     ----------------------------------------------------------
c    |                                                          |
c    |   Set A, B and Z for momentum and thermodynamic levels   |
c    |                                                          |
c    |   according to the formula:   Z = A(eta) + B(eta)*Zsrf   |
c    |                                                          |
c     ----------------------------------------------------------
c
c     Momentum levels
      pr1 = 1.0d0/(1.0d0 - etatop_8)
      do k = 1, Nk
         eta_pi_8=F_hybm_8(k)
         eta_8=log(eta_pi_8*F_pref_8)/log(F_pref_8)
         F_bm_8(k) = ((eta_8- etatop_8)*pr1 ) ** F_rcoef
         F_am_8(k) = log(F_pref_8) * ( eta_8- F_bm_8(k))
      enddo
c     Special momentum levels for vert int.
      F_am_8(Nk+1) = 0.d0 
      F_bm_8(Nk+1) = 1.d0 
      

c     Thermodynamic levels

      do k = 2, Nk
         F_bt_8(k)    = 0.5d0*(F_bm_8(k)   +F_bm_8(k-1)) 
         F_at_8(k)    = 0.5d0*(F_am_8(k)   +F_am_8(k-1)) 
      enddo

c     Special thermo levels for vert int.
      F_bt_8(1)     = 0.5d0*(F_bm_8(1) + 0.d0)
      F_bt_8(Nk+1)  = 0.5d0*(F_bm_8(Nk) + 1.d0)
      F_bt_8(Nk+2)  = 1.d0
      F_at_8(1)     = 0.5d0*(F_am_8(1) + ztop_8)
      F_at_8(Nk+1)  = 0.5d0*(F_am_8(Nk) + 0.0d0)
      F_at_8(Nk+2)  = 0.d0

      return
      end
