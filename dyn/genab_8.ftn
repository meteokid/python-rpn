!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
c  s/r genab_8  - Generates A and B of the hybrid coordinate for vertical interpolation
c
#include "model_macros_f.h"
c
      subroutine genab_8 (F_am_8,F_bm_8,F_at_8,F_bt_8,
     %                    F_hyb, F_ptop_8,F_pref_8,F_rcoef,NK)
      implicit none
      
      integer NK
      real F_rcoef(2)
      real*8 F_ptop_8,F_pref_8
      real F_hyb(NK)
      real*8 F_am_8(*), F_bm_8(*)
      real*8 F_at_8(*), F_bt_8(*)
c
c authors
c      A. Plante & C. Girard - CMC - janvier 2008
c
c revision
c
c object
c    To return A, B parameters for momentum and thermodynamic levels
c    These levels are used for VERTICAL INTERPOLATION
c    Some are SPECIAL levels
c
c         Ztop  ================= 
c               o o o o o o o o o Ver_z_8%t(1) = ( Ver_z_8%m(1) + Ztop ) / 2
c               - - - - - - - - - Ver_z_8%m(1)
c
c               ================= Ver_z_8%t(2) = ( Ver_z_8%m(2) + Ver_z_8%m(1) ) / 2
c
c               - - - - - - - - - Ver_z_8%m(2)
c
c                      ...
c
c               - - - - - - - - - Ver_z_8%m(NK-1)
c
c               ================= Ver_z_8%t(NK) = ( Ver_z_8%m(nk) + Ver_z_8%m(nk-1) ) / 2
c
c               - - - - - - - - - Ver_z_8%m(NK)
c               o o o o o o o o o Ver_z_8%t(NK+1) = ( Ver_z_8%m(NK+1) + Zsrf ) / 2
c         Zsrf  ================= Ver_z_8%m(NK+1)= Ver_z_8%t(NK+2)
c
* arguments
* F_am_8 - out- A on special momentum levels
* F_bm_8 - out- B on special momentum levels
* F_at_8 - out- A on special thermo levels
* F_bt_8 - out- B on special thermo levels
* F_hyb  - in - defined levels from user
* F_ptop_8-in - ptop in pascals
* F_pref_8-in - pref in pascals
* F_rcoef -in - RCOEF(2)
* NK      -in - number of momentum levels defined in F_hyb
c none
c
#include "glb_ld.cdk"
#include "lun.cdk"
c
      integer k
      real rcoef
      real*8 pr1, ztop_8, zsrf_8, eta_8, zeta_8
c     __________________________________________________________________
c
      ztop_8  = log(F_ptop_8)
      zsrf_8  = log(F_pref_8)
c
c     ------------------------------------------------------------
c    |                                                            |
c    |   Set A and B for momentum and thermodynamic levels        |
c    |                                                            |
c    |   according to the formulae:                               |
c    |                                                            |
c    |                Z = Zsrf + log(hyb)                         |
c    |                                                            |
c    |                B = (Z - Ztop)/(Zsrf-Ztop)**R               |
c    |                                                            |
c    |                A = Z                                       |
c    |                                                            |
c    |                R = Rmax-(Rmax-Rmin)*(Z - Ztop)/(Zsrf-Ztop) |
c    |                                                            |
c     ------------------------------------------------------------
c
c     Momentum levels
c
      pr1 = 1.0d0/(zsrf_8 - ztop_8)
      do k = 1, Nk
         zeta_8  = zsrf_8+log(F_hyb(k))
          eta_8  = (zeta_8- ztop_8)*pr1
         rcoef   = F_rcoef(2)-(F_rcoef(2)-F_rcoef(1))*eta_8
         F_bm_8(k) = eta_8 ** rcoef
         F_am_8(k) = zeta_8
      enddo

c     Special momentum levels for vert int.
      F_am_8(Nk+1) = zsrf_8
      F_bm_8(Nk+1) = 1.d0 
      

c     Thermodynamic levels

      do k = 2, Nk
         F_bt_8(k)    = 0.5d0*(F_bm_8(k)   +F_bm_8(k-1)) 
         F_at_8(k)    = 0.5d0*(F_am_8(k)   +F_am_8(k-1)) 
      enddo

c     Special thermo levels for vert int.
      F_bt_8(1)     = 0.5d0*(F_bm_8(1) + 0.d0)
      F_bt_8(Nk+1)  = 0.5d0*(F_bm_8(Nk) + 1.d0)
      F_bt_8(Nk+2)  = 1.d0
      F_at_8(1)     = 0.5d0*(F_am_8( 1) + ztop_8)
      F_at_8(Nk+1)  = 0.5d0*(F_am_8(Nk) + zsrf_8)
      F_at_8(Nk+2)  = zsrf_8

      return
      end
