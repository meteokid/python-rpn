***s/r adw_main_tl - TLM of adw_main
*
#include <model_macros_f.h>
*
      subroutine adw_main_tl ( F_it )
*
#include "impnone.cdk"
*
      integer F_it
*
*author
*     monique tanguay
*
*revision
* v2_31 - Tanguay M.        - initial MPI version
* v3_00 - Tanguay M.        - adapt to restructured adw_main 
*
*language
*     fortran 77
*
*object
*     see id section
*
*arguments
*______________________________________________________________________
*        |                                                       |     |
* NAME   | DESCRIPTION                                           | I/O |
*--------|-------------------------------------------------------|-----|
* F_it   | total number of iterations for trajectories           |  i  |
*________|_______________________________________________________|_____|
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "adw.cdk"
************************************************************************
      integer nijkag
      real , dimension (Adw_nit*Adw_njt*l_nk) :: u,v,w
      real , dimension (Adw_nit*Adw_njt*l_nk) :: um,vm,wm
*
      nijkag = Adw_nit*Adw_njt*l_nk
************************************************************************
      if (Lun_debug_L) write (Lun_out,1000)
*
************************************************************************
*
*     TRAJECTORY
*     ----------
      call adw_main_1_wnd_tr ( um, vm, wm, Adw_nit, Adw_njt, l_nk) 
*
*     TLM
*     ---
      call adw_main_1_wnd ( u, v, w, Adw_nit, Adw_njt, l_nk)
*
*     TLM and TRAJECTORY
*     ------------------
      call adw_main_2_pos_tl ( F_it, u, v, w, um, vm, wm )
*
*     TLM and TRAJECTORY
*     ------------------
      call adw_main_3_int_tl ( u, v, w, um, vm, wm )
*
***********************************************************************
*
 1000  format(3X,'TLM of ADVECTE THE RIGHT-HAND-SIDES: (S/R ADW_MAIN_TL)')
*
      return
      end
