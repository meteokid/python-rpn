!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r hdif_phy - Execute horizontal diffusions and physics 
*
#include "model_macros_f.h"
*
      subroutine hdif_phy ()
*
      implicit none
*
*author M.Tanguay
*
*revision
* v3_03 - Tanguay M.        - initial MPI version
* v3_10 - Corbeil & Desgagne & Lee - AIXport+Opti+OpenMP
* v3_30 - Desgagne/Lee      - new physics interface + extra nesting 
* v4_04 - Plante A.         - move hspng_main/hspng_drv in vspng_main
* v4_04 - Tanguay M.        - Staggered version TL/AD
*
*object
*     see id section
*
*arguments
*
*implicits
#include "glb_ld.cdk"
#include "schm.cdk"
#include "lctl.cdk"
#include "ifd.cdk"
*
*     ---------------------------------------------------------------
*
      if ( Schm_hdlast_L ) then
*
         call itf_phy_main (Lctl_step)
         call hzd_main ()
*
      else
*
         call hzd_main ()
         call itf_phy_main (Lctl_step)
*
      endif
*
      if (G_lam .and. ifd_bcsphy_L) then
* Update Lateral BCs with data that has seen physics
         call nest_update
* Impose Lateral BCs within Pil regions
         call nest_bcs
      endif
*
      if ( .not. Schm_phyms_L ) call dummy_diag ()
*
*     ---------------------------------------------------------------
*
      return
      end
