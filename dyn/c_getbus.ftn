***s/r c_getbus - Get the slice workspace variable from the physics
*
#include "model_macros_f.h"
*
      SUBROUTINE c_getbus ( F_busdyn, F_busper, F_busvol, F_jdo)
*
      IMPLICIT NONE
*
      INTEGER F_jdo
      REAL F_busdyn(*), F_busper(*), F_busvol(*)
*
*author 
*     Pierre Pellerin - rpn - December 2004
*
*revision
* v3_21 - Sophie Valcke - rpn/cerfacs - April 2005
*
*object
*     Extract surface fields for the coupling
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_busper      I       - permanent bus
* F_busvol      I       - volatile bus
* F_jdo         I       - slice number being processed
*----------------------------------------------------------------
*
*implicits
#include "glb_ld.cdk"
#include "p_bus.cdk"
#include "busind.cdk"
#include "c_cplg.cdk"
*
      INTEGER i, n, ii, indx, idep, il_cnt, il_deb, l_ninj, l_niFjm1
      INTEGER il_n, il_nkm1
*
**
*     ---------------------------------------------------------------
*
*C    2D variables: extract row F_jdo 
*
      il_cnt = 0
      il_n = 2
      l_ninj = l_ni*l_nj
      il_nkm1 = l_ninj*(G_nk)
      l_niFjm1 = l_ni*(F_jdo-1)
      IF (lg_atmos) THEN
          IF (iga_n_tja(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_tja(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busper(tdiag+indx)
              END DO
          ENDIF
          IF (iga_n_uda(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_uda(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busper(udiag+indx)
              END DO
          ENDIF
          IF (iga_n_vda(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_vda(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busper(vdiag+indx)
              END DO
          ENDIF
          IF (iga_n_t8a(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_t8a(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busdyn(tmoins+il_nkm1+indx)
              END DO
          ENDIF
          IF (iga_n_u8a(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_u8a(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busdyn(umoins+il_nkm1+indx)
              END DO
          ENDIF
          IF (iga_n_v8a(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_v8a(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busdyn(vmoins+il_nkm1+indx)
              END DO
          ENDIF
          IF (iga_n_dqa(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_dqa(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busper(qdiag+indx)
              END DO
          ENDIF
          IF (iga_n_p8a(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_p8a(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busdyn(pmoins+indx)
              END DO
          ENDIF
          IF (iga_n_h8a(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_h8a(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busdyn(humoins+il_nkm1+indx)
              END DO
          ENDIF
          IF (iga_n_fba(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_fba(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busper(flusolis+indx)
              END DO
          ENDIF
          IF (iga_n_fia(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_fia(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busper(fdsi+indx)
              END DO
          ENDIF
          IF (iga_n_rta(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_rta(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busvol(rt+indx)
              END DO
          ENDIF
          IF (iga_n_mca(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_mca(il_n)-1) + l_niFjm1
C             This field (coupling mask) will be redefined in c_set_coupling
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = 0.0
              END DO
          ENDIF
      ENDIF
c
      IF (lg_ocean .and. .not. lg_atmos) THEN

          IF (iga_n_glw(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_glw(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busper(glsea+indx)
              END DO
          ENDIF
          IF (iga_n_i8w(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_i8w(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busper(icedp+indx)
              END DO
          ENDIF
          IF (iga_n_i7w(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_i7w(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
C             Get sea ice temperature at snow-air interface (1st cat)
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busper(tmice+indx)
              END DO
          ENDIF
          IF (iga_n_tmw(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_tmw(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busper(twater+indx)
              END DO
          ENDIF
          IF (iga_n_fcw(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_fcw(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
C             Get value over water
              idep=(ig_indx_water-1)*p_ni
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busvol(fc+idep+indx)
              END DO
          ENDIF
          IF (iga_n_fvw(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_fvw(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
C             Get value over water
              idep=(ig_indx_water-1)*p_ni
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busvol(fv+idep+indx)
              END DO
          ENDIF
CSV
CSV  Add bmw, alw, tgw
CSV
          IF (iga_n_mcw(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_mcw(il_n)-1) + l_niFjm1
C             This field (coupling mask) will be redefined in c_set_coupling
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = 0.0
              END DO
          ENDIF
C
          IF (iga_n_fci(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_fci(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
C             Get value over ice
              idep=(ig_indx_ice-1)*p_ni
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busvol(fc+idep+indx)
              END DO
          ENDIF
C
          IF (iga_n_fvi(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_fvi(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
C             Get value over ice
              idep=(ig_indx_ice-1)*p_ni
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busvol(fv+idep+indx)
              END DO
          ENDIF
CSV
CSV  Add bmi, ali, tgi
CSV
          IF (iga_n_mci(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_mci(il_n)-1) + l_niFjm1
C             This field (coupling mask) will be redefined in c_set_coupling
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = 0.0
              END DO
          ENDIF
      ENDIF

      IF (lg_land .and. .not. lg_atmos) THEN
          IF (iga_n_fcl(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_fcl(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
C             Get value over soil
              idep=(ig_indx_soil-1)*p_ni
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busvol(fc+idep+indx)
              END DO
          ENDIF
          IF (iga_n_fvl(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_fvl(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
C             Get value over soil
              idep=(ig_indx_soil-1)*p_ni
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busvol(fv+idep+indx)
              END DO
          ENDIF
CSV
CSV  Add bml, all, tgl
CSV
          IF (iga_n_mcl(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_mcl(il_n)-1) + l_niFjm1
C             This field (coupling mask) will be redefined in c_set_coupling
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = 0.0
              END DO
          ENDIF
C
          IF (iga_n_fcg(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_fcg(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
C             Get value over glaciers
              idep=(ig_indx_glacier-1)*p_ni
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busvol(fc+idep+indx)
              END DO
          ENDIF
          IF (iga_n_fvg(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_fvg(il_n)-1) + l_niFjm1
              il_cnt = il_cnt + 1
C             Get value over glaciers
              idep=(ig_indx_glacier-1)*p_ni
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = F_busvol(fv+idep+indx)
              END DO
          ENDIF
CSV
CSV  Add bmg, alg, tgg
CSV
          IF (iga_n_mcg(il_n) .gt. 0) THEN
              il_deb = l_ninj*(iga_n_mcg(il_n)-1) + l_niFjm1
C             This field (coupling mask) will be redefined in c_set_coupling
              il_cnt = il_cnt + 1
              DO i= 1, p_ni
                indx = i-1
                ii = i + p_offi
                rga_cpl2phy(il_deb+ii) = 0.0
              END DO
          ENDIF
      ENDIF
C
*
*     ---------------------------------------------------------------
*
      RETURN
      END

      
      
