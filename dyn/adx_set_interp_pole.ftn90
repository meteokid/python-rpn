!-------------------------------------- LICENCE BEGIN -------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END ---------------------------
#include "constants.h"
#include "msg.h"

!/**
subroutine adx_set_interp_pole()
   implicit none
   !@objective set 1-D interpolation of grid reflexion across the pole 
   !@author  alain patoine
   !@revisions
   !**/
#include "adx_dims.cdk"
#include "adx_grid.cdk"
#include "adx_poles.cdk"
   integer :: istat, i, i2
   !---------------------------------------------------------------------
   allocate( &
        adx_iln(adx_gni), &
        adx_lnr_8(adx_gni), &
        stat = istat)
   call handle_error_l(istat==0,'adx_set_interp_pole','problem allocating mem')

   do i = 1,adx_gni
      if (adx_xg_8(i) < adx_xg_8(1) + CONST_PI_8) then
         adx_lnr_8(i) = adx_xg_8(i) + CONST_PI_8
      else
         adx_lnr_8(i) = adx_xg_8(i) - CONST_PI_8
      endif
      do i2 = 1,adx_gni     
         adx_iln(i) = i2
         if (adx_lnr_8(i) >= adx_xg_8(i2) .and.  &
              adx_lnr_8(i) < adx_xg_8(i2+1) ) exit
      enddo
   enddo
   !---------------------------------------------------------------------
   return
end subroutine adx_set_interp_pole
