***s/r e_intwind - Wind components horizontal interpolation
*
#include <model_macros_f.h>
*
      subroutine e_intwind 
      implicit none
*
*author       M ROCH     - july 95 - from intvent
*
*revision
* v2_30 - Sandrine Edouard  - adapt for vertical hybrid coordinate
* v2_30 - L. Corbeil        - replaced ecriseq by BMF stuff, 
* v2_30                       removed vertical interpolation
* v2_31 - M. Desgagne       - removed toppu,toppv from calling 
* v2_31                       sequence and corrected date/time recording
* v3_00 - Desgagne & Lee    - Lam configuration
* v3_01 - Lee V.            - new ip1 encoding (kind=5 -- unnormalized)
*
*object
*        see above ID
*
*ARGUMENTS
*
*IMPLICITS
#include "e_option.cdk"
#include "e_fu.cdk"
#include "e_anal.cdk"
#include "e_grids.cdk"
#include "e_cdate.cdk"
#include "e_topo.cdk"
#include "dcst.cdk"
#include "grd.cdk"
#include "bmf.cdk"
#include "hgc.cdk"
*
      integer  ezqkdef,ezdefset,ezsetopt,ezuvint,
     $         fstinf,fstlir,fstprm,e_rdhint3
      external ezqkdef,ezdefset,ezsetopt,ezuvint,
     $         fstinf,fstlir,fstprm,e_rdhint3
*
      integer i, j, k, src_gid, key1, key2, nic, njc, ni1, nj1, 
     $        nk1,nkc,err,iu,ju,iv,jv,nu,nv
      integer dte, det, ipas, p1, p2, p3, g1, g2, g3, g4, bit,
     $        dty, swa, lng, dlf, ubc, ex1, ex2, ex3
      character*1 typ,grd
      character*4 var,var_uu,var_vv
      character*12 lab
      logical flag_ut1
      real uu(niu*nju),vw(niu*nju),vv(niv*njv),uw(niv*njv),
     $     ttu(niu*nju),huu(niu*nju),ttv(niv*njv),huv(niv*njv),
     $     uvw(niu*nju), c1
      real, dimension (:), allocatable :: w1,w2
*
* ---------------------------------------------------------------------
*
      nu = niu*nju
      nv = niv*njv
*
      if (anal_hav(1).eq.0) then
*
* ---------------------------------------------------------------------
*        NO INTERPOLATION REQUIRED
*        ANALYSIS and MODEL HAVE SAME GRID,SAME LEVELS,
*                                SAME TOPOGRAPHY, TOP PRESSURE
*---------------------------------------------------------------------
*        
         if (LAM) then
*
            do k=1,lv               
               key1 = fstlir(uu,e_fu_anal,iu,ju,nkc,datev,' ',na(k),
     $                                         ip2a,ip3a,tva,'UT1')
               if (key1.lt.0 .or. iu.ne.niu .or. ju.ne.nju) then
                   write(6,*)'e_intwind: UT1  NOT AVAILABLE'
                   goto 55
               endif
               key1 = fstlir(vv,e_fu_anal,iv,jv,nkc,datev,' ',na(k),
     $                                         ip2a,ip3a,tva,'VT1')
               if (key1.lt.0 .or. iv.ne.niv .or. jv.ne.njv) then
                  write(6,*)'e_intwind: VT1  NOT AVAILABLE'
                  goto 55
               endif
               do i=1,niu*nju
                  uu(i) = uu(i) / dcst_knams_8
               end do
               do i=1,niv*njv
                  vv(i) = vv(i) / dcst_knams_8
               end do
               call e_bmfsplitxy2 (uu,niu,nju,'UU  ',k,lv,pniu,0,0,0)
               call e_bmfsplitxy2 (vv,niv,njv,'VV  ',k,lv,pni ,0,0,0)
            end do
*
         else
*
            flag_ut1 = .false.
            var_uu = 'UU  '
            var_vv = 'VV  '
            iu = nifi
            ju = njfi
            iv = iu
            jv = ju
            key1 = fstinf (e_fu_anal,nic,njc,nkc,datev,' ',na(1),
     $                                      ip2a,ip3a,' ',var_uu)
            key2 = fstinf (e_fu_anal,nic,njc,nkc,datev,' ',na(1),
     $                                      ip2a,ip3a,' ',var_vv)
            if ((key1.lt.0).or.(key2.lt.0)) then
               flag_ut1 = .true.
               var_uu = 'UT1 '
               var_vv = 'VT1 '
               iu = niu
               ju = nju
               iv = niv
               jv = njv
               key1 = fstinf (e_fu_anal,nic,njc,nkc,datev,' ',na(1),
     $                                         ip2a,ip3a,' ',var_uu)
               key2 = fstinf (e_fu_anal,nic,njc,nkc,datev,' ',na(1),
     $                                         ip2a,ip3a,' ',var_vv)
            endif
*
            if ((key1.lt.0).or.(key2.lt.0)) then
               write (6,*) 'UU  and/or VV NOT AVAILABLE'
               call e_arret( 'e_intwind' )
            endif
            err = fstprm (key1, DTE, DET, IPAS, ni1, nj1, nk1, BIT, DTY,
     $              P1, P2, P3, TYP, VAR, LAB, GRD, G1, G2, G3, G4, SWA,
     $              LNG, DLF, UBC, EX1, EX2, EX3)
*
            do k=1,lv
               key1 = fstlir (uu, e_fu_anal, i, j, nkc, datev, labanl, 
     $                                  na(k), ip2a,ip3a, tva, var_uu)
               if (key1.lt.0 .or. i.ne.iu  .or. j.ne.ju) then
                  write(6,*)'ERROR: UU NOT AVAILABLE,'
                  call e_arret( 'e_intwind' )
               endif
               key1 = fstlir (vw, e_fu_anal, i, j, nkc, datev, labanl, 
     $                                  na(k), ip2a,ip3a, tva, var_vv)
               if (key1.lt.0 .or. i.ne.iv  .or. j.ne.jv) then
                  write(6,*)'ERROR: VV NOT AVAILABLE,'
                  call e_arret( 'e_intwind' )
               endif
*
               if (.not. flag_ut1) then
                  call e_arak (uu, vv, vw, uvw, niu, njfi, nju, njv, 1)
               else
                  do i=1,niu*nju
                     uu(i) = uu(i) / dcst_knams_8
                  end do
                  do i=1,niv*njv
                     vv(i) = vw(i) / dcst_knams_8
                  end do
               endif
               call e_bmfsplitxy2 (uu,niu,nju,'UU  ',k,lv,pniu,0,0,0)
               call e_bmfsplitxy2 (vv,niv,njv,'VV  ',k,lv,pni ,0,0,0)
            end do
*
         endif
*
*---------------------------------------------------------------------
*
*     INTERPOLATION REQUIRED
*
*---------------------------------------------------------------------
*
      else
*
         key1=fstinf(e_fu_anal,nic,njc,nkc,datev,' ',na(1),ip2a,ip3a,
     $                                                     ' ','UU')
         err= fstprm (key1, DTE, DET, IPAS, ni1, nj1, nk1, BIT, DTY, P1,
     $                P2, P3, TYP, VAR, LAB, GRD, G1, G2, G3, G4, SWA,
     $                LNG, DLF, UBC, EX1, EX2, EX3)
         src_gid = ezqkdef (nic, njc, GRD, g1, g2, g3, g4, e_fu_anal)
         err = ezsetopt ('INTERP_DEGREE', 'CUBIC')
         allocate (w1(nic*njc),w2(nic*njc))
         do k=1,lv
*
            key1 = fstlir (w1, e_fu_anal, iu, ju, nkc, datev, ' ', 
     $                               na(k), ip2a, ip3a, ' ', 'UU')
            key2 = fstlir (w2, e_fu_anal, iv, jv, nkc, datev, ' ', 
     $                               na(k), ip2a, ip3a, ' ', 'VV')
            if (key1.lt.0 .or. iu.ne.nic  .or. ju.ne.njc ) then
               write(6,*)'ERROR: UU NOT AVAILABLE,'
               goto 55
            endif
            if (key1.lt.0 .or. iv.ne.nic  .or. jv.ne.njc ) then
               write(6,*)'ERROR: VV NOT AVAILABLE,'
               goto 55
            endif
*
*         Horizontal Interpolation on U grid and V grids
*
            err = ezdefset ( dstu_gid, src_gid )
            err = ezuvint  ( uu,vw,w1,w2 )
            err = ezdefset ( dstv_gid, src_gid )
            err = ezuvint  ( uw,vv,w1,w2 )
*
            call e_bmfsplitxy2 (uu,niu,nju,'UU  ',k,lv,pniu,0,0,0)
            call e_bmfsplitxy2 (vv,niv,njv,'VV  ',k,lv,pni ,0,0,0)
*
         end do
         deallocate (w1,w2)
*
*---------------------------------------------------------------------
      endif
*---------------------------------------------------------------------
*
      if ( gletaanl .or. glsiganl .or. glhybanl ) then
         write(6,*)'PREPARATION FOR SIGMA/ETA/HYB to HYBRID'
         c1 = 10. * Dcst_grav_8
         if (e_rdhint3 (ttu,dstu_gid,niu,nju,'GZ  ',na(lv),ip2a,ip3a,
     $         ' ',tva,.true.,.true.,'CUBIC',e_fu_anal,6).lt.0) goto 55
         if (e_rdhint3 (ttv,dstv_gid,niv,njv,'GZ  ',na(lv),ip2a,ip3a,
     $         ' ',tva,.true.,.true.,'CUBIC',e_fu_anal,6).lt.0) goto 55
         if (e_rdhint3 (huu,dstu_gid,niu,nju,'P0  ',   0 ,ip2a,ip3a,
     $         ' ',tva,.true.,.true.,'CUBIC',e_fu_anal,6).lt.0) goto 55
         if (e_rdhint3 (huv,dstv_gid,niv,njv,'P0  ',   0 ,ip2a,ip3a,
     $         ' ',tva,.true.,.true.,'CUBIC',e_fu_anal,6).lt.0) goto 55
         do i=1,nu
            ttu(i) = ttu(i) * c1
            huu(i) = huu(i) * 100.
         enddo
         do i=1,nv
            ttv(i) = ttv(i) * c1
            huv(i) = huv(i) * 100.
         enddo
*
         call e_bmfsplitxy2 (ttu,niu,nju,'GZU ',1,1,pniu,0,0,0)
         call e_bmfsplitxy2 (ttv,niv,njv,'GZV ',1,1,pni ,0,0,0)
         call e_bmfsplitxy2 (huu,niu,nju,'APSU',1,1,pniu,0,0,0)
         call e_bmfsplitxy2 (huv,niv,njv,'APSV',1,1,pni ,0,0,0)
*
         var=vt//'  '
         c1 = Dcst_tcdk_8
         do k=1,lv
            if (e_rdhint3 (ttu,dstu_gid,niu,nju,var,na(k),ip2a,ip3a,
     $         ' ',tva,.true.,.true.,'CUBIC',e_fu_anal,6).lt.0) goto 55
            if (e_rdhint3 (ttv,dstv_gid,niv,njv,var,na(k),ip2a,ip3a,
     $         ' ',tva,.true.,.true.,'CUBIC',e_fu_anal,6).lt.0) goto 55
            do i=1,nu
               ttu(i) = ttu(i) + c1
            enddo
            do i=1,nv
               ttv(i) = ttv(i) + c1
            enddo
            if (vt.eq.'TT') then
               if (e_rdhint3 (huu,dstu_gid,niu,nju,'HU  ',na(k),ip2a,
     $            ip3a,' ',tva,.true.,.true.,'CUBIC',e_fu_anal,6).lt.0)
     $             goto 55
               if (e_rdhint3 (huv,dstv_gid,niv,njv,'HU  ',na(k),ip2a,
     $            ip3a,' ',tva,.true.,.true.,'CUBIC',e_fu_anal,6).lt.0)
     $             goto 55
               call mfotvt (ttu,ttu,huu,niu*nju,1,niu*nju)
               call mfotvt (ttv,ttv,huv,niv*njv,1,niv*njv)
            endif
            call e_bmfsplitxy2 (ttu,niu,nju,'VTU ',k,lv,pniu,0,0,0)
            call e_bmfsplitxy2 (ttv,niv,njv,'VTV ',k,lv,pni ,0,0,0)
         end do
*
      else
*
         write(6,*)'PREPARATION FOR PRESSURE to HYBRID'
         c1 = 10.
         do k=1,lv
            if (e_rdhint3 (ttu,dstu_gid,niu,nju,'GZ  ',na(k),ip2a,ip3a,
     $         ' ',tva,.true.,.true.,'CUBIC',e_fu_anal,6).lt.0) goto 55
            if (e_rdhint3 (ttv,dstv_gid,niv,njv,'GZ  ',na(k),ip2a,ip3a,
     $         ' ',tva,.true.,.true.,'CUBIC',e_fu_anal,6).lt.0) goto 55
            do i=1,nu
               ttu(i) = ttu(i) * c1
            enddo
            do i=1,nv
               ttv(i) = ttv(i) * c1
            enddo
            call e_bmfsplitxy2 (ttu,niu,nju,'GZU ',k,lv,pniu,0,0,0)
            call e_bmfsplitxy2 (ttv,niv,njv,'GZV ',k,lv,pni ,0,0,0)
         enddo
*
      endif
*
      goto 99
 55   call e_arret( 'e_intwind' )
*
* ---------------------------------------------------------------------
*
 99   return
      end
