!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r adw_ckbd - check if upstream points from north and south 
*                 pe's for which an interpolation is requested are 
*                 inside own advection source grid
*
#include "model_macros_f.h"
*
      subroutine adw_ckbd ( F_y )
*
#include "impnone.cdk"
*
      real    F_y ( * )
*
*author
*     alain patoine
*
*revision
* v3_10 - Corbeil & Desgagne & Lee - AIXport+Opti+OpenMP
*
*language
*     fortran 77
*
*object
*     see id section
*
*arguments
*______________________________________________________________________
*              |                                                 |     |
* NAME         | DESCRIPTION                                     | I/O |
*--------------|-------------------------------------------------|-----|
* F_y          | y upstream positions                            |  i  |
*______________|_________________________________________________|_____|
*
*notes
*______________________________________________________________________
*                                                                      |
* The positions are strored in the following manner:                   |
*                                                                      |
* Adw_fro_n values followed by Adw_fro_s values = Adw_fro_a values     |
* ---------                    ---------          ---------            |
*______________________________________________________________________|

*implicits
#include "glb_ld.cdk"
#include "geomg.cdk"
#include "adw.cdk"
************************************************************************
      integer n
************************************************************************
!$omp parallel
!$omp do
      do n = 1,Adw_fro_n
      if ( F_y(n).le.Adw_yy_8(2) ) then
         print *,'*************************************************'
         print *,'*                                               *'
         print *,'* PROBLEM:  The upstream point from north pe    *'
         print *,'*           is south of advection source grid   *'
         print *,'*                                               *'
         print *,'*           South border  :',Adw_yy_8(2)
         print *,'*           Upstream point:',F_y(n)
         print *,'*************************************************'
         call flush(6)
         call gefstop('adw_ckbd')
      endif
      enddo
!$omp enddo
*
!$omp do
      do n = Adw_fro_n+1,Adw_fro_a
      if ( F_y(n).ge.Adw_yy_8(Adw_njt-1) ) then
         print *,'*************************************************'
         print *,'*                                               *'
         print *,'* PROBLEM:  The upstream point from south pe    *'
         print *,'*           is north of advection source grid   *'
         print *,'*                                               *'
         print *,'*           North border  :',Adw_yy_8(Adw_njt-1)
         print *,'*           Upstream point:',F_y(n)
         print *,'*************************************************'
         call flush(6)
         call gefstop('adw_ckbd')
      endif
      enddo
!$omp enddo
!$omp end parallel
*
      return
      end

