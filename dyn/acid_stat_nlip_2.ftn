!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r acid_stat_nlip_2 - gblstat for acid test

#include "model_macros_f.h"
*
      subroutine acid_stat_nlip_2(F_t,F_BsPq,F_nu,F_k,F_flag)
*
      implicit none
*
      real F_t(LDIST_SHAPE,G_nk+1),F_BsPq(LDIST_SHAPE,0:G_nk+1),
     $     F_nu(LDIST_SHAPE,G_nk)
*     
      integer F_flag,F_k
*
*author
*     Andre Plante
*     
*revision
*
*language
*     fortran 77
*
*object
*     glbstat for LAM acid test
*     Note : the acid test is conducted with one CPU.
*
*implicits
#include "lun.cdk"
#include "schm.cdk"
#include "glb_ld.cdk"
#include "acid.cdk"
*     
      if(F_flag.eq.1)then
         print *,'nlip_2:bef coriolis: acid k=',F_k
         call glbstat (F_t,'T',LDIST_DIM,G_nk+1,
     $        8+acid_i0,G_ni-7-acid_in,
     $        8+acid_j0,G_nj-8-acid_jn,
     $        F_k,F_k+1)
         call glbstat (F_BsPq,'BS',LDIST_DIM,G_nk+2,
     $        8+acid_i0,G_ni-7-acid_in,
     $        8+acid_j0,G_nj-8-acid_jn,
     $        F_k+1,F_k+1)
         call glbstat (F_nu,'NU',LDIST_DIM,G_nk,
     $        8+acid_i0,G_ni-8-acid_in,
     $        8+acid_j0,G_nj-8-acid_jn,
     $        F_k,F_k)
      elseif(F_flag.eq.2)then
         print *,'nlip_2:aft coriolis'
         call glbstat (F_nu,'NU',LDIST_DIM,G_nk,
     $        8+acid_i0,G_ni-8-acid_in,
     $        8+acid_j0,G_nj-8-acid_jn,
     $        F_k,F_k)
      elseif(F_flag.eq.3)then
         print *,'nlip_2:add nonhydro k= ',F_k
         call glbstat (F_nu,'NU',LDIST_DIM,G_nk,
     $        8+acid_i0,G_ni-8-acid_in,
     $        8+acid_j0,G_nj-8-acid_jn,
     $        F_k,F_k)
      elseif(F_flag.eq.4)then
         print *,'after filling zeros'
         call glbstat (F_nu,'NU',LDIST_DIM,G_nk,
     $        8+acid_i0,G_ni-8-acid_in,
     $        8+acid_j0,G_nj-8-acid_jn,
     $        1,G_nk)
      else
         print*,'flag=',F_flag
         call handle_error0('acid_stat_nlip_2','acid_stat_nlip_2 : error with flag',-1)
      endif

      return
      
      end
