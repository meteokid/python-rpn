***s/r hatoprg_ad - ADJ of hatoprg 
*
#include <model_macros_f.h>
*
      subroutine hatoprg_ad (F_gg, F_ff, F_w1, F_con, F_hz_8, DIST_DIM,Nk)
*
#include "impnone.cdk"
*
      integer DIST_DIM, Nk
      real F_gg(DIST_SHAPE,Nk),F_ff(DIST_SHAPE,Nk),F_w1(DIST_SHAPE,2),
     $     F_con
      real*8  F_hz_8(Nk)
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v3_00 - Tanguay M.        - adapt to restructured hatoprg 
*
*object
*     see id section
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
*  F_gg        O          resulting vertical integration
*  F_ff        I          input field to be integrated
*  F_w1                   work field
*  F_con       I          mutiplication coefficient
*  F_hz_8      I          intervals in z-direction
*----------------------------------------------------------------
*implicits 
#include "glb_ld.cdk"
*
      integer i, j, k
      real*8  ccc_8 
*
      real*8 ZERO_8 
      parameter (ZERO_8=0.0)
*
*     __________________________________________________________________
*
      do j= 1, l_nj
      do i= 1, l_ni
         F_w1(i,j,1) = F_gg(i,j,1) + F_w1(i,j,1)
         F_gg(i,j,1) = ZERO_8 
      end do
      end do
*
      do 100 k=1,G_nk-1

         ccc_8 = .5*F_con*F_hz_8(k)
         do j= 1, l_nj
         do i= 1, l_ni
            F_w1(i,j,2  ) = F_w1(i,j,1  ) + F_w1(i,j,2)
            F_w1(i,j,1  ) = F_gg(i,j,k+1) + F_w1(i,j,1)
            F_gg(i,j,k+1) = ZERO_8 
*
            F_ff(i,j,k+1) = ccc_8*( F_w1(i,j,2) ) + F_ff(i,j,k+1)
            F_ff(i,j,k  ) = ccc_8*( F_w1(i,j,2) ) + F_ff(i,j,k  )
            F_w1(i,j,2  ) = ZERO_8 
         end do
         end do

100   continue
*
      do j= 1, l_nj
      do i= 1, l_ni
         F_w1(i,j,1) = 0.0
      end do
      end do
*
      return
      end
