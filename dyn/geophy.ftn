***s/r
*
      subroutine geophy
#include "impnone.cdk"
*
*author   M.Desgagne June 2001
*
*revision
* v2_31 - V.Lee  -removed ni1,nj1,nk1, placed all fstprm calls to be
* v2_31           before allocation of memory
* v3_11 - V.Lee  -added qqexit(1) if program stops/goto 9876(aborts)
*
      integer fnom,fstouv,fstinf,fstinl,fstprm,fstluk,
     $        fstecr,fstfrm,fclos,fstopl,fstsel,fstlis,longueur
      external fnom,fstouv,fstinf,fstinl,fstprm,fstluk,
     $         fstecr,fstfrm,fclos,fstopl,fstsel,fstlis,longueur
*
      character*1  typ_S, grd_S
      character*2  var_S, nomvar_S(1000), nvar
      character*8  lab_S, lste_S(2)
      character*256 def1_S(2), def2_S(2), filename_S
      integer iun1,iun2
      parameter (iun1 = 51, iun2 = 52)
      integer dte, det, ipas, p1, p2, p3, g1, g2, g3, g4, bit,
     $        dty, swa, lng, dlf, ubc, ex1, ex2, ex3, ip3_ts,ip3
      integer i,j,key_i9,key_i7,ni,nj,nk,
     $        err,p1_1,p1_2,p1_3,key_ts1,key_ts2,key_tp
      integer, parameter :: nmax=4000
      real, dimension (:), allocatable :: w1
      real C2K,TCDK,TI7D
      parameter (TCDK=273.15, TI7D=271.2)
      integer nlis,lislon,header
      parameter (nlis = 1024)
      integer liste (nlis)
      data header /4/
      data lste_S,def1_S,def2_S /'anal.','geof.','','','',''/
*
*--------------------------------------------------------------------
*  
      call convip ( p1_1, 1., 3, 1, lab_S, .false. )
      call convip ( p1_2, 2., 3, 1, lab_S, .false. )
      call convip ( p1_3, 3., 3, 1, lab_S, .false. )
*
* SPECIAL NOTES:
*              err = fstopl ('IMAGE',.true.,.false.)
*     This option forces the data read to be exactly copied when
*     written out. If the field is 32 bits, then extra memory is
*     needed for the 128bit header. So the dynamic allocation 
*     is ni*nj + header in case the data is unpacked (32bits) or
*     to make sure there is enough memory, use "lng" from the fstprm.
*
*              err = fstopl ('IMAGE',.false.,.false.)
*     This is the default option where data read is not exactly
*     copied but can be manipulated to different values
*
      call ccard (lste_S, def1_S, def2_S, 2, err)
*
      if ((def2_S(1).ne."").and.(def2_S(1).ne." ")) then
*
*        fichier d'analyse
*
         if (fnom(iun2,def2_S(1),'RND+OLD',0).ge.0) then
            if (fstouv(iun2,'RND').lt.0) then
               write (6,8001) def2_S(1)
               call qqexit(1)
               stop
            endif
         else
            write (6,8000) def2_S(1)
            call qqexit(1)
            stop
         endif
*
         key_tp  = fstinf(iun2,ni,nj,nk,-1,' ',0   ,-1,-1,' ','TP')
         key_ts1 = fstinf(iun2,ni,nj,nk,-1,' ',p1_1,-1,-1,' ','I0')
         key_ts2 = fstinf(iun2,ni,nj,nk,-1,' ',p1_2,-1,-1,' ','I0')
*
* TS(1) - ts(1),ts(0) [C]
*
         if (key_ts1.lt.0) then
            ip3_ts  = -1
            key_ts1 = fstinf(iun2,ni,nj,nk,-1,' ',0,-1,ip3_ts,' ','TS')
            if (key_ts1.lt.0) then
               print*, 'TS(1) NOT AVAILABLE --ABORT--'
               goto 9876
            else
               write (6,210) 'TS',ip3_ts,'I0',p1_1
               err = fstopl ('IMAGE',.true.,.false.)
               err= fstprm (key_ts1, dte, det, ipas, ni, nj, nk, bit, dty,
     $              p1, p2, p3, typ_S, var_S, lab_S, grd_S, g1, g2, g3, 
     $              g4, swa, lng, dlf, ubc, ex1, ex2, ex3)
               allocate (w1(ni*nj+header))
               err= fstluk( w1, key_ts1, ni,nj,nk)      
               write(6,210) 'TS',ip3_ts,'TS',p1_1
               err= fstecr (w1, w1, -bit, iun2, dte, det, ipas, ni, nj,
     $                       1, p1_1, p2, 0, typ_S, "I0", lab_S, grd_S,
     $                      g1, g2, g3, g4, dty, .true.)
               deallocate (w1)
            endif
         endif
*
* TS(2) - ts(2), tp(0) [C]
*
         if (key_ts2.lt.0) then
            if (key_tp.lt.0) then
               print*, 'TP NOT AVAILABLE --ABORT--'
               goto 9876
            else
               key_ts2=key_tp
               write(6,210) 'TP',0,'I0',p1_2
            endif
            err = fstopl ('IMAGE',.true.,.false.)
            err= fstprm (key_ts2, dte, det, ipas, ni, nj, nk, bit, dty,
     $              p1, p2, p3, typ_S, var_S, lab_S, grd_S, g1, g2, g3, 
     $              g4, swa, lng, dlf, ubc, ex1, ex2, ex3)
            allocate (w1(ni*nj+header))
            err= fstluk( w1, key_ts2, ni,nj,nk)      
            err= fstecr (w1, w1, -bit, iun2, dte, det, ipas, ni, nj,
     $                    1, p1_2, p2, 0, typ_S, "I0", lab_S, grd_S,
     $                   g1, g2, g3, g4, dty, .true.)
            deallocate (w1)
         endif
*
* I7(1) - i7(1), i7(0), ts(1) [K]
*
         key_i7 = fstinf(iun2,ni,nj,nk,-1,' ',   p1_1,-1,-1,' ','I7')
         if (key_i7.lt.0) then
             key_i7 = fstinf(iun2,ni,nj,nk,-1,' ',  0,-1,-1,' ','I7')
             if (key_i7.lt.0) then
                 key_i7=key_ts1
                 write(6,210) 'TS',ip3_ts,'I7',p1_1
                 err = fstopl ('IMAGE',.false.,.false.)
                 err= fstprm (key_i7, dte, det, ipas, ni, nj, nk, bit, dty,
     $              p1, p2, p3, typ_S, var_S, lab_S, grd_S, g1, g2, g3, 
     $              g4, swa, lng, dlf, ubc, ex1, ex2, ex3)
                 allocate (w1(ni*nj))
                 err= fstluk( w1, key_i7, ni,nj,nk)    
                 C2K=TCDK
                 if (w1(1).gt.150.0) C2K=0.0
                 do i=1,ni*nj
                    w1(i)=w1(i)+C2K
                 enddo
             else
                 write(6,210) 'I7',0,'I7',p1_1
                 err = fstopl ('IMAGE',.true.,.false.)
                 err= fstprm (key_i7, dte, det, ipas, ni, nj, nk, bit, dty,
     $              p1, p2, p3, typ_S, var_S, lab_S, grd_S, g1, g2, g3, 
     $              g4, swa, lng, dlf, ubc, ex1, ex2, ex3)
                 allocate (w1(ni*nj+header))
                 err= fstluk( w1, key_i7, ni,nj,nk)      
             endif
             err= fstecr (w1, w1, -bit, iun2, dte, det, ipas, ni, nj,
     $              1, p1_1, p2, 0, typ_S, "I7", lab_S, grd_S,
     $              g1, g2, g3, g4, dty, .true.) 
             deallocate (w1)
         endif
*
* I7(2) - i7(2),tp(0) [K]
*
         key_i7 = fstinf(iun2,ni,nj,nk,-1,' ',   p1_2,-1,-1,' ','I7')
         if (key_i7.lt.0) then
             if (key_tp.lt.0) then
                 print*, 'NOR I7(2) NOR TP ARE AVAILABLE --ABORT--'
                 goto 9876
             else
                 key_i7=key_tp
             endif
             write(6,210) 'TP',0,'I7',p1_2
             err = fstopl ('IMAGE',.false.,.false.)
             err= fstprm (key_i7, dte, det, ipas, ni, nj, nk, bit, dty,
     $              p1, p2, p3, typ_S, var_S, lab_S, grd_S, g1, g2, g3, 
     $              g4, swa, lng, dlf, ubc, ex1, ex2, ex3)
             allocate (w1(ni*nj))
             err= fstluk( w1, key_i7, ni,nj,nk)      
             C2K=TCDK
             if (w1(1).gt.150.0) C2K=0.0
             do i=1,ni*nj
                w1(i)=w1(i)+C2K
             enddo
             err= fstecr (w1, w1, -bit, iun2, dte, det, ipas, ni, nj,
     $              1, p1_2, p2, 0, typ_S, "I7", lab_S, grd_S,
     $              g1, g2, g3, g4, dty, .true.) 
             deallocate (w1)
         endif
*
* I7(3) - i7(3),(tp(0)-271.2)/2 [K]
*
         key_i7 = fstinf(iun2,ni,nj,nk,-1,' ',   p1_3,-1,-1,' ','I7')
         if (key_i7.lt.0) then
             if (key_tp.lt.0) then
                 print*, 'NOR I7(3) NOR TP ARE AVAILABLE --ABORT--'
                 goto 9876
             else
                 key_i7=key_tp
             endif
             write(6,211) 'TP',0,'I7',p1_3
             err = fstopl ('IMAGE',.false.,.false.)
             err= fstprm (key_i7, dte, det, ipas, ni, nj, nk, bit, dty,
     $              p1, p2, p3, typ_S, var_S, lab_S, grd_S, g1, g2, g3, 
     $              g4, swa, lng, dlf, ubc, ex1, ex2, ex3)
             allocate (w1(ni*nj))
             err= fstluk( w1, key_i7, ni,nj,nk)      
             C2K=TCDK
             if (w1(1).gt.150.0) C2K=0.0
             do i=1,ni*nj
                w1(i)=(w1(i)+C2K+TI7D)*0.5
             enddo
             err= fstecr (w1, w1, -bit, iun2, dte, det, ipas, ni, nj,
     $              1, p1_3, p2, 0, typ_S, "I7", lab_S, grd_S,
     $              g1, g2, g3, g4, dty, .true.) 
             deallocate (w1)
         endif
*
* I9(1) - i9(1),ts(1) [K]
*
         key_i9 = fstinf(iun2,ni,nj,nk,-1,' ',p1_1,-1,-1,' ','I9')
         if (key_i9.lt.0) then
            nvar='I9'
            ip3  = 1
            key_i9 = fstinf(iun2,ni,nj,nk,-1,' ',0,-1,ip3,' ',nvar)
            if (key_i9.lt.0) then
                key_i9=key_ts1
                write(6,210) 'TS',ip3_ts,'I9',p1_1
                err = fstopl ('IMAGE',.false.,.false.)
                err= fstprm (key_i9, dte, det, ipas, ni, nj, nk, bit, dty,
     $              p1, p2, p3, typ_S, var_S, lab_S, grd_S, g1, g2, g3, 
     $              g4, swa, lng, dlf, ubc, ex1, ex2, ex3)
                allocate (w1(ni*nj))
                err= fstluk( w1, key_i9, ni,nj,nk)      
                C2K=TCDK
                if (w1(1).gt.150.0) C2K=0.0
                do i=1,ni*nj
                   w1(i)=w1(i)+C2K
                enddo
            else
                write(6,210) nvar,ip3,'I9',p1_1
                err = fstopl ('IMAGE',.true.,.false.)
                err= fstprm (key_i9, dte, det, ipas, ni, nj, nk, bit, dty,
     $              p1, p2, p3, typ_S, var_S, lab_S, grd_S, g1, g2, g3, 
     $              g4, swa, lng, dlf, ubc, ex1, ex2, ex3)
                allocate (w1(ni*nj+header))
                err= fstluk( w1, key_i9, ni,nj,nk)      
            endif
            err= fstecr (w1, w1, -bit, iun2, dte, det, ipas, ni, nj,
     $                    1, p1_1, p2, 0, typ_S, "I9", lab_S, grd_S,
     $                   g1, g2, g3, g4, dty, .true.)
            deallocate (w1)
         endif
*
* I9(1) - i9(1),tp(0) [K]
*
         key_i9 = fstinf(iun2,ni,nj,nk,-1,' ',p1_2,-1,-1,' ','I9')
         if (key_i9.lt.0) then
            nvar='I9'
            ip3  = 2
            key_i9 = fstinf(iun2,ni,nj,nk,-1,' ',0,-1,ip3,' ',nvar)
            if (key_i9.lt.0) then
                if (key_tp.lt.0) then
                    print*, 'NOR I9(2) NOR TP ARE AVAILABLE --ABORT--'
                    goto 9876
                else
                    key_i9=key_tp
                endif
                write(6,210) 'TP',0,'I9',p1_2
                err = fstopl ('IMAGE',.false.,.false.)
                err= fstprm (key_i9, dte, det, ipas, ni, nj, nk, bit, dty,
     $              p1, p2, p3, typ_S, var_S, lab_S, grd_S, g1, g2, g3, 
     $              g4, swa, lng, dlf, ubc, ex1, ex2, ex3)
                allocate (w1(ni*nj))
                err= fstluk( w1, key_i9, ni,nj,nk)      
                C2K=TCDK
                if (w1(1).gt.150.0) C2K=0.0
                do i=1,ni*nj
                   w1(i)=w1(i)+C2K
                enddo
            else
                write(6,210) nvar,ip3,'I9',p1_2
                err = fstopl ('IMAGE',.true.,.false.)
                err= fstprm (key_i9, dte, det, ipas, ni, nj, nk, bit, dty,
     $              p1, p2, p3, typ_S, var_S, lab_S, grd_S, g1, g2, g3, 
     $              g4, swa, lng, dlf, ubc, ex1, ex2, ex3)
                allocate (w1(ni*nj+header))
                err= fstluk( w1, key_i9, ni,nj,nk)     
            endif
            err= fstecr (w1, w1, -bit, iun2, dte, det, ipas, ni, nj,
     $                    1, p1_2, p2, 0, typ_S, "I9", lab_S, grd_S,
     $                   g1, g2, g3, g4, dty, .true.)
            deallocate (w1)
         endif
*     
         err = fstfrm(iun2)
         err = fclos(iun2)
*     
      endif
*
      if ((def2_S(2).ne."").and.(def2_S(2).ne." ")) then
         err = fstopl ('IMAGE',.true.,.false.)
*
*        fichier de champs geophysiques
*
         if (fnom(iun2,def2_S(2),'RND+OLD',0).ge.0) then
            if (fstouv(iun2,'RND').lt.0) then
               write (6,8001) def2_S(2)
               call qqexit(1)
               stop
            endif
         else
            write (6,8000) def2_S(2)
            call qqexit(1)
            stop
         endif
         filename_S = def2_S(2)(1:longueur(def2_S(2)))//'_cor'
*
         err = fnom  (iun1,filename_S,'RND',0)
         err = fstouv(iun1,'RND')
*
         err = fstinl (iun2,ni,nj,nk,-1,' ',-1,-1,-1,' ',' ',
     $                                        liste,lislon,nlis)
         do i=1,lislon
            err= fstprm (liste(i), dte, det, ipas, ni, nj, nk, bit, 
     $           dty, p1, p2, p3, typ_S, var_S, lab_S, grd_S, g1, g2, 
     $           g3, g4, swa, lng, dlf, ubc, ex1, ex2, ex3)
            allocate (w1(ni*nj+header))
            err= fstluk( w1, liste(i), ni,nj,nk) 
            if ((var_S.eq.'>>').or.(var_S.eq.'^^')) goto 88
            if (p1.gt.0) then
               p2 = p1
               p1 = 0
            endif
            if (p3.gt.0) then
               call convip ( p1, real(p3), 3, 1, lab_S, .false. )
               p3 = 0
            endif
 88         err= fstecr (w1, w1, -bit, iun1, dte, det, ipas, ni, nj,1,
     $                   p1, p2, p3, typ_S, var_S, lab_S, grd_S,
     $                   g1, g2, g3, g4, dty, .true.)
            deallocate (w1)
         end do
*
        err = fstfrm(iun1)
        err = fclos(iun1)         
        err = fstfrm(iun2)
        err = fclos(iun2)
*            
      endif
      return

 9876 err = fstfrm(iun2)
      err = fclos(iun2)
      call qqexit(1)
      return
*
 210  format (' ***** Putting ',a2,'(',i3,') into ',a2,'(',i5,')')
 211  format (' ***** Putting Avg[',a2,'(',i3,') + 271.2] into ',a2,
     $        '(',i5,')')
 8000 format (/' Unable to fnom: ',a/)
 8001 format (/' Unable to fstouv: ',a/)
*
*---------------------------------------------------------------------
*
      end

