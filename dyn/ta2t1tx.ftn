***s/r ta2t1tx -  Fetch variables ta into t1 and tx
*
#include "model_macros_f.h"
*
      subroutine ta2t1tx
      implicit none
*
*author
*     Alain Patoine - april 94
*
*revision
*
*object
* v2_00 - Desgagne M.       - initial MPI version
* v2_30 - Edouard  S.       - remove pi' at the top
* v2_31 - Desgagne M.       - remove treatment of HU and QC and 
*                             re-introduce tracers
* v3_00 - Desgagne & Lee    - Lam configuration
* v3_21 - Lee V.            - remove TR2D
*	
*arguments
*	none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "vta.cdk"
#include "vt1.cdk"
#include "vtx.cdk"
#include "nest.cdk"
#include "tr3d.cdk"
#include "itf_phy_buses.cdk"
*
*modules
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      integer err, key(28), i, j, k, n, key1_, keya_, key1(Tr3d_ntr), 
     $        keya(Tr3d_ntr), nvar
      real tr1,tra
      pointer (patr1, tr1(LDIST_SHAPE,*)),(patra, tra(LDIST_SHAPE,*))
      real    busper(max(1,p_bper_siz)), buf(l_ni,G_nk)
      real, allocatable, dimension(:,:,:,:) :: tr2,tr3
**
*     ---------------------------------------------------------------
*
*C       1.    Fetch variables ta into t1 and tx
*              ---------------------------------
*
      key(1)  = VMM_KEY(uta  )
      key(2)  = VMM_KEY(ut1  )
      key(3)  = VMM_KEY(vta  )
      key(4)  = VMM_KEY(vt1  )
      key(5)  = VMM_KEY(tta  )
      key(6)  = VMM_KEY(tt1  )
      key(7)  = VMM_KEY(psdta)
      key(8)  = VMM_KEY(psdt1)
      key(9)  = VMM_KEY(sta  )
      key(10) = VMM_KEY(st1  )
*
      err = vmmlod(key,10)
      err = VMM_GET_VAR(uta  )
      err = VMM_GET_VAR(ut1  )
      err = VMM_GET_VAR(vta  )
      err = VMM_GET_VAR(vt1  )
      err = VMM_GET_VAR(tta  )
      err = VMM_GET_VAR(tt1  )
      err = VMM_GET_VAR(psdta)
      err = VMM_GET_VAR(psdt1)
      err = VMM_GET_VAR(sta  )
      err = VMM_GET_VAR(st1  )
*
      do k=1,l_nk
      do j= 1, l_nj
      do i= 1, l_ni
         ut1  (i,j,k) = uta  (i,j,k)
         vt1  (i,j,k) = vta  (i,j,k)
      enddo
      enddo
      enddo
*
      do k=1,l_nk+1
      do j= 1, l_nj
      do i= 1, l_ni
         tt1  (i,j,k) = tta  (i,j,k)
         psdt1(i,j,k) = psdta(i,j,k)
      enddo
      enddo
      enddo
*
      do j= 1, l_nj 
      do i= 1, l_ni
         st1  (i,j) = sta  (i,j)
      enddo
      enddo
*
      err = vmmuld(-1,0)
*
********************************************************************
*     Non-hydrostatic model fields
********************************************************************
*
      if ( .not. Schm_hydro_L ) then
*
         key(1) = VMM_KEY(wta  )
         key(2) = VMM_KEY(wt1  )
         key(3) = VMM_KEY(qsecta )
         key(4) = VMM_KEY(qsect1 )
         err = vmmlod(key,4)
         err = VMM_GET_VAR(wta  )
         err = VMM_GET_VAR(wt1  )
         err = VMM_GET_VAR(qsecta )
         err = VMM_GET_VAR(qsect1 )
*
         do j= 1, l_nj 
         do i= 1, l_ni 
            qsect1(i,j,0) = qsecta(i,j,0)
         enddo
         enddo
         do k=1,l_nk+1
         do j= 1, l_nj 
         do i= 1, l_ni 
            wt1   (i,j,k) = wta   (i,j,k)
            qsect1(i,j,k) = qsecta(i,j,k)
         enddo
         enddo
         enddo
*
         err = vmmuld(-1,0)
*
      endif
*
      key1_ = VMM_KEY (trt1)
      keya_ = VMM_KEY (trta)
      do n=1,Tr3d_ntr
         key1(n) = key1_ + n
         keya(n) = keya_ + n
      end do
      if (Tr3d_ntr.gt.0) then
         err = vmmlod(key1,Tr3d_ntr)  
         err = vmmlod(keya,Tr3d_ntr)  
         do n=1,Tr3d_ntr
            err = vmmget(key1(n),patr1,tr1)
            err = vmmget(keya(n),patra,tra)
            do k=1,G_nk+1
            do j=1,l_nj
            do i=1,l_ni
               tr1(i,j,k) = tra(i,j,k)
            end do
            end do
            end do
         end do
         err = vmmuld(key1,Tr3d_ntr)
         err = vmmuld(keya,Tr3d_ntr)
      endif
*   
*
*******************************************************************
*     Physics fields
*******************************************************************
*
      if ( Schm_phyms_L ) then
         Phy_busper3D = Phy_busper3D_digf
         deallocate (Phy_busper3D_digf)
      endif
*
      if (G_lam ) then
*
         if (north+south+west+east.lt.1) return
*     
         key(1 )=VMM_KEY(nest_u)
         key(2 )=VMM_KEY(nest_v)
         key(3 )=VMM_KEY(nest_t)
         key(4 )=VMM_KEY(nest_psd)
         key(5 )=VMM_KEY(nest_s)
         key(6 )=VMM_KEY(uta)
         key(7 )=VMM_KEY(vta)
         key(8 )=VMM_KEY(tta)
         key(9 )=VMM_KEY(psdta)
         key(10)=VMM_KEY(sta)
         nvar = 10
*     
         if (.not.Schm_hydro_L) then
            key(11)=VMM_KEY(nest_w)
            key(12)=VMM_KEY(nest_qsec)
            key(13)=VMM_KEY(wta)
            key(14)=VMM_KEY(qsecta)
            nvar = 14
         endif
*     
         err = vmmlod(key,nvar)
         err = VMM_GET_VAR(nest_u)
         err = VMM_GET_VAR(nest_v)
         err = VMM_GET_VAR(nest_t)
         err = VMM_GET_VAR(nest_psd)
         err = VMM_GET_VAR(nest_s)
         err = VMM_GET_VAR(uta)
         err = VMM_GET_VAR(vta)
         err = VMM_GET_VAR(tta)
         err = VMM_GET_VAR(psdta)
         err = VMM_GET_VAR(sta)
         if (.not.Schm_hydro_L) then
            err = VMM_GET_VAR(nest_w)
            err = VMM_GET_VAR(nest_qsec)
            err = VMM_GET_VAR(wta)
            err = VMM_GET_VAR(qsecta)
         endif
*
         if (l_north) then
            do k=1,G_nk
               do j=l_nj-pil_n+1,l_nj
               do i=1,l_niu
                  nest_u(i,j,k) = uta(i,j,k)
               end do
               end do
               do j=l_nj-pil_n,l_njv
               do i=1,l_ni
                  nest_v(i,j,k) = vta(i,j,k)
               end do
               end do
            end do
            do k=1,G_nk+1
               do j=l_nj-pil_n+1,l_nj
               do i=1,l_ni
                  nest_t  (i,j,k) = tta  (i,j,k)
                  nest_psd(i,j,k) = psdta(i,j,k)
               end do
               end do
            end do
            do j=l_nj-pil_n+1,l_nj
            do i=1,l_ni
               nest_s(i,j) = sta(i,j)
            end do
            end do
            if (.not. Schm_hydro_L) then
               do j=l_nj-pil_n+1,l_nj
               do i=1,l_ni
                  nest_qsec(i,j,0) = qsecta(i,j,0)
               end do
               end do
               do k=1,G_nk+1
               do j=l_nj-pil_n+1,l_nj
               do i=1,l_ni
                  nest_w   (i,j,k) = wta   (i,j,k)
                  nest_qsec(i,j,k) = qsecta(i,j,k)
               end do
               end do
               end do
            endif
         endif
*
         if (l_east) then
            do k=1,G_nk
               do j=1,l_nj
               do i=l_ni-pil_e,l_niu
                  nest_u(i,j,k) = uta(i,j,k)
               end do
               end do
               do j=1,l_njv
               do i=l_ni-pil_e+1,l_ni
                  nest_v(i,j,k) = vta(i,j,k)
               end do
               end do
            end do
            do k=1,G_nk+1
               do j=1,l_nj
               do i=l_ni-pil_e+1,l_ni
                  nest_t  (i,j,k) = tta  (i,j,k)
                  nest_psd(i,j,k) = psdta(i,j,k)
               end do
               end do
            end do
 
            do j=1,l_nj
            do i=l_ni-pil_e+1,l_ni
               nest_s(i,j) = sta(i,j)
            end do
            end do
            if (.not. Schm_hydro_L) then
               do j=1,l_nj
               do i=l_ni-pil_e+1,l_ni
                  nest_qsec(i,j,0) = qsecta(i,j,0)
               end do
               end do
               do k=1,G_nk+1
               do j=1,l_nj
               do i=l_ni-pil_e+1,l_ni
                  nest_w   (i,j,k) = wta   (i,j,k)
                  nest_qsec(i,j,k) = qsecta(i,j,k)
               end do
               end do
               end do
             endif
         endif
*
         if (l_south) then
            do k=1,G_nk
               do j=1,pil_s
               do i=1,l_ni
                  nest_v  (i,j,k) = vta  (i,j,k)
               end do
               end do
               do j=1,pil_s
               do i=1,l_niu
                  nest_u(i,j,k) = uta(i,j,k)
               end do
               end do
            end do
            do k=1,G_nk+1
               do j=1,pil_s
               do i=1,l_ni
                  nest_t  (i,j,k) = tta  (i,j,k)
                  nest_psd(i,j,k) = psdta(i,j,k)
               end do
               end do
            end do
            do j=1,pil_s
            do i=1,l_ni
               nest_s(i,j) = sta(i,j)
            end do
            end do
            if (.not. Schm_hydro_L) then
               do j=1,pil_s
               do i=1,l_ni
                  nest_qsec(i,j,0) = qsecta(i,j,0)
               end do
               end do
               do k=1,G_nk+1
               do j=1,pil_s
               do i=1,l_ni
                  nest_w   (i,j,k) = wta   (i,j,k)
                  nest_qsec(i,j,k) = qsecta(i,j,k)
               end do
               end do
               end do
           endif
         endif
*
         if (l_west) then
            do k=1,G_nk
               do j=1,l_nj
               do i=1,pil_w
                  nest_u  (i,j,k) = uta  (i,j,k)
               end do
               end do
               do j=1,l_njv
               do i=1,pil_w
                  nest_v(i,j,k) = vta(i,j,k)
               end do
               end do
            end do
            do k=1,G_nk+1
               do j=1,l_nj
               do i=1,pil_w
                  nest_t  (i,j,k) = tta  (i,j,k)
                  nest_psd(i,j,k) = psdta(i,j,k)
               end do
               end do
            end do
            do j=1,l_nj
            do i=1,pil_w
               nest_s(i,j) = sta(i,j)
            end do
            end do
            if (.not. Schm_hydro_L) then
               do j=1,l_nj
               do i=1,pil_w
                  nest_qsec(i,j,0) = qsecta(i,j,0)
               end do
               end do
               do k=1,G_nk+1
               do j=1,l_nj
               do i=1,pil_w
                  nest_w   (i,j,k) = wta   (i,j,k)
                  nest_qsec(i,j,k) = qsecta(i,j,k)
               end do
               end do
               end do
            endif
         endif
*
         err = vmmuld(-1,0)
*
         key1_ = VMM_KEY (nest_tr)
         keya_ = VMM_KEY (trta)
         do n=1,Tr3d_ntr
            key1(n) = key1_ + n
            keya(n) = keya_ + n
         end do
         if (Tr3d_ntr.gt.0) then
            err = vmmlod(key1,Tr3d_ntr)
            err = vmmlod(keya,Tr3d_ntr)
            do n=1,Tr3d_ntr
               err = vmmget(key1(n),patr1,tr1)
               err = vmmget(keya(n),patra,tra)
               if (l_north) then
                  do k=1,G_nk+1
                  do j=l_nj-pil_n+1,l_nj
                  do i=1,l_ni
                     tr1(i,j,k) = tra(i,j,k)
                  enddo
                  enddo
                  enddo
               endif
               if (l_east) then
                  do k=1,G_nk+1
                  do j=1,l_nj
                  do i=l_ni-pil_e+1,l_ni
                     tr1(i,j,k) = tra(i,j,k)
                  enddo
                  enddo
                  enddo
               endif
               if (l_south) then
                  do k=1,G_nk+1
                  do j=1,pil_s
                  do i=1,l_ni
                     tr1(i,j,k) = tra(i,j,k)
                  enddo
                  enddo
                  enddo
               endif
               if (l_west) then
                  do k=1,G_nk+1
                  do j=1,l_nj
                  do i=1,pil_w
                     tr1(i,j,k) = tra(i,j,k)
                  enddo
                  enddo
                  enddo
               endif
            enddo
            err = vmmuld(key1,Tr3d_ntr)
            err = vmmuld(keya,Tr3d_ntr)
         endif
*
      endif
*     ---------------------------------------------------------------
      return
      end
