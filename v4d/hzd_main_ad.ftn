!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r hzd_main_ad - ADJ of hzd_main_tl 
*
#include "model_macros_f.h"
*
      subroutine hzd_main_ad 
*
      implicit none
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_21 - Tanguay M.        - ADJ of HO option
*                           - replace xfis by topo
* v2_30 - Edouard S.        - replace Schm_elast_L by Schm_cptop_L
* v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate 
*                           - change name 
* v3_01 - Tanguay M.        - ADJ of Eigv_parity_L not done yet
* v3_02 - Tanguay M.        - ADJ of Eigv_parity_L done
* v3_03 - Tanguay M.        - Adjoint Lam and NoHyd configuration 
* v3_11 - Tanguay M.        - AIXport+Opti+OpenMP for TLM-ADJ
*                           - Remove topo 
* v3_20 - Tanguay M.        - Introduce Hzd_hzdmain_n_L 
* v3_30 - Tanguay M.        - activate Hzd_type_S='EXPLICIT' 
* v4_04 - Tanguay M.        - Staggered version TL/AD 
* v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
*
*object
*     see id section
*	
*implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "cstv.cdk"
#include "schm.cdk"
#include "lun.cdk"
#include "fft.cdk"
#include "hzd.cdk"
#include "eigv.cdk"
#include "vt1.cdk"
#include "p_geof.cdk"
#include "grd.cdk"
#include "lctl.cdk"
#include "type.cdk"
#include "ver.cdk"
*
*     ______________________________________________________
*
      if (Hzd_type_S.eq.'HO_IMP'.and.G_lam) call handle_error(-1,'hzd_main_ad','hzd_main_AD HO_IMP G_lam')
*
      if (.not.Hzd_ho_L.or..not.Hzd_hzdmain_1_L) then
         if (Lun_out.gt.0) write(Lun_out,1001)
         return
      endif
*
*     ______________________________________________________
*
      gmmstat = gmm_get(gmmk_ut1_s,ut1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'hzd_main_ad ERROR at gmm_get(ut1)'
      gmmstat = gmm_get(gmmk_vt1_s,vt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'hzd_main_ad ERROR at gmm_get(vt1)'
      gmmstat = gmm_get(gmmk_zdt1_s,zdt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'hzd_main_ad ERROR at gmm_get(zdt1)'
      gmmstat = gmm_get(gmmk_tt1_s,tt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'hzd_main_ad ERROR at gmm_get(tt1)'
*
      if(.not.Schm_hydro_L)then
         gmmstat = gmm_get(gmmk_wt1_s,wt1,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'hzd_main_ad ERROR at gmm_get(wt1)'
      endif
*
*     ADJ of
*************************************
*  1. Implicit horizontal diffusion *
*************************************
*
*     NOTE: iw2rwnd_ad = iw2rwnd
*     --------------------------
      call iw2rwnd ( ut1, vt1, LDIST_DIM, G_nk, 2 )
*
      if (Hzd_ho_L) then
*
         if (Hzd_type_S.eq.'HO_EXP') then
             call hzd_exhrdif_ad ( ut1, vt1, zdt1, wt1, tt1, st1, LDIST_DIM, G_nk)
         else
            if (Fft_fast_L) then
*              use FFT in diffusion-solver
               if (G_lam) then
CCC                call hzd_hof_lam_ad ( ut1, vt1, zdt1, wt1, tt1, st1, LDIST_DIM, G_nk)
               else
                   call hzd_hof_ad ( ut1, vt1, zdt1, wt1, tt1, st1, LDIST_DIM, G_nk)
               endif
            else
*           NOT DONE
            endif
         endif
*
      endif
*
*     NOTE: iw2rwnd_ad = iw2rwnd
*     --------------------------
      call iw2rwnd ( ut1, vt1, LDIST_DIM, G_nk, 1 )
*
 1001 format(/,
     + 3X,'NO ADJ HORIZONTAL DIFFUSION REQUIRED',
     +/3X,'====================================',/)
*
      return
      end
