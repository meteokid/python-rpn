***s/r wndth_ad - ADJ of wndth 
*
#include <model_macros_f.h>
*
      subroutine wndth_ad
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v3_20 - Tanguay M.        - 1d higher order diffusion operator 
*
*object
*     see id section
*
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "vt0.cdk"
#include "vth.cdk"
#include "vt1.cdk"
#include "hzd.cdk"
*
*modules
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      integer pnerr, pnlkey1(9)
      integer i, j, k
*
      real*8 ZERO_8
      parameter (ZERO_8=0.0)
*
*     ---------------------------------------------------------------
*
*     get fields in memory
*
      pnlkey1(1) = VMM_KEY(uth)
      pnlkey1(2) = VMM_KEY(ut1)
      pnlkey1(3) = VMM_KEY(ut0)
      pnlkey1(4) = VMM_KEY(vth)
      pnlkey1(5) = VMM_KEY(vt1)
      pnlkey1(6) = VMM_KEY(vt0)
      pnlkey1(7) = VMM_KEY(psdth)
      pnlkey1(8) = VMM_KEY(psdt1)
      pnlkey1(9) = VMM_KEY(psdt0)
*
      pnerr = vmmlod(pnlkey1,9)
      pnerr = VMM_GET_VAR(psdth)
      pnerr = VMM_GET_VAR(psdt1)
      pnerr = VMM_GET_VAR(psdt0)
      pnerr = VMM_GET_VAR(uth)
      pnerr = VMM_GET_VAR(vth)
      pnerr = VMM_GET_VAR(ut1)
      pnerr = VMM_GET_VAR(vt1)
      pnerr = VMM_GET_VAR(ut0)
      pnerr = VMM_GET_VAR(vt0)
*
*
*C       1.    Perform the averaging
*              ---------------------
*
      do k=1,l_nk
         do j= 1+pil_s, l_nj-pil_n
         do i= 1+pil_w, l_ni-pil_e
         psdt0(i,j,k) = 0.5 * psdth(i,j,k) + psdt0(i,j,k)
         psdt1(i,j,k) = 0.5 * psdth(i,j,k) + psdt1(i,j,k)
         psdth(i,j,k) = ZERO_8
*
         ut0(i,j,k)   = 0.5 * uth(i,j,k) + ut0(i,j,k)
         ut1(i,j,k)   = 0.5 * uth(i,j,k) + ut1(i,j,k)
         uth(i,j,k)   = ZERO_8
         end do
         end do
*
         do j= 1+pil_s, l_njv-pil_n
         do i= 1+pil_w, l_ni-pil_e
         vt0(i,j,k)   = 0.5 * vth(i,j,k) + vt0(i,j,k)
         vt1(i,j,k)   = 0.5 * vth(i,j,k) + vt1(i,j,k)
         vth(i,j,k)   = ZERO_8
         end do
         end do
*
      end do
*
*     Filtering
*     ---------
      if (Hzd_t0_1_L) call hzd_hoffld_ad (psdt0, LDIST_DIM, G_nk, 3)
      if (Hzd_t0_1_L) call hzd_hoffld_ad (vt0,   LDIST_DIM, G_nk, 2)
      if (Hzd_t0_1_L) call hzd_hoffld_ad (ut0,   LDIST_DIM, G_nk, 1)
*
      pnerr = vmmuld(-1,0)
*
*     ---------------------------------------------------------------
*
 1000 format(
     +/ /,'ADJ of AVERAGE WINDS t0-dt/2 (th): (S/R WNDTH_AD)',
     + /,'==================================================',
     +/ /)
*
      return
      end
