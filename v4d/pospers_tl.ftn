! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r pospers_tl - TLM of pospers 
*
#include "model_macros_f.h"
*
      subroutine pospers_tl
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_31 - Tanguay M.        - adapt ADJ for new advection code 
* v4_04 - Tanguay M.        - Staggered version TL/AD 
*
*object
*     see id section
*
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "geomg.cdk"
#include "vth.cdk"
#include "vth_m.cdk"
#include "ver.cdk"
*
*modules
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      integer pnerr, pnlkey1(12),i, j, k, ijk, nij, pnlod 
      real pr1
**
      nij = l_ni * l_nj
*
      pnlkey1(1) = VMM_KEY(xth)
      pnlkey1(2) = VMM_KEY(yth)
      pnlkey1(3) = VMM_KEY(zth)
      pnlkey1(4) = VMM_KEY(xcth)
      pnlkey1(5) = VMM_KEY(ycth)
      pnlkey1(6) = VMM_KEY(zcth)
      pnlod = 6 
*
      pnlkey1(pnlod+1) = VMM_KEY(xth_m)
      pnlkey1(pnlod+2) = VMM_KEY(yth_m)
      pnlkey1(pnlod+3) = VMM_KEY(zth_m)
      pnlkey1(pnlod+4) = VMM_KEY(xcth_m)
      pnlkey1(pnlod+5) = VMM_KEY(ycth_m)
      pnlkey1(pnlod+6) = VMM_KEY(zcth_m)
      pnlod = pnlod+6 
*
      pnerr = vmmlod(pnlkey1,pnlod)
*
      pnerr = VMM_GET_VAR(xth)
      pnerr = VMM_GET_VAR(yth)
      pnerr = VMM_GET_VAR(zth)
      pnerr = VMM_GET_VAR(xcth)
      pnerr = VMM_GET_VAR(ycth)
      pnerr = VMM_GET_VAR(zcth)
*
*     TRAJECTORY
*     ----------
      pnerr = VMM_GET_VAR(xth_m)
      pnerr = VMM_GET_VAR(yth_m)
      pnerr = VMM_GET_VAR(zth_m)
      pnerr = VMM_GET_VAR(xcth_m)
      pnerr = VMM_GET_VAR(ycth_m)
      pnerr = VMM_GET_VAR(zcth_m)
*
      do k = 1, l_nk
      do j = 1, l_nj
      do i = 1, l_ni
*
         ijk=(k-1)*nij+(j-1)*l_ni+i
*
*        TRAJ 
*        ----
         xth_m(ijk) = Geomg_x_8(i)
         yth_m(ijk) = Geomg_y_8(j)
         zth_m(ijk) = Ver_z_8%m(k)
*
         pr1        = cos(yth_m(ijk))
*
         zcth_m(ijk)= sin(yth_m(ijk))
         xcth_m(ijk)= cos(xth_m(ijk)) * pr1
         ycth_m(ijk)= sin(xth_m(ijk)) * pr1
*
*        TLM 
*        ---
         xth(ijk)  = 0. 
         yth(ijk)  = 0. 
         zth(ijk)  = 0. 
*
         zcth(ijk) = 0. 
         xcth(ijk) = 0. 
         ycth(ijk) = 0. 
*
      end do
      end do
      end do
*
      pnerr = vmmuld(-1,0)
*
*     ---------------------------------------------------------------
*
      return
      end
