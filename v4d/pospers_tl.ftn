! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r pospers_tl - TLM of pospers 
*
#include "model_macros_f.h"
*
      subroutine pospers_tl
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_31 - Tanguay M.        - adapt ADJ for new advection code 
* v4_04 - Tanguay M.        - Staggered version TL/AD 
* v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
*
*object
*     see id section
*
*implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "geomg.cdk"
#include "vth.cdk"
#include "vth_m.cdk"
#include "ver.cdk"
*
*     --------------------------------
      integer i, j, k, ijk, nij
      real pr1
*     --------------------------------
*
      nij = l_ni * l_nj
*
      gmmstat = gmm_get(gmmk_xth_s,xth,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(xth)'
      gmmstat = gmm_get(gmmk_yth_s,yth,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(yth)'
      gmmstat = gmm_get(gmmk_zth_s,zth,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(zth)'

      gmmstat = gmm_get(gmmk_xcth_s,xcth,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(xcth)'
      gmmstat = gmm_get(gmmk_ycth_s,ycth,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(ycth)'
      gmmstat = gmm_get(gmmk_zcth_s,zcth,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(zcth)'
*
*     TRAJECTORY
*     ----------
      gmmstat = gmm_get(gmmk_xth_m_s,xth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(xth_m)'
      gmmstat = gmm_get(gmmk_yth_m_s,yth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(yth_m)'
      gmmstat = gmm_get(gmmk_zth_m_s,zth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(zth_m)'

      gmmstat = gmm_get(gmmk_xcth_m_s,xcth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(xcth_m)'
      gmmstat = gmm_get(gmmk_ycth_m_s,ycth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(ycth_m)'
      gmmstat = gmm_get(gmmk_zcth_m_s,zcth_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'pospers_tl ERROR at gmm_get(zcth_m)'
*
      do k = 1, l_nk
      do j = 1, l_nj
      do i = 1, l_ni
*
         ijk=(k-1)*nij+(j-1)*l_ni+i
*
*        TRAJ 
*        ----
         xth_m(ijk) = Geomg_x_8(i)
         yth_m(ijk) = Geomg_y_8(j)
         zth_m(ijk) = Ver_z_8%m(k)
*
         pr1        = cos(yth_m(ijk))
*
         zcth_m(ijk)= sin(yth_m(ijk))
         xcth_m(ijk)= cos(xth_m(ijk)) * pr1
         ycth_m(ijk)= sin(xth_m(ijk)) * pr1
*
*        TLM 
*        ---
         xth(ijk)  = 0. 
         yth(ijk)  = 0. 
         zth(ijk)  = 0. 
*
         zcth(ijk) = 0. 
         xcth(ijk) = 0. 
         ycth(ijk) = 0. 
*
      end do
      end do
      end do
*
*     ---------------------------------------------------------------
*
      return
      end
