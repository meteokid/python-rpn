! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r t02t1_ad -  ADJ of t02t1 
*
#include "model_macros_f.h"
*
      subroutine t02t1_ad
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_30 - Edouard S.        - remove pi' a the top
* v2_31 - Tanguay M.        - adapt for tracers in tr3d  
* v3_03 - Tanguay M.        - Adjoint NoHyd configuration 
* v4_04 - Tanguay M.        - Staggered version TL/AD 
* v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
*
*object
*     see id section
*	
*arguments
*     none
*
*implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "schm.cdk"
#include "tr3d.cdk"
#include "vt0.cdk"
#include "vt1.cdk"
*     ______________________________________________________
      character(len=8) , dimension(2), parameter :: ut_list  = (/ 'UT1', 'UT0' /)
      character(len=8) , dimension(2), parameter :: vt_list  = (/ 'VT1', 'VT0' /)
      character(len=8) , dimension(2), parameter :: wt_list  = (/ 'WT1', 'WT0' /)
      character(len=8) , dimension(2), parameter :: tt_list  = (/ 'TT1', 'TT0' /)
      character(len=8) , dimension(2), parameter :: zdt_list = (/ 'ZDT1', 'ZDT0' /)
      character(len=8) , dimension(2), parameter :: st_list  = (/ 'ST1', 'ST0' /)
      character(len=8) , dimension(2), parameter :: qt_list  = (/ 'QT1', 'QT0' /)
      character(len=8) , dimension(2) :: tr_list
      integer i
*     ______________________________________________________
*
      gmmstat = gmm_shuffle( ut_list)
      gmmstat = gmm_shuffle( vt_list)
      gmmstat = gmm_shuffle( wt_list)
      gmmstat = gmm_shuffle( tt_list)
      gmmstat = gmm_shuffle(zdt_list)
      gmmstat = gmm_shuffle( st_list)
*
      if (.not. Schm_hydro_L) then
         gmmstat = gmm_shuffle(qt_list)
      endif
*
      do i=1,Tr3d_ntr
         tr_list(1) = 'TR/'//trim(Tr3d_name_S(i))//':P'
         tr_list(2) = 'TR/'//trim(Tr3d_name_S(i))//':M'
         gmmstat = gmm_shuffle(tr_list)
      end do
*
      return
      end
