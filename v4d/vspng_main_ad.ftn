! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r vspng_main_ad - ADJ of vspng_main_tl 
*
#include "model_macros_f.h"
*
      subroutine vspng_main_ad
*
      implicit none
*
*author
*     M.Tanguay
*
*revision
* v2_21 - Tanguay M.        - initial MPI version
* v2_30 - Edouard S.        - replace Schm_elast_L by Schm_cptop_L
* v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate 
*                           - change name 
* v3_03 - Tanguay M.        - Adjoint Lam and NoHyd configuration
* v3_11 - Tanguay M.        - AIXport+Opti+OpenMP for TLM-ADJ
* v4_04 - Tanguay M.        - Staggered version TL/AD 
*
*object
*     see id section
*	
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "vspng.cdk"
#include "vt1.cdk"
*
*modules
      integer  vmmlod,vmmuld,vmmget
      external vmmlod,vmmuld,vmmget
*
      integer pnerr, pnlod, pnlkey1(10)
*
*     ______________________________________________________
*
      if (Vspng_nk.lt.1) return
*     ______________________________________________________
*
      pnlkey1(1) = VMM_KEY(ut1)
      pnlkey1(2) = VMM_KEY(vt1)
      pnlkey1(3) = VMM_KEY(zdt1)
      pnlkey1(4) = VMM_KEY(tt1)
      pnlod = 4
      if (.not. Schm_hydro_L) then
         pnlod = pnlod +1
         pnlkey1(pnlod) = VMM_KEY(wt1)
      endif
*
*     - - - - - - - - - - - - - - -
      pnerr = vmmlod(pnlkey1,pnlod)
*     - - - - - - - - - - - - - - -
      pnerr = VMM_GET_VAR(ut1)
      pnerr = VMM_GET_VAR(vt1)
      pnerr = VMM_GET_VAR(zdt1)
      pnerr = VMM_GET_VAR(tt1)
      if (.not. Schm_hydro_L) then
         pnerr = VMM_GET_VAR(wt1)
      endif
*
*     NOTE: iw2rwnd_ad = iw2rwnd
*     --------------------------
      call iw2rwnd ( ut1, vt1, LDIST_DIM, G_nk, 2 )
*
      if (G_lam) then
         if (Lun_debug_L) write (Lun_out,1001) Vspng_nk
         call vspng_drv_lam_ad (ut1,vt1,zdt1,wt1,tt1,LDIST_DIM,G_nk)
      else
         if (Lun_debug_L) write (Lun_out,1000) Vspng_nk
         call vspng_drv_ad (ut1,vt1,zdt1,wt1,tt1,LDIST_DIM,G_nk)
      endif
*
*     NOTE: iw2rwnd_ad = iw2rwnd
*     --------------------------
      call iw2rwnd ( ut1, vt1, LDIST_DIM, G_nk, 1 )
*
      pnerr = vmmuld(-1,0)
*
 1000 format(/,3X,
     $ 'ADJ of DEL-2 SPONGE LAYER ON TOP ',I3,' LAYERS: (S/R VSPNG_DRV_AD)')
 1001 format(/,3X,
     $ 'ADJ of 9PT FILT SPONGE LAYER ON TOP ',I3,' LAYERS: (S/R VSPNG_DRV_LAM_AD)')
*
      return
      end
