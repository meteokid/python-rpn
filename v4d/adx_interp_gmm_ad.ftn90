!-------------------------------------- LICENCE BEGIN -------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END ---------------------------
#include "stop_mpi.h"

subroutine adx_interp_gmm3_ad()
   implicit none
   !---------------------------------------------------------------------
   call stop_mpi(STOP_ERROR,'adx_interp_gmm3_ad','called a stub')
   !---------------------------------------------------------------------
   return
end subroutine adx_interp_gmm3_ad


!/**
subroutine adx_interp_gmm4_ad(F_out_S  , F_in_S  ,  &
                              F_out_m_S, F_in_m_S,  &
                              F_wind_L, F_nk, &
                              i0,in,j0,jn, F_lev_S)

   implicit none
   !@objective ADJ of adx_interp_gmm4
   !@arguments
   character(len=*) :: F_out_S   !I, gmm label for interpolated field
   character(len=*) :: F_in_S    !I, gmm label for field to interpolate
   character(len=*) :: F_out_m_S !I, gmm label for interpolated field TRAJ
   character(len=*) :: F_in_m_S  !I, gmm label for field to interpolate TRAJ
   logical :: F_wind_L         !I, .true. if field is wind like
   integer :: F_nk             !I, number of vertical levels
   integer :: i0,in,j0,jn      !I, scope of operator
   character(len=*) :: F_lev_S !I, m/t : Momemtum/thermo level
   !@author monique tanguay
   !@revisions
   ! v4_XX - Tanguay M.        - Adjustments GEM413
!**/
#include "gmm.hf"
#include "glb_ld.cdk"
#include "adx_dims.cdk"
#include "adx_nml.cdk"
#include "adx_dyn.cdk"
   type(gmm_metadata) :: mymeta
   logical :: mono_L
   integer :: i,j,k,err
   real, pointer, dimension (:,:,:) :: fld_in  ,fld_out  , &
                                       fld_in_m,fld_out_m
   real*8, parameter :: ZERO_8 = 0.0
   !---------------------------------------------------------------------
   err =     gmm_get(F_in_S ,fld_in ,mymeta)
   err = min(gmm_get(F_out_S,fld_out,mymeta),err)
 
   call handle_error(err,'adx_interp_gmm','gmm_get for '//trim(F_in_S)//', '//trim(F_out_S))
 
   err =     gmm_get(F_in_m_S ,fld_in_m ,mymeta)
   err = min(gmm_get(F_out_m_S,fld_out_m,mymeta),err)
 
   mono_l = .false.
   if (F_in_S(1:3) == 'TR/') mono_L = adw_mono_L

   call adx_interp4_ad (fld_out  , fld_in  ,                    &
                                   fld_in_m,                    &
                        mymeta%l(1)%low,mymeta%l(1)%high,       &
                        mymeta%l(2)%low,mymeta%l(2)%high, F_nk, &
                        F_wind_L, mono_L, i0,in,j0,jn, F_lev_S)

   !---------------------------------------------------------------------
   return
end subroutine adx_interp_gmm4_ad
