! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r diag_fip_tl - TLM of diag_fip 
*
#include "model_macros_f.h"
*
      subroutine diag_fip_tl (F_fip,  F_s,  F_t,
     $                        F_fip_m,F_s_m,F_t_m,F_fis,
     $                        i0,in,j0,jn,nk)
*     
      implicit none
*     
      integer i0,in,j0,jn,nk
      real F_fip(LDIST_SHAPE,0:Nk+1)
      real F_s(LDIST_SHAPE), F_t(LDIST_SHAPE,Nk+2)
      real F_fis(LDIST_SHAPE)
*
      real F_fip_m(LDIST_SHAPE,0:Nk+1)
      real F_s_m(LDIST_SHAPE), F_t_m(LDIST_SHAPE,Nk+2)
*
*author
*     M.Tanguay
*
*revision
* v4_04 - Tanguay M.        - initial MPI version
* v4_04 - Tanguay M.        - Staggered version TL/AD 
*
*object
*       see id section
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_fip        O    - perturbation hydrostatic geopotential height
*                     Note the virtual levels!
* F_s          I    - log(pis/pistars)
* F_t          I    - temperature
* F_fis        I    - surface geopotential height
* i0,in,j0,jn  I    - index over which computation will be made.
*----------------------------------------------------------------
*
*implicits
#include "lun.cdk"
#include "dcst.cdk"
#include "glb_ld.cdk"
#include "geomg.cdk"
#include "cstv.cdk"
#include "type.cdk"
#include "ver.cdk"
#include "schm.cdk"
*
      integer i,j,k,nij
      real*8  ONE_8,HALF_8,ZERO_8,pr1_8,pr1_m_8,yyy_8
*
      parameter( ONE_8 = 1.d0, HALF_8 = .5d0, ZERO_8 = 0.d0 )

*     ---------------------------------------------------------------
*
      if (Lun_debug_L) write (Lun_out,1000)
*
      if(
     $     i0.lt.1-G_halox   .or.
     $     in.gt.l_ni+G_halox.or.
     $     j0.lt.1-G_haloy   .or.
     $     jn.gt.l_nj+G_haloy
     $     )then
         call gem_stop('diag_fip_TL : dimension error',-1)
      endif

      nij=(in - i0 + 1)*(jn - j0 + 1)
*
C!$omp parallel private (pr1_8,pr1_m_8,yyy_8)
*
C!$omp do 
      do j=j0,jn
      do i=i0,in
*
*        TRAJECTORY
*        ----------
         F_fip_m(i,j,G_nk+1)=F_fis(i,j)
*
*        TLM
*        ---
         F_fip(i,j,G_nk+1)=0.0
*
      end do
      end do
C!$omp enddo
*
C!$omp do
*     Note that index on F_fip goes to zero.
      do k= G_nk+1,1,-1
         yyy_8=Cstv_RTstr_8*Ver_dz_8%t(k)/Cstv_Tstr_8
         do j=j0,jn
         do i=i0,in
*
*           TRAJECTORY
*           ----------
            pr1_m_8=ONE_8+Ver_dbdz_8%t(k)*F_s_m(i,j)
*
*           TLM
*           ---
            pr1_8=Ver_dbdz_8%t(k)*F_s(i,j)
*
            F_fip(i,j,k-1)=F_fip(i,j,k)+yyy_8*(F_t_m(i,j,k)*pr1_8+F_t(i,j,k)*pr1_m_8)
*
*           TRAJECTORY
*           ----------
            F_fip_m(i,j,k-1)=F_fip_m(i,j,k)+yyy_8*(F_t_m(i,j,k)*pr1_m_8-Cstv_Tstr_8)
*
         end do
         end do
      end do
C!$omp enddo
*
C!$omp end parallel
*
1000  format(3X,'TLM of COMPUTE FIPT1: (S/R DIAG_FIP_TL)')
*
*     ---------------------------------------------------------------
*
      return
      end
