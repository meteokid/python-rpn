***s/r surfix_ad - ADJ of surfix_tl 
*
#include <model_macros_f.h>
*
      subroutine surfix_ad 
*
#include "impnone.cdk"
*
*author M.Tanguay
*
*revision
* v3_20 - Tanguay M.       - initial MPI version 
*
*object
*	
*implicits
#include "glb_ld.cdk"
#include "vt1.cdk"
*
**
      integer  vmmlod,vmmget,vmmuln
      external vmmlod,vmmget,vmmuln

      integer err, key(4)

      integer i,j
*
      real*8, parameter :: ZERO_8 = 0.0
*
*     ---------------------------------------------------------------
*
      key( 1) = VMM_KEY(ut1)
      key( 2) = VMM_KEY(vt1)
      key( 3) = VMM_KEY(tt1)
      key( 4) = VMM_KEY(tpt1)
      err = vmmlod(key,4)
      err = VMM_GET_VAR(ut1)
      err = VMM_GET_VAR(vt1)
      err = VMM_GET_VAR(tt1)
      err = VMM_GET_VAR(tpt1)
*
      do j=1,l_njv
      do i=1,l_ni
        vt1(i,j,l_nk-1) = vt1(i,j,l_nk) + vt1(i,j,l_nk-1)
        vt1(i,j,l_nk  ) = ZERO_8
      enddo
      enddo
      do j=1,l_nj
      do i=1,l_niu
        ut1(i,j,l_nk-1) = ut1(i,j,l_nk) + ut1(i,j,l_nk-1)
        ut1(i,j,l_nk  ) = ZERO_8
      enddo
      enddo
      do j=1,l_nj
      do i=1,l_ni
        tpt1(i,j,l_nk-1) = tpt1(i,j,l_nk) + tpt1(i,j,l_nk-1)
        tpt1(i,j,l_nk  ) = ZERO_8
        tt1 (i,j,l_nk-1) = tt1 (i,j,l_nk) + tt1 (i,j,l_nk-1)
        tt1 (i,j,l_nk  ) = ZERO_8
      enddo
      enddo
*
      err = vmmuln(key,4)
*
*     ---------------------------------------------------------------
*
      return
      end
