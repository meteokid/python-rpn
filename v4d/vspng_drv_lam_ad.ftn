! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r vspng_drv_lam_ad - ADJ of vspng_drv_lam_tl 
*
#include "model_macros_f.h"
*
      subroutine vspng_drv_lam_ad ( F_u, F_v, F_zd, F_w, F_t, DIST_DIM, Nk) 
*
      implicit none
*
      integer DIST_DIM, Nk
      real     F_u (DIST_SHAPE,Nk  ),F_v(DIST_SHAPE,Nk),
     %         F_zd(DIST_SHAPE,Nk+1),F_w(DIST_SHAPE,Nk+1),
     %         F_t (DIST_SHAPE,Nk+1)
*
*author
*     M.Tanguay
*
*revision
* v3_03 - Tanguay M.        - initial MPI version
* v4_04 - Tanguay M.        - Staggered version TL/AD 
*
*object
*     see id section
*
*arguments
* 
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "vspng.cdk"
*
      integer nkspng
*
*     __________________________________________________________________
*
      if (Vspng_nk.lt.1) return
*
      if (Lun_debug_L) write (Lun_out,1000) Vspng_nk
*
*     ADJ of
*     Temperature, last level only
*     ----------------------------
      nkspng   = Vspng_nk
      Vspng_nk = 1
*
      call vspng_lam_ad ( F_t,   LDIST_DIM, l_ni , l_nj)
*
      Vspng_nk = nkspng
*
*     Vertical wind
*     ~~~~~~~~~~~~~
      if(.not.Schm_hydro_L) then
         call vspng_lam_ad ( F_w, LDIST_DIM, l_ni , l_nj)
      endif
*
*     Vertical motion
*     ~~~~~~~~~~~~~~~
*
*********not physical, done nevertheless*******
*
      call vspng_lam_ad ( F_zd,LDIST_DIM, l_ni , l_nj )
*
*     ADJ
*     Momentum
*     ~~~~~~~~
      call vspng_lam_ad ( F_v, LDIST_DIM, l_ni , l_njv)
      call vspng_lam_ad ( F_u, LDIST_DIM, l_niu, l_nj )
*
*     __________________________________________________________________
*
*
 1000 format(/,3X,
     $ 'ADJ of 9PT FILT SPONGE LAYER ON TOP ',I3,' LAYERS: (S/R VSPNG_DRV_LAM_AD)')
*
      return
      end
