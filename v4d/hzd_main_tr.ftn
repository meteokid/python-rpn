***s/r hzd_main_tr - Equivalent to hzd_main for TRAJECTORY 
*                    (F_pip, F_qp (No Hyd) ONLY)
*
#include <model_macros_f.h>
*
      subroutine hzd_main_tr 
*
      implicit none
*
*author
*     M.Tanguay
*
*revision
* v3_03 - Tanguay M.        - initial MPI version
* v3_11 - Tanguay M.        - AIXport+Opti+OpenMP for TLM-ADJ
* v3_20 - Tanguay M.        - Introduce Hzd_hzdmain_n_L 
*
*object
*     see id section
*	
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "vt1m.cdk"
#include "hzd.cdk"
#include "eigv.cdk"
#include "fft.cdk"
#include "schm.cdk"
*
*modules
      integer  vmmlod,vmmuld,vmmget
      external vmmlod,vmmuld,vmmget
*
      integer err, nlod, key1(2)
*     _________________________________________________________________
*
      if ((.not.Hzd_fact_L).and.(.not.Hzd_ho_L).or..not.Hzd_hzdmain_0_L) then
         return
      endif
*
      key1(1) = VMM_KEY(pipt1m)
      nlod=1
      if (.not. Schm_hydro_L) then
         key1(nlod+1) = VMM_KEY(qpt1m)
         nlod=nlod+1
      endif
*
*     - - - - - - - - - - - - - - -
      err = vmmlod(key1,nlod)
*     - - - - - - - - - - - - - - -
      err = VMM_GET_VAR(pipt1m)
      qpt1m_ = 0
      if (.not. Schm_hydro_L) then
         err = VMM_GET_VAR(qpt1m)
      endif
*
*************************************
*  1. Implicit horizontal diffusion *
*************************************
*
      if (Hzd_fact_L) call hzd_fact_tr (pipt1m,qpt1m,LDIST_DIM,G_nk) 
*
      if (Hzd_ho_L) then
         if (Fft_fast_L) then
*           use FFT in diffusion-solver
            if (G_lam) then
                call hzd_hof_lam_tr (pipt1m,qpt1m,LDIST_DIM,G_nk) 
            else
                call hzd_hof_tr (pipt1m,qpt1m,LDIST_DIM,G_nk)
            endif
         else
*           use MXMA in diffusion-solver
            if ( .not. Eigv_parity_L) then
                call hzd_ho_tr (pipt1m,qpt1m,LDIST_DIM,G_nk)
            else
                call hzd_ho_parite_tr (pipt1m,qpt1m,LDIST_DIM,G_nk)
            endif
         endif
      endif
*
      err = vmmuld(-1,0)
*    
      return
      end
