! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r nest_bcs_tr - Equivalent to nest_bcs for TRAJECTORY 
*
#include "model_macros_f.h"
*
      subroutine nest_bcs_tr ()
*
      implicit none
*
*author M.Tanguay 
*
*revision
* v3_30 - Tanguay M.        - initial MPI version
* v4_04 - Tanguay M.        - Staggered version TL/AD
*
*object
*
*arguments
*       none
*
*implicits
#include "glb_ld.cdk"
#include "bcsdim.cdk"
#include "bcsgrds.cdk"
#include "bcsmem.cdk"
#include "vt1_m.cdk"
#include "nest_m.cdk"
#include "tr3d.cdk"
#include "lam.cdk"
#include "schm.cdk"
*
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      integer err,key(14),i,j,k,nvar,id,kk
      integer key0(Tr3d_ntr),key0_,key1(Tr3d_ntr),key1_, n
      real tr_m,tr0_m
      pointer (patr_m, tr_m(LDIST_SHAPE,*)),(patr0_m,tr0_m(LDIST_SHAPE,*))
*----------------------------------------------------------------------
*
      if (north+south+west+east.lt.1) then
*
         if (Lam_toptt_L) then
*
*           Pilot the temperature for the whole top level
            key(1 )= VMM_KEY(nest_t_m)
            key(2 )= VMM_KEY(tt1_m)
            nvar   = 2
            err = VMM_GET_VAR(nest_t_m)
            err = VMM_GET_VAR(tt1_m)
*
            do j=1,l_nj
               do i=1,l_ni
                  tt1_m(i,j,1) = nest_t_m(i,j,1)
               end do
            end do
*
            err = vmmuld(key,nvar)
*
         endif
*
         return
      endif
*
      key(1 )=VMM_KEY(nest_u_m)
      key(2 )=VMM_KEY(nest_v_m)
      key(3 )=VMM_KEY(nest_w_m)
      key(4 )=VMM_KEY(nest_t_m)
      key(5 )=VMM_KEY(nest_zd_m)
      key(6 )=VMM_KEY(nest_s_m)
      key(7 )=VMM_KEY(ut1_m)
      key(8 )=VMM_KEY(vt1_m)
      key(9 )=VMM_KEY(wt1_m)
      key(10)=VMM_KEY(tt1_m)
      key(11)=VMM_KEY(zdt1_m)
      key(12)=VMM_KEY(st1_m)
      nvar = 12
*
      if (.not.Schm_hydro_L) then
         key(13)=VMM_KEY(nest_q_m)
         key(14)=VMM_KEY(qt1_m)
         nvar = 14
      endif
*
      err = vmmlod(key,nvar)
      err = VMM_GET_VAR(nest_u_m)
      err = VMM_GET_VAR(nest_v_m)
      err = VMM_GET_VAR(nest_w_m)
      err = VMM_GET_VAR(nest_t_m)
      err = VMM_GET_VAR(nest_zd_m)
      err = VMM_GET_VAR(nest_s_m)
      err = VMM_GET_VAR(ut1_m)
      err = VMM_GET_VAR(vt1_m)
      err = VMM_GET_VAR(wt1_m)
      err = VMM_GET_VAR(tt1_m)
      err = VMM_GET_VAR(zdt1_m)
      err = VMM_GET_VAR(st1_m)
      if (.not.Schm_hydro_L) then
         err = VMM_GET_VAR(nest_q_m)
         err = VMM_GET_VAR(qt1_m)
      endif
*
      if (l_north) then
         do k=1,G_nk+1
            kk=min(k,G_nk)
            do j=l_nj-pil_n+1,l_nj
            do i=1,l_ni
               wt1_m  (i,j,k) = nest_w_m  (i,j,k)
               tt1_m  (i,j,k) = nest_t_m  (i,j,k)
               zdt1_m (i,j,k) = nest_zd_m (i,j,k)
            end do
            end do
            do j=l_nj-pil_n+1,l_nj
            do i=1,l_niu
               ut1_m  (i,j,kk) = nest_u_m (i,j,kk)
            end do
            end do
            do j=l_nj-pil_n,l_njv
            do i=1,l_ni
               vt1_m  (i,j,kk) = nest_v_m (i,j,kk)
            end do
            end do
         end do
         do j=l_nj-pil_n+1,l_nj
         do i=1,l_ni
            st1_m  (i,j) = nest_s_m (i,j)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=l_nj-pil_n+1,l_nj
            do i=1,l_ni
               qt1_m(i,j,k)  = nest_q_m(i,j,k)
            end do
            end do
            end do
         endif
      endif
*
      if (l_east) then
         do k=1,G_nk+1
            kk=min(k,G_nk)
            do j=1,l_nj
            do i=l_ni-pil_e+1,l_ni
               wt1_m  (i,j,k) = nest_w_m  (i,j,k)
               tt1_m  (i,j,k) = nest_t_m  (i,j,k)
               zdt1_m (i,j,k) = nest_zd_m (i,j,k)
            end do
            end do
            do j=1,l_nj
            do i=l_ni-pil_e,l_niu
               ut1_m  (i,j,kk) = nest_u_m  (i,j,kk)
            end do
            end do
            do j=1,l_njv
            do i=l_ni-pil_e+1,l_ni
               vt1_m  (i,j,kk) = nest_v_m  (i,j,kk)
            end do
            end do
         end do
         do j=1,l_nj
         do i=l_ni-pil_e+1,l_ni
            st1_m  (i,j) = nest_s_m  (i,j)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=1,l_nj
            do i=l_ni-pil_e+1,l_ni
               qt1_m(i,j,k)  = nest_q_m(i,j,k)
            end do
            end do
            end do
         endif
      endif
*
      if (l_south) then
         do k=1,G_nk+1
            kk=min(k,G_nk)
            do j=1,pil_s
            do i=1,l_ni
               wt1_m  (i,j,k) = nest_w_m  (i,j,k)
               vt1_m  (i,j,kk)= nest_v_m  (i,j,kk)
               tt1_m  (i,j,k) = nest_t_m  (i,j,k)
               zdt1_m (i,j,k) = nest_zd_m (i,j,k)
            end do
            end do
            do j=1,pil_s
            do i=1,l_niu
               ut1_m  (i,j,kk) = nest_u_m  (i,j,kk)
            end do
            end do
         end do
         do j=1,pil_s
         do i=1,l_ni
            st1_m  (i,j) = nest_s_m  (i,j)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=1,pil_s
            do i=1,l_ni
               qt1_m(i,j,k)  = nest_q_m(i,j,k)
            end do
            end do
            end do
         endif
      endif
*
      if (l_west) then
         do k=1,G_nk+1
            kk=min(k,G_nk)
            do j=1,l_nj
            do i=1,pil_w
               wt1_m  (i,j,k) = nest_w_m  (i,j,k)
               ut1_m  (i,j,kk)= nest_u_m  (i,j,kk)
               tt1_m  (i,j,k) = nest_t_m   (i,j,k)
               zdt1_m (i,j,k) = nest_zd_m (i,j,k)
            end do
            end do
            do j=1,l_njv
            do i=1,pil_w
               vt1_m  (i,j,kk) = nest_v_m  (i,j,kk)
            end do
            end do
         end do
         do j=1,l_nj
         do i=1,pil_w
            st1_m  (i,j) = nest_s_m  (i,j)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=1,l_nj
            do i=1,pil_w
               qt1_m(i,j,k) = nest_q_m(i,j,k)
            end do
            end do
            end do
         endif
      endif
*
      if (Lam_toptt_L) then
*
*        Pilot the temperature for the whole top level
         do j=1,l_nj
            do i=1,l_ni
               tt1_m(i,j,1) = nest_t_m(i,j,1)
            end do
         end do
      endif
*
      err = vmmuld(key,nvar)
*
      key1_ = VMM_KEY (nest_tr_m)
      key0_ = VMM_KEY (trt1_m)
      do n=1,Tr3d_ntr
         key1(n) = key1_ + n
         key0(n) = key0_ + n
      end do
      if (Tr3d_ntr.gt.0) then
         err = vmmlod(key1,Tr3d_ntr)
         err = vmmlod(key0,Tr3d_ntr)
         do n=1,Tr3d_ntr
            id = (n-1)*bcs_sz+1
            err = vmmget(key1(n),patr_m ,tr_m )
            err = vmmget(key0(n),patr0_m,tr0_m)
            if (l_north) then
                do k=1,G_nk+1
                   do j=l_nj-pil_n+1,l_nj
                   do i=1,l_ni
                      tr0_m  (i,j,k) = tr_m  (i,j,k)
                   enddo
                   enddo
                enddo
            endif
            if (l_east) then
                do k=1,G_nk+1
                   do j=1,l_nj
                   do i=l_ni-pil_e+1,l_ni
                      tr0_m  (i,j,k) = tr_m  (i,j,k)
                   enddo
                   enddo
                enddo
            endif
            if (l_south) then
                do k=1,G_nk+1
                   do j=1,pil_s
                   do i=1,l_ni
                      tr0_m  (i,j,k) = tr_m  (i,j,k)
                   enddo
                   enddo
                enddo
            endif
            if (l_west) then
                do k=1,G_nk+1
                   do j=1,l_nj
                   do i=1,pil_w
                      tr0_m  (i,j,k) = tr_m  (i,j,k)
                   enddo
                   enddo
                enddo
            endif
         enddo
         err = vmmuld(key1,Tr3d_ntr)
         err = vmmuld(key0,Tr3d_ntr)
      endif
*
*
*----------------------------------------------------------------------
      return
 1000 format (/,19('#'),' NEST_BCS STAT TR ',i6,1X,19('#'))
      end
