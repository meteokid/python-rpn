!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r nest_bcs_tr - Equivalent to nest_bcs for TRAJECTORY 
*
#include "model_macros_f.h"
*
      subroutine nest_bcs_tr ()
*
      implicit none
*
*author M.Tanguay 
*
*revision
* v3_30 - Tanguay M.        - initial MPI version
* v4_04 - Tanguay M.        - Staggered version TL/AD
* v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
*
*object
*
*implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "bcsdim.cdk"
#include "bcsgrds.cdk"
#include "bcsmem.cdk"
#include "vt1_m.cdk"
#include "nest_m.cdk"
#include "tr3d.cdk"
#include "lam.cdk"
#include "schm.cdk"
*
      character*16 tr_name
      integer i,j,k,nvar,n
      real, pointer, dimension(:,:,:) :: trn_m,tr0_m
*----------------------------------------------------------------------
*
      if (north+south+west+east.lt.1) then
*
         if (Lam_toptt_L) then
*
*           Pilot the temperature for the whole top level
*
            gmmstat = gmm_get(gmmk_nest_t_m_s,nest_t_m,meta3d)
            if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(nest_t_m)'
            gmmstat = gmm_get(gmmk_tt1_m_s,tt1_m,meta3d)
            if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(tt1_m)'
*
            do j=1,l_nj
               do i=1,l_ni
                  tt1_m(i,j,1) = nest_t_m(i,j,1)
               end do
            end do
*
         endif
*
         return
      endif
*
      gmmstat = gmm_get(gmmk_nest_u_m_s ,nest_u_m ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(nest_u_m)'
      gmmstat = gmm_get(gmmk_nest_v_m_s ,nest_v_m ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(nest_v_m)'
      gmmstat = gmm_get(gmmk_nest_w_m_s ,nest_w_m ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(nest_w_m)'
      gmmstat = gmm_get(gmmk_nest_t_m_s ,nest_t_m ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(nest_t_m)'
      gmmstat = gmm_get(gmmk_nest_zd_m_s,nest_zd_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(nest_zd_m)'
      gmmstat = gmm_get(gmmk_nest_s_m_s ,nest_s_m ,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(nest_s_m)'

      gmmstat = gmm_get(gmmk_ut1_m_s,ut1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(ut1_m)'
      gmmstat = gmm_get(gmmk_vt1_m_s,vt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(vt1_m)'
      gmmstat = gmm_get(gmmk_wt1_m_s,wt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(wt1_m)'
      gmmstat = gmm_get(gmmk_tt1_m_s,tt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(tt1_m)'
      gmmstat = gmm_get(gmmk_zdt1_m_s,zdt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(zdt1_m)'
      gmmstat = gmm_get(gmmk_st1_m_s,st1_m,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs_tr ERROR at gmm_get(st1_m)'
      if (.not.Schm_hydro_L) then
         gmmstat = gmm_get(gmmk_nest_q_m_s,nest_q_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs ERROR at gmm_get(nest_q_m)'
         gmmstat = gmm_get(gmmk_qt1_m_s,qt1_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs ERROR at gmm_get(qt1_m)'
      endif
*
      if (l_north) then
         do k=1,G_nk+1
            do j=l_nj-pil_n+1,l_nj
            do i=1,l_ni
               wt1_m  (i,j,k) = nest_w_m  (i,j,k)
               tt1_m  (i,j,k) = nest_t_m  (i,j,k)
               zdt1_m (i,j,k) = nest_zd_m (i,j,k)
            end do
            end do
            do j=l_nj-pil_n+1,l_nj
            do i=1,l_niu
               ut1_m  (i,j,k) = nest_u_m (i,j,k)
            end do
            end do
            do j=l_nj-pil_n,l_njv
            do i=1,l_ni
               vt1_m  (i,j,k) = nest_v_m (i,j,k)
            end do
            end do
         end do
         do j=l_nj-pil_n+1,l_nj
         do i=1,l_ni
            st1_m  (i,j) = nest_s_m (i,j)
            tt1_m  (i,j,G_nk+2) = nest_t_m (i,j,G_nk+2)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=l_nj-pil_n+1,l_nj
            do i=1,l_ni
               qt1_m(i,j,k)  = nest_q_m(i,j,k)
            end do
            end do
            end do
         endif
      endif
*
      if (l_east) then
         do k=1,G_nk+1
            do j=1,l_nj
            do i=l_ni-pil_e+1,l_ni
               wt1_m  (i,j,k) = nest_w_m  (i,j,k)
               tt1_m  (i,j,k) = nest_t_m  (i,j,k)
               zdt1_m (i,j,k) = nest_zd_m (i,j,k)
            end do
            end do
            do j=1,l_nj
            do i=l_ni-pil_e,l_niu
               ut1_m  (i,j,k) = nest_u_m  (i,j,k)
            end do
            end do
            do j=1,l_njv
            do i=l_ni-pil_e+1,l_ni
               vt1_m  (i,j,k) = nest_v_m  (i,j,k)
            end do
            end do
         end do
         do j=1,l_nj
         do i=l_ni-pil_e+1,l_ni
            st1_m  (i,j) = nest_s_m  (i,j)
            tt1_m  (i,j,G_nk+2) = nest_t_m (i,j,G_nk+2)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=1,l_nj
            do i=l_ni-pil_e+1,l_ni
               qt1_m(i,j,k)  = nest_q_m(i,j,k)
            end do
            end do
            end do
         endif
      endif
*
      if (l_south) then
         do k=1,G_nk+1
            do j=1,pil_s
            do i=1,l_ni
               wt1_m  (i,j,k) = nest_w_m  (i,j,k)
               vt1_m  (i,j,k) = nest_v_m  (i,j,k)
               tt1_m  (i,j,k) = nest_t_m  (i,j,k)
               zdt1_m (i,j,k) = nest_zd_m (i,j,k)
            end do
            end do
            do j=1,pil_s
            do i=1,l_niu
               ut1_m  (i,j,k) = nest_u_m  (i,j,k)
            end do
            end do
         end do
         do j=1,pil_s
         do i=1,l_ni
            st1_m  (i,j) = nest_s_m  (i,j)
            tt1_m  (i,j,G_nk+2) = nest_t_m (i,j,G_nk+2)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=1,pil_s
            do i=1,l_ni
               qt1_m(i,j,k)  = nest_q_m(i,j,k)
            end do
            end do
            end do
         endif
      endif
*
      if (l_west) then
         do k=1,G_nk+1
            do j=1,l_nj
            do i=1,pil_w
               wt1_m  (i,j,k) = nest_w_m  (i,j,k)
               ut1_m  (i,j,k) = nest_u_m  (i,j,k)
               tt1_m  (i,j,k) = nest_t_m  (i,j,k)
               zdt1_m (i,j,k) = nest_zd_m (i,j,k)
            end do
            end do
            do j=1,l_njv
            do i=1,pil_w
               vt1_m  (i,j,k) = nest_v_m  (i,j,k)
            end do
            end do
         end do
         do j=1,l_nj
         do i=1,pil_w
            st1_m  (i,j) = nest_s_m  (i,j)
            tt1_m  (i,j,G_nk+2) = nest_t_m (i,j,G_nk+2)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=1,l_nj
            do i=1,pil_w
               qt1_m(i,j,k) = nest_q_m(i,j,k)
            end do
            end do
            end do
         endif
      endif
*
      if (Lam_toptt_L) then
*
*        Pilot the temperature for the whole top level
         do j=1,l_nj
            do i=1,l_ni
               tt1_m(i,j,1) = nest_t_m(i,j,1)
            end do
         end do
      endif
*
      do n=1,Tr3d_ntr
*
         tr_name = 'TRM/'//trim(Tr3d_name_S(n))//':N'
         gmmstat = gmm_get(tr_name,trn_m,meta3d)
         tr_name = 'TRM/'//trim(Tr3d_name_S(n))//':P'
         gmmstat = gmm_get(tr_name,tr0_m,meta3d)

            if (l_north) then
                do k=1,G_nk+2
                   do j=l_nj-pil_n+1,l_nj
                   do i=1,l_ni
                      tr0_m  (i,j,k) = trn_m  (i,j,k)
                   enddo
                   enddo
                enddo
            endif
            if (l_east) then
                do k=1,G_nk+2
                   do j=1,l_nj
                   do i=l_ni-pil_e+1,l_ni
                      tr0_m  (i,j,k) = trn_m  (i,j,k)
                   enddo
                   enddo
                enddo
            endif
            if (l_south) then
                do k=1,G_nk+2
                   do j=1,pil_s
                   do i=1,l_ni
                      tr0_m  (i,j,k) = trn_m  (i,j,k)
                   enddo
                   enddo
                enddo
            endif
            if (l_west) then
                do k=1,G_nk+2
                   do j=1,l_nj
                   do i=1,pil_w
                      tr0_m  (i,j,k) = trn_m  (i,j,k)
                   enddo
                   enddo
                enddo
            endif
*
      enddo
*
*----------------------------------------------------------------------
      return
 1000 format (/,19('#'),' NEST_BCS STAT TR ',i6,1X,19('#'))
      end
