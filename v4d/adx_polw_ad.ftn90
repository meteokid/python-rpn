!-------------------------------------- LICENCE BEGIN -------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END ---------------------------
#include "stop_mpi.h"

subroutine adx_polw_ad()
   implicit none
   !---------------------------------------------------------------------
   call stop_mpi(STOP_ERROR,'adx_polw_ad','called a stub')
   !---------------------------------------------------------------------
   return
end subroutine adx_polw_ad

subroutine adx_polw2_ad()
   implicit none
   !---------------------------------------------------------------------
   call stop_mpi(STOP_ERROR,'adx_polw2_ad','called a stub')
   !---------------------------------------------------------------------
   return
end subroutine adx_polw2_ad
!/**
subroutine adx_polw3_ad(F_u, F_v, F_j, F_aminx,F_amaxx,F_aminy,F_amaxy, F_lni,F_lnj, F_halox,F_haloy, F_nk )
   implicit none
   !@objective ADJ of adx_polw3  
   !@arguments
   integer :: F_aminx,F_amaxx,F_aminy,F_amaxy !I, adw local array bounds
   integer :: F_lni, F_lnj, F_nk !I, Field computational area dims
   integer :: F_halox, F_haloy   !I, Field halo dims
   integer :: F_j                !I, j position to fill
   real,dimension(F_aminx:F_amaxx,F_aminy:F_amaxy, F_nk)::&
        F_u, F_v                 !I/O, wind components to treat
   !@author monique tanguay
   !@revisions
   ! v4_XX - Tanguay M.        - Adjustments GEM413
   !**/
#include "adx_grid.cdk"
   integer :: i,j,k
   real*8  :: vx_8, vy_8, coef1_8, coef2_8
   real*8, parameter :: ZERO_8 = 0.0
   !---------------------------------------------------------------------
   !
   !Zero adjoint variables
   !----------------------
   vx_8 = ZERO_8 
   vy_8 = ZERO_8 
   !
   if (F_j==0) then
      j       =  1
      coef1_8 = -1.0
      coef2_8 =  1.0
   else
      j       =  F_lnj
      coef1_8 =  1.0
      coef2_8 = -1.0
   endif

!$omp do
   do k = F_nk,1,-1
      do i = F_halox,1,-1
         F_v(F_lni+1-i,F_j,k) = F_v(1-i,    F_j,k) + F_v(F_lni+1-i,F_j,k)
         F_v(1-i,      F_j,k) = ZERO_8
         F_u(F_lni+1-i,F_j,k) = F_u(1-i,    F_j,k) + F_u(F_lni+1-i,F_j,k)
         F_u(1-i,      F_j,k) = ZERO_8
         F_v(i,        F_j,k) = F_v(F_lni+i,F_j,k) + F_v(i,        F_j,k)
         F_v(F_lni+i,  F_j,k) = ZERO_8
         F_u(i,        F_j,k) = F_u(F_lni+i,F_j,k) + F_u(i,        F_j,k)
         F_u(F_lni+i,  F_j,k) = ZERO_8
      enddo

      do i=F_lni,1,-1
         vx_8        = coef1_8 * dble(F_v(i,F_j,k)) * adx_cx_8(i) + vx_8
         vy_8        = coef2_8 * dble(F_v(i,F_j,k)) * adx_sx_8(i) + vy_8
         F_v(i,F_j,k)= ZERO_8
         vx_8        =           dble(F_u(i,F_j,k)) * adx_sx_8(i) + vx_8
         vy_8        =           dble(F_u(i,F_j,k)) * adx_cx_8(i) + vy_8
         F_u(i,F_j,k)= ZERO_8
      enddo

      do i=F_lni,1,-1
         F_u(i,j,k) = adx_wx_8(i) * (                 adx_cx_8(i) * vy_8 ) + F_u(i,j,k)
         F_v(i,j,k) = adx_wx_8(i) * ( - adx_sx_8(i) * adx_sy_8(j) * vy_8 ) + F_v(i,j,k)
         F_u(i,j,k) = adx_wx_8(i) * (                 adx_sx_8(i) * vx_8 ) + F_u(i,j,k)
         F_v(i,j,k) = adx_wx_8(i) * (   adx_cx_8(i) * adx_sy_8(j) * vx_8 ) + F_v(i,j,k)
      enddo

      vy_8 = 0.0
      vx_8 = 0.0
   enddo
!$omp enddo
   !---------------------------------------------------------------------
   return
end subroutine adx_polw3_ad
