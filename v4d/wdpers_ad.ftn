! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r wdpers_ad - ADJ of wdpers_tl 
*
#include "model_macros_f.h"
*
      subroutine wdpers_ad
*
      implicit none
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_21 - Tanguay M.        - reduce standard output as in model 
* v3_00 - Tanguay M.        - adapt to restructured wdpers 
* v3_20 - Tanguay M.        - 1d higher order diffusion operator 
* v3_21 - Tanguay M.        - do filtering at t=0 in v4d_predat
* v4_04 - Tanguay M.        - Staggered version TL/AD 
* v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
*
*object
*     see id section
*
*implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "lun.cdk"
#include "vth.cdk"
#include "vt1.cdk"
#include "hzd.cdk"
#include "lctl.cdk"
#include "schm.cdk"
#include "ver.cdk"
*
      integer i, j, k
*
      real*8, parameter :: ZERO_8 = 0.0
*
*     ---------------------------------------------------------------
*
      if (Lun_debug_L) write(Lun_out,1000)
*
      gmmstat = gmm_get(gmmk_uth_s, uth ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'wdpers_ad ERROR at gmm_get(uth)'
      gmmstat = gmm_get(gmmk_vth_s, vth ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'wdpers_ad ERROR at gmm_get(vth)'
      gmmstat = gmm_get(gmmk_zdth_s,zdth,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'wdpers_ad ERROR at gmm_get(zdth)'
      gmmstat = gmm_get(gmmk_ut1_s,ut1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'wdpers_ad ERROR at gmm_get(ut1)'
      gmmstat = gmm_get(gmmk_vt1_s,vt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'wdpers_ad ERROR at gmm_get(vt1)'
      gmmstat = gmm_get(gmmk_zdt1_s,zdt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'wdpers_ad ERROR at gmm_get(zdt1)'
*
*     ADJ of
*     Initialise wind, zdot and upstream positions at
*     time t0-dt/2 (th) for mid trajectory computations
*     -------------------------------------------------
*
C!$omp parallel
      if(.not.Schm_zdotMid_L) then
C!$omp do
      do k=l_nk+1,1,-1
         do j= 1, l_nj
         do i= 1, l_ni
            zdt1(i,j,k) = zdth(i,j,k) + zdt1(i,j,k)
            zdth(i,j,k) = ZERO_8
         end do
         end do
      end do
C!$omp enddo
      endif
*
C!$omp do
      do k=1,l_nk
*
         do j= 1, l_njv
         do i= 1, l_ni
*
         vt1(i,j,k) = vth(i,j,k) + vt1(i,j,k)
         vth(i,j,k) = ZERO_8
*
         end do
         end do
*
         do j= 1, l_nj
         do i= 1, l_ni
*
         ut1(i,j,k) = uth(i,j,k) + ut1(i,j,k)
         uth(i,j,k) = ZERO_8
*
         end do
         end do
*
      end do
C!$omp enddo
*
C!$omp end parallel
*
*     ADJ of
*     Filtering
*     --------- 
      if (Lctl_step.gt.1) then
      if (Hzd_t1_1_L) call hzd_hoffld_ad (zdt1, LDIST_DIM, G_nk+1,3)
      if (Hzd_t1_1_L) call hzd_hoffld_ad (vt1,  LDIST_DIM, G_nk,  2)
      if (Hzd_t1_1_L) call hzd_hoffld_ad (ut1,  LDIST_DIM, G_nk,  1)
      endif
*
*     ---------------------------------------------------------------
*
 1000 format(
     +3X,'ADJ of TRANSFER WINDS T1 ==> TH : (S/R WDPERS_AD)')
*
      return
      end
