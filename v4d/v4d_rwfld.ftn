!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r v4d_rwfld - Read (Write) a specific field (HEART only) from (on) WA file 
*
#include "model_macros_f.h"
*
      subroutine v4d_rwfld (F_field,DIST_DIM,Nk,
     %                      F_addr,F_diag_L,F_name_S,F_adjoint_L,F_diff,F_icode)
*
      implicit none
*
      integer DIST_DIM,Nk,F_icode
      real F_field(DIST_SHAPE,Nk)
*
      integer F_addr,F_diff
      logical F_diag_L,F_adjoint_L
      character*8 F_name_S
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_31 - Tanguay M.        - change parameters of v4d_rwfld 
*                           - WA files incore 
* v3_00 - Tanguay M         - incore option for Conversion WA file 
* v3_00 - Laroche S.        - adapted for simplified physics
* v3_02 - Buehner M.        - added section for ref state file for NLMX event (SV job)
* v3_11 - Tanguay M.        - Diagnostics 
* v3_21 - Tanguay M.        - Revision Openmp
* v3_30 - Tanguay M.        - Validation for LAM version 
* v4_04 - Tanguay M.        - Staggered version TL/AD 
*
*object
*     see id section
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_field      I/O                 Field with HALO
* DIST_DIM     I                   Horizontal dim. of F_field
* Nk           I                   Vertical   dim. of F
* F_addr       I/O                 Position in WA file
* F_diag_L     I                   Give diagnostics if TRUE 
* F_name_S     I                   Name of the field
* F_adjoint_L  I                   TRUE if adjoint run
* F_diff       I                   To be subtracted from position if adjoint run 
* F_icode      I                   If F_icode.GT.0 -Transfer F_field (HEART only) in F_work
*                                                  -Write F_work in WA file 
*                                  If F_icode.LE.0 -Read F_work from WA file
*                                                  -Transfer F_work in F_field (HEART only)
*----------------------------------------------------------------
*
*implicits
#include "glb_ld.cdk"
#include "lun.cdk"
#include "v4dg.cdk"
*
      integer i,j,k,ind
*
      if (F_icode.gt.0) then
*
*         Write F_field INCORE
*         --------------------
             if(V4dg_trsize.lt.F_addr + l_ni*l_nj*Nk - 1) then
                write(*,*)V4dg_trsize,F_addr,l_ni,l_nj,Nk
                if(F_diag_L) write(Lun_out,*) 
     %                      'WA FILE: wawrit ','Waf_adr = ',F_addr,'for ',F_name_S
                call handle_error(-1,'v4d_rwfld','v4d_rwfld ARRAY TRINCORE TOO SMALL')
             endif
*
             do k=1,Nk
             do j=1,l_nj
             do i=1,l_ni
                ind = l_ni*l_nj*(k-1) + l_ni*(j-1)+i
                V4dg_trincore(F_addr + ind - 1) = F_field(i,j,k) 
             enddo
             enddo
             enddo
*
*         Diagnostics
*         -----------
          if(F_diag_L) write(Lun_out,*) 
     %                 'WA FILE: wawrit ','Waf_adr = ',F_addr,'for ',F_name_S
*
*         Update address
*         --------------
          F_addr = F_addr + l_ni*l_nj*Nk
*
      else
*
*         Read F_field INCORE
*         -------------------
             do k=1,Nk
             do j=1,l_nj
             do i=1,l_ni
                ind = l_ni*l_nj*(k-1) + l_ni*(j-1)+i
                F_field(i,j,k) = V4dg_trincore(F_addr + ind - 1)
             enddo
             enddo
             enddo
*
*         Diagnostics
*         -----------
          if(F_diag_L) write(Lun_out,*)
     %                 'WA FILE: waread ','Waf_adr = ',F_addr,'for ',F_name_S
*
*         Update address
*         --------------
          if(     F_adjoint_L) F_addr = F_addr - F_diff 
          if(.not.F_adjoint_L) F_addr = F_addr + l_ni*l_nj*Nk 
*
      endif
*
*     ---------------------------------------------------------------
*
      return
      end
