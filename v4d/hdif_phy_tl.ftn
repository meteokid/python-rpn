! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r hdif_phy_tl - TLM of hdif_phy 
*
#include "model_macros_f.h"
*
      subroutine hdif_phy_tl ()
*
      implicit none
*
*author M.Tanguay
*
*revision
* v3_03 - Tanguay M.        - initial MPI version
* v3_20 - Tanguay M.        - Remove V4dg_oktrtl_L
* v3_30 - Tanguay M.        - adapt to bcs
* v4_04 - Tanguay M.        - Staggered version TL/AD 
*
*object
*     see id section
*
*arguments
*
*implicits
#include "glb_ld.cdk"
#include "schm.cdk"
#include "ifd.cdk"
#include "lctl.cdk"
*
      if (Schm_psadj_L) call gem_stop('Schm_psadj_L NOT DONE in hdif_phy_TL',-1) 
*
*        Physics timestep & Horizontal diffusion & Vertical sponge
*        ---------------------------------------------------------
*
         if (Schm_hdlast_L) then
*
            if ( Schm_phyms_L ) call itf_phy_main_tl (Lctl_step)
*
            call   hzd_main_tl ()
            call vspng_main_tl ()
*
         else
*
            call   hzd_main_tl ()
*
            call vspng_main_tl ()
*
            if ( Schm_phyms_L ) call itf_phy_main_tl (Lctl_step)
*
         endif
*
         if ( .not. Schm_phyms_L ) call dummy_diag ()
*
      if (G_lam .and. ifd_ftype.ne.'BMF') then
*
*         Update Lateral BCs with data that has seen physics
*         --------------------------------------------------
          call nest_update
*
*         Impose Lateral BCs within Pil regions
*         -------------------------------------
          call nest_bcs
*
      endif
*
      return
      end
