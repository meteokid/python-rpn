***s/r nest_blen_tr - Equivalent to nest_blen for TRAJECTORY 
*
#include "model_macros_f.h"
*
      subroutine nest_blen_tr ()
      implicit none
*author 
*
*revision
*
*object
*
*arguments
*       none
*
*implicits
#include "glb_ld.cdk"
#include "vt1m.cdk"
#include "nestm.cdk"
#include "tr3d.cdk"
#include "schm.cdk"
#include "hblen.cdk"
*
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      integer err,key(26),i,j,k,nvar
      integer key1(Tr3d_ntr),key1_,key2(Tr3d_ntr),key2_, n
      real trm,tr1m
      pointer (patrm, trm(LDIST_SHAPE,*)),(patr1m,tr1m(LDIST_SHAPE,*))
*----------------------------------------------------------------------
*
      if ( (north+south+west+east.lt.1) .or.
     $    ((Hblen_x.le.0).and.(Hblen_y.le.0)) ) return
*
      key(1 )=VMM_KEY(nestm_um)
      key(2 )=VMM_KEY(nestm_vm)
      key(3 )=VMM_KEY(nestm_tm)
      key(4 )=VMM_KEY(nestm_psdm)
      key(5 )=VMM_KEY(nestm_pipm)
      key(6 )=VMM_KEY(nestm_fipm)
      key(7 )=VMM_KEY(nestm_tdm)
      key(8 )=VMM_KEY(nestm_fim)
      key(9 )=VMM_KEY(nestm_qm)
      key(10)=VMM_KEY(nestm_sm)
      key(11)=VMM_KEY(nestm_tpm)
      key(12)=VMM_KEY(ut1m)
      key(13)=VMM_KEY(vt1m)
      key(14)=VMM_KEY(tt1m)
      key(15)=VMM_KEY(psdt1m)
      key(16)=VMM_KEY(pipt1m)
      key(17)=VMM_KEY(fipt1m)
      key(18)=VMM_KEY(tdt1m)
      key(19)=VMM_KEY(fit1m)
      key(20)=VMM_KEY(qt1m)
      key(21)=VMM_KEY(st1m)
      key(22)=VMM_KEY(tpt1m)
      nvar = 22
*
      if (.not.Schm_hydro_L) then
         key(23)=VMM_KEY(nestm_wm)
         key(24)=VMM_KEY(nestm_mum)
         key(25)=VMM_KEY(wt1m)
         key(26)=VMM_KEY(mut1m)
         nvar = 26
      endif
*
      err = vmmlod(key,nvar)
      err = VMM_GET_VAR(nestm_um)
      err = VMM_GET_VAR(nestm_vm)
      err = VMM_GET_VAR(nestm_tm)
      err = VMM_GET_VAR(nestm_psdm)
      err = VMM_GET_VAR(nestm_pipm)
      err = VMM_GET_VAR(nestm_fipm)
      err = VMM_GET_VAR(nestm_tdm)
      err = VMM_GET_VAR(nestm_fim)
      err = VMM_GET_VAR(nestm_qm)
      err = VMM_GET_VAR(nestm_sm)
      err = VMM_GET_VAR(nestm_tpm)
      err = VMM_GET_VAR(ut1m)
      err = VMM_GET_VAR(vt1m)
      err = VMM_GET_VAR(tt1m)
      err = VMM_GET_VAR(psdt1m)
      err = VMM_GET_VAR(pipt1m)
      err = VMM_GET_VAR(fipt1m)
      err = VMM_GET_VAR(tdt1m)
      err = VMM_GET_VAR(fit1m)
      err = VMM_GET_VAR(qt1m)
      err = VMM_GET_VAR(st1m)
      err = VMM_GET_VAR(tpt1m)
      if (.not.Schm_hydro_L) then
         err = VMM_GET_VAR(nestm_wm)
         err = VMM_GET_VAR(nestm_mum)
         err = VMM_GET_VAR(wt1m)
         err = VMM_GET_VAR(mut1m)
      endif
*
      call nesajr (ut1m  ,nestm_um  ,LDIST_DIM,G_nk ,1,0,Hblen_x,Hblen_y)
      call nesajr (vt1m  ,nestm_vm  ,LDIST_DIM,G_nk ,0,1,Hblen_x,Hblen_y)
      call nesajr (tdt1m ,nestm_tdm ,LDIST_DIM,G_nk ,0,0,Hblen_x,Hblen_y)
      call nesajr (psdt1m,nestm_psdm,LDIST_DIM,G_nk ,0,0,Hblen_x,Hblen_y)
      call nesajr (tt1m  ,nestm_tm  ,LDIST_DIM,G_nk ,0,0,Hblen_x,Hblen_y)
      call nesajr (tpt1m ,nestm_tpm ,LDIST_DIM,G_nk ,0,0,Hblen_x,Hblen_y)
      call nesajr (fit1m ,nestm_fim ,LDIST_DIM,G_nk ,0,0,Hblen_x,Hblen_y)
      call nesajr (fipt1m,nestm_fipm,LDIST_DIM,G_nk ,0,0,Hblen_x,Hblen_y)
      call nesajr (qt1m  ,nestm_qm  ,LDIST_DIM,G_nk ,0,0,Hblen_x,Hblen_y)
      call nesajr (pipt1m,nestm_pipm,LDIST_DIM,G_nk ,0,0,Hblen_x,Hblen_y)
      call nesajr (st1m  ,nestm_sm  ,LDIST_DIM,   1 ,0,0,Hblen_x,Hblen_y)
*
      if (.not. Schm_hydro_L) then
         call nesajr (wt1m  ,nestm_wm  ,LDIST_DIM,G_nk,0,0,Hblen_x,Hblen_y)
         call nesajr (mut1m ,nestm_mum ,LDIST_DIM,G_nk,0,0,Hblen_x,Hblen_y)
      endif
      err = vmmuld(key,nvar)
*
      key2_ = VMM_KEY (nestm_trm)
      key1_ = VMM_KEY (trt1m)
      do n=1,Tr3d_ntr
         key2(n) = key2_ + n
         key1(n) = key1_ + n
      end do
      if (Tr3d_ntr.gt.0) then
         err = vmmlod(key2,Tr3d_ntr)
         err = vmmlod(key1,Tr3d_ntr)
         do n=1,Tr3d_ntr
            err = vmmget(key2(n),patrm,trm)
            err = vmmget(key1(n),patr1m,tr1m)
            call nesajr (tr1m, trm, LDIST_DIM,G_nk,0,0,Hblen_x,Hblen_y)
         enddo
         err = vmmuld(key1,Tr3d_ntr)
         err = vmmuld(key2,Tr3d_ntr)
      endif
*
*----------------------------------------------------------------------
      return
      end
