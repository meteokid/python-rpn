!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r t02t1_tl -  TLM of t02t1 
*
#include "model_macros_f.h"
*
      subroutine t02t1_tl
*
      implicit none
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_30 - Edouard S.        - remove pi' at the top (pptt0,pptt1)
* v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate
*                           - adapt for tracers in tr3d  
* v3_03 - Tanguay M.        - Adjoint NoHyd configuration 
* v4_04 - Tanguay M.        - Staggered version TL/AD 
* v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
*
*object
*     see id section
*
*arguments
*     none
*
*implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "schm.cdk"
#include "tr3d.cdk"
#include "vt0.cdk"
#include "vt1.cdk"
#include "vt0_m.cdk"
#include "vt1_m.cdk"
*     ______________________________________________________
      character(len=8) , dimension(2), parameter :: ut_list  = (/ 'UT0', 'UT1' /)
      character(len=8) , dimension(2), parameter :: vt_list  = (/ 'VT0', 'VT1' /)
      character(len=8) , dimension(2), parameter :: wt_list  = (/ 'WT0', 'WT1' /)
      character(len=8) , dimension(2), parameter :: tt_list  = (/ 'TT0', 'TT1' /)
      character(len=8) , dimension(2), parameter :: zdt_list = (/ 'ZDT0', 'ZDT1' /)
      character(len=8) , dimension(2), parameter :: st_list  = (/ 'ST0', 'ST1' /)
      character(len=8) , dimension(2), parameter :: qt_list  = (/ 'QT0', 'QT1' /)
      character(len=8) , dimension(2) :: tr_list
*
      character(len=8) , dimension(2), parameter :: ut_list_m  = (/ 'UT0_M', 'UT1_M' /)
      character(len=8) , dimension(2), parameter :: vt_list_m  = (/ 'VT0_M', 'VT1_M' /)
      character(len=8) , dimension(2), parameter :: wt_list_m  = (/ 'WT0_M', 'WT1_M' /)
      character(len=8) , dimension(2), parameter :: tt_list_m  = (/ 'TT0_M', 'TT1_M' /)
      character(len=8) , dimension(2), parameter :: zdt_list_m = (/ 'ZDT0_M', 'ZDT1_M' /)
      character(len=8) , dimension(2), parameter :: st_list_m  = (/ 'ST0_M', 'ST1_M' /)
      character(len=8) , dimension(2), parameter :: qt_list_m  = (/ 'QT0_M', 'QT1_M' /)
      character(len=8) , dimension(2) :: tr_list_M
*
      integer i
*     ______________________________________________________
*
*
*     TRAJECTORY
*     ----------
      gmmstat = gmm_shuffle( ut_list_m)
      gmmstat = gmm_shuffle( vt_list_m)
      gmmstat = gmm_shuffle( wt_list_m)
      gmmstat = gmm_shuffle( tt_list_m)
      gmmstat = gmm_shuffle(zdt_list_m)
      gmmstat = gmm_shuffle( st_list_m)
*
      if (.not. Schm_hydro_L) then
         gmmstat = gmm_shuffle(qt_list_M)
      endif
*
      do i=1,Tr3d_ntr
         tr_list_m(1) = 'TRM/'//trim(Tr3d_name_S(i))//':M'
         tr_list_m(2) = 'TRM/'//trim(Tr3d_name_S(i))//':P'
         gmmstat = gmm_shuffle(tr_list_m)
      end do
*
*     TLM
*     ---
      gmmstat = gmm_shuffle( ut_list)
      gmmstat = gmm_shuffle( vt_list)
      gmmstat = gmm_shuffle( wt_list)
      gmmstat = gmm_shuffle( tt_list)
      gmmstat = gmm_shuffle(zdt_list)
      gmmstat = gmm_shuffle( st_list)
*
      if (.not. Schm_hydro_L) then
         gmmstat = gmm_shuffle(qt_list)
      endif
*
      do i=1,Tr3d_ntr
         tr_list(1) = 'TR/'//trim(Tr3d_name_S(i))//':M'
         tr_list(2) = 'TR/'//trim(Tr3d_name_S(i))//':P'
         gmmstat = gmm_shuffle(tr_list)
      end do
*
      return
      end
