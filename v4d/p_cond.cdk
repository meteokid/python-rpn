!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
#if defined (DOC)
*
***comdeck p_cond.cdk
*
*______________________________________________________________________
*                                                                      |
*  OUTPUT GLOBAL CONTROL VARIABLES                                     |
*______________________________________________________________________|
*                    |                                                 |
* NAME               | DESCRIPTION                                     |
*--------------------|-------------------------------------------------|
* P_cond_conv_s      | CONVEC: convection scheme name                  |
* P_cond_stcon_s     | STCOND: condensation scheme name                |
* P_cond_shlct_s     | SCHLCVT: shallow convection names               |
* P_cond_satu_L      | SATUCO: .true. water/ice phase for saturation   |
*                    |         .false. water phase only for saturation |
* P_cond_ilwc_L      | INILWC: to initialize water content and cloud   |
*                    |         fraction at time 0 for Sundqvist schemes|
* P_cond_filtend     | number of passes into 2 delta x filter          |
*   The following variables defines the central window and the blending|
* region where different condensation schemes will be used             |
* P_cond_dzsedi      | minimal thickness of the sedimentation layer    |
* P_cond_xofset      | for FCPKUO option only                          |
*                    | number of columns from the edges of the grid    |
*                    | where only KUOSYM is requested (left, right)    |
* P_cond_xblnd       | for FCPKUO option only                          |
*                    | number of columns where both schemes are        |
*                    | requested (blending region)                     |
* P_cond_yofset      | for FCPKUO option only                          |
*                    | number of rows from the edges of the grid where |
*                    | only KUOSYM is requested (bottom,top)           |
* P_cond_yblnd       | for FCPKUO option only                          |
*                    | number of rows where both schemes are requested |
*                    | (blending region)                               |
* P_cond_hc          | 0.0 -> 1.0; threshold relative humidity for     |
*                    |             onset of moist convective adjustment|
* P_cond_hf          | 0.0 -> 1.0; threshold relative humidity for     |
*                    |             upward moisture flux during         |
*                    |                            convective adjustment|
* P_cond_hm          | 0.0 -> 1.0; an input in the calculation of the  |
*                    |             saturation relative humidity for the|
*                    |             first iteration                     |
* P_cond_filco       | filtering coefficients                          |
* P_cond_kfcmom_L    | KFCMOM : true if want convective transport      |
*                    |          of momentum                            |
* P_cond_kfctrig4    | trigger parameters in KF (Kain Fritsch)         |
*                    |                                                 |
* P_cond_kfcrad      | initial convective updraft radius in KF (metres)|
*                    |                                                 |
* P_cond_kfcdepth    | minimum depth of convective updraft in KF (m)   |
*                    |                                                 |
* P_cond_kfcdlev     | 0.0 -> 1.0 ; initial level of forced detrainment|
*                    |              in KF (between cloud base and top) |
* P_cond_kfcdet      | 0.0 -> 1.0 ; total forced detrainment in FK.    |
*                    |              fraction of upward mass flux       |
* P_cond_kfctimec    | convective time scale in KF                     |  
*                    |                                                 |
* P_cond_kfctimea    | convective time adjustment in KF                |
*                    |                                                 |
* P_cond_kfcpcp_s    | conservation of precipitation in kfcp           |
*                    |                                                 |
* P_cond_kticefrac_L | KTICEFRAC=true, if want to use the calculation  |
*                    |           of ice fraction                       |
*                    |                                                 |
* P_cond_kkl         | sedimentation threshold in mixphase             |
*                    |                                                 |
* P_cond_pcptype_s   | PCPTYPE: Precipitation type diagnostic          |
*----------------------------------------------------------------------
#endif

      character*16 P_cond_conv_s , P_cond_stcon_s, P_cond_shlct_s(2),
     $            p_cond_kfcpcp_s, P_cond_pcptype_s
      logical P_cond_satu_L   ,P_cond_ilwc_L, P_cond_kfcmom_L,
     $        P_cond_kticefrac_L
      integer P_cond_filtend, P_cond_xofset,
     $        P_cond_xblnd  , P_cond_yofset, P_cond_yblnd
      real P_cond_hc, P_cond_hf, P_cond_hm, P_cond_filco, P_cond_dzsedi,
     $     P_cond_kfctrig4(4), P_cond_kfcrad, P_cond_kfcdepth, 
     $     P_cond_kfcdlev, P_cond_kfcdet, P_cond_kfctimec,
     $     P_cond_kfctimea,P_cond_kkl
*
      MARK_COMMON_BEG (pcond_c)
      common /pcond_c/ P_cond_conv_s, P_cond_stcon_s, 
     $                 P_cond_shlct_s,P_cond_kfcpcp_s, P_cond_pcptype_s
      MARK_COMMON_END (pcond_c)

      MARK_COMMON_BEG (pcond_l)
      common /pcond_l/ P_cond_satu_L, P_cond_ilwc_L, P_cond_kfcmom_L,
     $                 P_cond_kticefrac_L
      MARK_COMMON_END (pcond_l)

      MARK_COMMON_BEG (pcond_i)
      common /pcond_i/ P_cond_filtend, P_cond_xofset,
     $                 P_cond_xblnd  , P_cond_yofset, P_cond_yblnd
      MARK_COMMON_END (pcond_i)

      MARK_COMMON_BEG (pcond_r)
      common /pcond_r/ P_cond_hc, P_cond_hf, P_cond_hm, P_cond_filco, 
     $                 P_cond_dzsedi,   P_cond_kfctrig4, P_cond_kfcrad, 
     $                 P_cond_kfcdepth, P_cond_kfcdlev, P_cond_kfcdet, 
     $                 P_cond_kfctimec, P_cond_kfctimea,P_cond_kkl
      MARK_COMMON_END (pcond_r)
*
      DCL_DYNVAR(P_cond, fcpf ,  real, (l_ni,l_nj))
      DCL_DYNVAR(P_cond, fcpw ,  real, (l_ni,l_nj))

