! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r indata_ad - ADJ of indata_tl 
*
#include "model_macros_f.h"
*
      subroutine indata_ad
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v3_03 - Tanguay M.        - initial MPI version
* v3_30 - Tanguay M.        - adapt to bcs
* v4_04 - Tanguay M.        - Staggered version TL/AD 
* v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
*
*object
*     see id section
*
*arguments
*     none
*
*implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "schm.cdk"
#include "glb_ld.cdk"
#include "v4dg.cdk"
#include "ind.cdk"
#include "ind_m.cdk"
#include "p_geof.cdk"
#include "vt1.cdk"
#include "vtx.cdk"
#include "vt1_m.cdk"
#include "vtx_m.cdk"
#include "vtopo.cdk"
*
*     ______________________________________________________
*
      if (Vtopo_L) call gem_stop ('Vtopo NOT DONE in indata_AD',-1)
*
*     ----------------------------------------
*     Recover TRAJ initial state
*     for Preprocessing of Dependent variables
*     ----------------------------------------
      call v4d_rwtraj (1)
*
*     ADJ of
*     -------------------------------------------------
*     Performs preprocessing of the dynamics input data
*     -------------------------------------------------
*
*     Get VMM fields in memory
*     ------------------------
      gmmstat = gmm_get(gmmk_ut1_s,ut1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(ut1)'
      gmmstat = gmm_get(gmmk_vt1_s,vt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(vt1)'
      gmmstat = gmm_get(gmmk_wt1_s,wt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(wt1)'
      gmmstat = gmm_get(gmmk_tt1_s,tt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(tt1)'
      gmmstat = gmm_get(gmmk_zdt1_s,zdt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(zdt1)'
      gmmstat = gmm_get(gmmk_st1_s,st1,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(st1)'
      gmmstat = gmm_get(gmmk_fiptx_s,fiptx,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(fiptx)'
      gmmstat = gmm_get(gmmk_topo_s,topo,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(topo)'
*
      if (Vtopo_L) then
         gmmstat = gmm_get(gmmk_dtopo_s,dtopo,meta2d)
         if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(dtopo)'
      endif
*
      if (.not. Schm_hydro_L) then
         gmmstat = gmm_get(gmmk_qt1_s,qt1,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(qt1)'
      endif
*
*     TRAJECTORY
*     ----------
      gmmstat = gmm_get(gmmk_tt1_m_s,tt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(tt1_m)'
      gmmstat = gmm_get(gmmk_st1_m_s,st1_m,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(st1_m)'
*
      if (.not. Schm_hydro_L) then
          gmmstat = gmm_get(gmmk_qt1_m_s,qt1_m,meta3d)
          if (GMM_IS_ERROR(gmmstat)) print *,'indata_ad ERROR at gmm_get(qt1_m)'
      endif
*
*       ADJ of Preprocessing of Dependent variables only if V4dg_part=3
*       ---------------------------------------------------------------
        call v4d_predat_ad (ut1,  vt1,  tt1,  zdt1,  st1,  qt1,  wt1,  fiptx, topo,
     $                      tt1_m,st1_m,qt1_m,l_minx,l_maxx,l_miny,l_maxy)
*
*     ---------------------------------------------------------------
*
      return
      end
