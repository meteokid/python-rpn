!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r gem_run_tl - TLM of gem_run 
*
#include "model_macros_f.h"
*
      subroutine gem_run_tl (F_dgtflt_L, F_rstrt_L)
*
      implicit none
*
      logical F_dgtflt_L, F_rstrt_L
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_21 - Tanguay M.        - modification as in gem_run
* v2_31 - Tanguay M.        - adapt ADJ to diffusion in gem_run 
* v3_00 - Ek N./Tanguay M.  - introduce v4d_ctrlcst
* v3_00 - Laroche S.        - include simplified physics
* v3_01 - Tanguay M.        - introduce identity option
* v3_02 - Tanguay M.        - TLM of Hspng_main done
* v3_02 - Tanguay M.        - cosmetics for identity option  
* v3_02 - Buehner M.        - added call to v4d_calcenergy for SV job
*                           - integration stops at V4dg_steplast
* v3_03 - Tanguay M.        - Call hdif_phy
* v3_11 - Tanguay M.        - Extend TRAJ for conversion for DYNOUT2 
*                           - ADJ of digital filter
* v3_20 - Tanguay M.        - Adjoint Surfix  
*                           - Introduce Hzd_hdif0_L
* v3_30 - Tanguay M.        - Adapt TL/AD to Clim_clima_L  
* v3_30 - Tanguay M.        - Adapt TL/AD to out_dyn  
* v4_04 - Tanguay M.        - Staggered version TL/AD 
* v4_12 - Spacek  L.        - GMM physics interface
* v4_12 - Tanguay M.        - Reset Communication 3D_Var-(TL/AD)
*
*object
*     see id section
*
*arguments
*  Name        I/O                 Description
*----------------------------------------------------------------
* F_dgtflt_L    I         Digital initiatization mode
* F_rstrt_L     O         Is a restart required
*----------------------------------------------------------------
*
*implicits
#include "lun.cdk"
#include "lctl.cdk"
#include "v4dg.cdk"
*
      logical bkup_L,identity_4dvar_L
      integer last_step,fstep,istep,step0,stepf
**
*     ---------------------------------------------------------------
*
      if (V4dg_output_L) then
*
          call blocstat ()
*
*         Read TRAJ variables for Output on Standard file of dependent variables
*         ----------------------------------------------------------------------
          call v4d_rwtraj (46)
*
          call v4d_out_dyn  (.true.,-1)
*
      endif
*
      fstep = V4dg_steplast 
*
      identity_4dvar_L = V4dg_conf.ne.0 .and. V4dg_identity_L
*
*C    4D-Var: Control Cost function at INITIAL time
*     ---------------------------------------------
*
*        Read TRAJ variables for conversion from 3D-Var to GEM variables (or vis-versa)
*        ------------------------------------------------------------------------------
         call v4d_rwtraj (41)
*
         call v4d_ctrlcst
*
      call pw_update_tl (.true.)

      step0 = Lctl_step+1
      stepf = V4dg_steplast 
*
      do istep = step0, stepf
*
         Lctl_step = istep
*
*C    Incrementing timestep
*
         if (Lun_out.gt.0) write (Lun_out,1001) Lctl_step,fstep
*
*C    Diffusion, Dynamics and Physics
*     -------------------------------
         if ( .not.identity_4dvar_L ) then
*
*        Dynamics timestep
*        -----------------
         call dynstep_tl

         call pw_update_tl (.false.)
*
*        Physics timestep & Horizontal diffusion & Vertical sponge
*        ---------------------------------------------------------
         call hdif_phy_tl
*
         endif
*
*C    4D-Var: Control Cost function at .NOT.INITIAL time
*     --------------------------------------------------
*
*        Read TRAJ variables for conversion from 3D-Var to GEM variables (or vis-versa)
*        ------------------------------------------------------------------------------
         call v4d_rwtraj (41)
*
         call v4d_ctrlcst
*
*C    Perform output if required
*     --------------------------
         if (V4dg_output_L) then
*
             call blocstat ()
*
*            Read TRAJ variables for Output on Standard file of dependent variables
*            ----------------------------------------------------------------------
             call v4d_rwtraj (46)
*
             call v4d_out_dyn  (.true.,-1)
*
         endif
*
         if (Lun_out.gt.0) write(Lun_out,3000) Lctl_step
*
      end do
*
      if (Lun_out.gt.0) write(Lun_out,4000) Lctl_step
*
 1001 format(/,'GEM_RUN_TL: PERFORMING TIMESTEP #',I8,' OUT OF ',I8,
     +       /,'===================================================')
 3000 format(/,'THE TIME STEP ',I8,' IS COMPLETED')
 4000 format(/,'END OF THE TIME LOOP (S/R GEM_RUN_TL) AT TIMESTEP',I8,
     +/,'========================================================')
*
*     ---------------------------------------------------------------
*
      return
      end
