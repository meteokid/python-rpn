!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r t12t2_tl -  TLM of t12t2 
*
#include "model_macros_f.h"
*
      subroutine t12t2_tl
*
#include "impnone.cdk"
*
*author
*     M.Tanguay
*
*revision
* v2_10 - Tanguay M.        - initial MPI version
* v2_30 - Edouard S.        - remove pi' at the top (pptt1,pptt2)
* v2_31 - Tanguay M.        - adapt for vertical hybrid coordinate
*                           - adapt for tracers in tr3d  
* v3_03 - Tanguay M.        - Adjoint NoHyd configuration 
*
*object
*     see id section
*
*arguments
*     none
*
*implicits
#include "glb_ld.cdk"
#include "schm.cdk"
#include "tr3d.cdk"
#include "vt1.cdk"
#include "vt2.cdk"
#include "vt1m.cdk"
#include "vt2m.cdk"
*     ______________________________________________________
*
*C       1.    Change all variable names and exchange their keys
*              -------------------------------------------------
*
*     TRAJECTORY
*     ----------
      call shuffle(vmmk_ut2m   ,vmmk_ut1m   ,vmmk_ut2m_s)
      call shuffle(vmmk_vt2m   ,vmmk_vt1m   ,vmmk_vt2m_s)
      call shuffle(vmmk_wt2m   ,vmmk_wt1m   ,vmmk_wt2m_s)
      call shuffle(vmmk_tdt2m  ,vmmk_tdt1m  ,vmmk_tdt2m_s)
      call shuffle(vmmk_tt2m   ,vmmk_tt1m   ,vmmk_tt2m_s)
      call shuffle(vmmk_fit2m  ,vmmk_fit1m  ,vmmk_fit2m_s)
      call shuffle(vmmk_qt2m   ,vmmk_qt1m   ,vmmk_qt2m_s)
      call shuffle(vmmk_tpt2m  ,vmmk_tpt1m  ,vmmk_tpt2m_s)
      call shuffle(vmmk_fipt2m ,vmmk_fipt1m ,vmmk_fipt2m_s)
      call shuffle(vmmk_qpt2m  ,vmmk_qpt1m  ,vmmk_qpt2m_s)
      call shuffle(vmmk_pipt2m ,vmmk_pipt1m ,vmmk_pipt2m_s)
      call shuffle(vmmk_tplt2m ,vmmk_tplt1m ,vmmk_tplt2m_s)
      call shuffle(vmmk_psdt2m ,vmmk_psdt1m ,vmmk_psdt2m_s)
      call shuffle(vmmk_st2m   ,vmmk_st1m   ,vmmk_st2m_s)
*
      if (.not. Schm_hydro_L) then
         call shuffle(vmmk_mut2m ,vmmk_mut1m ,vmmk_mut2m_s)
      endif
      if ( Tr3d_ntr .gt. 0 ) then
         call shuffle(vmmk_trt2m  ,vmmk_trt1m  ,vmmk_trt2m_s)
      endif
*
*     TLM 
*     ---
      call shuffle(vmmk_ut2   ,vmmk_ut1   ,vmmk_ut2_s)
      call shuffle(vmmk_vt2   ,vmmk_vt1   ,vmmk_vt2_s)
      call shuffle(vmmk_wt2   ,vmmk_wt1   ,vmmk_wt2_s)
      call shuffle(vmmk_tdt2  ,vmmk_tdt1  ,vmmk_tdt2_s)
      call shuffle(vmmk_tt2   ,vmmk_tt1   ,vmmk_tt2_s)
      call shuffle(vmmk_fit2  ,vmmk_fit1  ,vmmk_fit2_s)
      call shuffle(vmmk_qt2   ,vmmk_qt1   ,vmmk_qt2_s)
      call shuffle(vmmk_tpt2  ,vmmk_tpt1  ,vmmk_tpt2_s)
      call shuffle(vmmk_fipt2 ,vmmk_fipt1 ,vmmk_fipt2_s)
      call shuffle(vmmk_qpt2  ,vmmk_qpt1  ,vmmk_qpt2_s)
      call shuffle(vmmk_pipt2 ,vmmk_pipt1 ,vmmk_pipt2_s)
      call shuffle(vmmk_tplt2 ,vmmk_tplt1 ,vmmk_tplt2_s)
      call shuffle(vmmk_psdt2 ,vmmk_psdt1 ,vmmk_psdt2_s)
      call shuffle(vmmk_st2   ,vmmk_st1   ,vmmk_st2_s)
*
      if (.not. Schm_hydro_L) then
         call shuffle(vmmk_mut2 ,vmmk_mut1 ,vmmk_mut2_s)
      endif
      if ( Tr3d_ntr .gt. 0 ) then
         call shuffle(vmmk_trt2  ,vmmk_trt1  ,vmmk_trt2_s)
      endif
*
*     ---------------------------------------------------------------
*
      return
      end
