!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r indata_tl - TLM of indata 
*
#include "model_macros_f.h"
*
      subroutine indata_tl
*
      implicit none
*
*author
*     M.Tanguay
*
*revision
* v3_03 - Tanguay M.        - initial MPI version
* v3_30 - Tanguay M.        - adapt to bcs
* v4_04 - Tanguay M.        - Staggered version TL/AD 
* v4_10 - Tanguay M.        - VMM replacement with GMM for (TL/AD)
* v4_12 - Tanguay M.        - Adapt to revised predat
* v4_XX - Tanguay M.        - Adjustments GEM413 .not. Schm_hydro_L 
*
*object
*     see id section
*
*arguments
*     none
*
*implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "schm.cdk"
#include "glb_ld.cdk"
#include "v4dg.cdk"
#include "p_geof.cdk"
#include "vt1.cdk"
#include "vtx.cdk"
#include "vt1_m.cdk"
#include "vtx_m.cdk"
#include "vtopo.cdk"
*
      integer i,j,k
*     ______________________________________________________
*
      if (Vtopo_L) call handle_error(-1,'indata_tl','Vtopo_L not done')
*
*     ----------------------------------------
*     Recover TRAJ initial state
*     for Preprocessing of Dependent variables
*     ----------------------------------------
      call v4d_rwtraj (1)
*
*     Get VMM fields in memory
*     ------------------------
      gmmstat = gmm_get(gmmk_ut1_s,ut1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(ut1)'
      gmmstat = gmm_get(gmmk_vt1_s,vt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(vt1)'
      gmmstat = gmm_get(gmmk_wt1_s,wt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(wt1)'
      gmmstat = gmm_get(gmmk_tt1_s,tt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(tt1)'
      gmmstat = gmm_get(gmmk_zdt1_s,zdt1,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(zdt1)'
      gmmstat = gmm_get(gmmk_st1_s,st1,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(st1)'
      gmmstat = gmm_get(gmmk_fiptx_s,fiptx,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(fiptx)'
      gmmstat = gmm_get(gmmk_topo_s,topo,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(topo)'
*
      if (.not. Schm_hydro_L) then
         gmmstat = gmm_get(gmmk_qt1_s,qt1,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(qt1)'
      else
         nullify (qt1)
      endif
*
      if (Vtopo_L) then
         gmmstat = gmm_get(gmmk_dtopo_s,dtopo,meta2d)
         if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(dtopo)'
      endif
*
*     TRAJECTORY
*     ----------
      gmmstat = gmm_get(gmmk_ut1_m_s,ut1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(ut1_m)'
      gmmstat = gmm_get(gmmk_vt1_m_s,vt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(vt1_m)'
      gmmstat = gmm_get(gmmk_wt1_m_s,wt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(wt1_m)'
      gmmstat = gmm_get(gmmk_tt1_m_s,tt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(tt1_m)'
      gmmstat = gmm_get(gmmk_zdt1_m_s,zdt1_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(zdt1_m)'
      gmmstat = gmm_get(gmmk_st1_m_s,st1_m,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(st1_m)'
      gmmstat = gmm_get(gmmk_fiptx_m_s,fiptx_m,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(fiptx_m)'
*
      if (.not. Schm_hydro_L) then
         gmmstat = gmm_get(gmmk_qt1_m_s,qt1_m,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'indata_tl ERROR at gmm_get(qt1_m)'
      else
         nullify (qt1_m)
      endif
*
*     -------------------------------------------------
*     Performs preprocessing of the dynamics input data
*     -------------------------------------------------
*
*     TLM of Preprocessing of Dependent variables only if V4dg_part=3
*     ---------------------------------------------------------------
      call v4d_predat_tl (ut1  ,vt1  ,tt1  ,zdt1  ,st1  ,fiptx  ,wt1  ,qt1  ,
     $                    ut1_m,vt1_m,tt1_m,zdt1_m,st1_m,fiptx_m,wt1_m,qt1_m,topo,
     $                    l_minx,l_maxx,l_miny,l_maxy)
*
*     ---------------------------------------------------------------
*
      return
      end
