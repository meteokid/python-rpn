! ------------------------------------------------------------------------------------------------------------------------------
! EC-RPN COMM Group License/Disclaimer, version 2, Last Modified: Jan 08th, 2008 , Environment Canada
! 
! This is free software, you can use/redistribute/modify it under the terms of the EC-RPN COMM Group License/Disclaimer version 2 
! or (at your option) any later version that should be found at http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
! 
! This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the EC-RPN COMM Group License/Disclaimer for more details.
! 
! You should have received a copy of the EC-RPN COMM Group License/Disclaimer along with this software; if not, write to the
! EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), CANADA, H9P 1J3 ; or send e-mail to service.rpn@ec.gc.ca
! ------------------------------------------------------------------------------------------------------------------------------
***s/r v4d_zeronest -- Zero nesting data
*
#include "model_macros_f.h"

      subroutine v4d_zeronest
*
      implicit none
*
*author
*     Monique Tanguay
*
*revision
* v3_03 - Tanguay M.       - initial MPI version
* v3_30 - Tanguay M.       - Validation for LAM version 
* v4_04 - Tanguay M.       - Staggered version TL/AD 
*
*object
*     see id section
*
*arguments
*
*implicits
#include "glb_ld.cdk"
#include "tr3d.cdk"
#include "nest.cdk"
#include "schm.cdk"
*
*modules
      integer  vmmlod,vmmget,vmmuld
      external vmmlod,vmmget,vmmuld
*
      real trf
      pointer (patrf, trf(LDIST_SHAPE,*))
      integer i,j,k,err,pnlkey1(26),pnlod,key2(Tr3d_ntr),key2_,n
      real*8, parameter :: ZERO_8 = 0.0
*     ---------------------------------------------------------------
*
      pnlkey1( 1)=VMM_KEY(nest_u  )
      pnlkey1( 2)=VMM_KEY(nest_v  )
      pnlkey1( 3)=VMM_KEY(nest_w  )
      pnlkey1( 4)=VMM_KEY(nest_t  )
      pnlkey1( 5)=VMM_KEY(nest_zd )
      pnlkey1( 6)=VMM_KEY(nest_s  )
      pnlod =  6
*
      if (.not. Schm_hydro_L) then
          pnlkey1(pnlod+1)=VMM_KEY(nest_q )
          pnlod = pnlod+1
      endif
*
      err = vmmlod(pnlkey1,pnlod)
      err = VMM_GET_VAR(nest_u  )
      err = VMM_GET_VAR(nest_v  )
      err = VMM_GET_VAR(nest_w  )
      err = VMM_GET_VAR(nest_t  )
      err = VMM_GET_VAR(nest_zd )
      err = VMM_GET_VAR(nest_s  )
*
      if (.not. Schm_hydro_L) then
          err = VMM_GET_VAR(nest_q )
      endif
*
      nest_u = ZERO_8 
      nest_v = ZERO_8 
      nest_w = ZERO_8 
      nest_t = ZERO_8 
      nest_zd= ZERO_8 
      nest_s = ZERO_8 
*
      if (.not. Schm_hydro_L) nest_q = ZERO_8
*
      err = vmmuld(pnlkey1,pnlod)
*
      key2_ = VMM_KEY (nest_tr)
      do n=1,Tr3d_ntr
         key2(n) = key2_ + n
      end do
      if (Tr3d_ntr.gt.0) then
         err = vmmlod(key2,Tr3d_ntr)
         do n=1,Tr3d_ntr
            err = vmmget(key2(n),patrf,trf)
            do k= 1, l_nk+2
            do j= l_miny, l_maxy 
            do i= l_minx, l_maxx
               trf (i,j,k) = ZERO_8 
            end do
            end do
            end do
         end do
         err = vmmuld(key2,Tr3d_ntr)
      endif
*
*     ---------------------------------------------------------------
      return
      end

