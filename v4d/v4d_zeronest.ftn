!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r v4d_zeronest -- Zero nesting data
*
#include "model_macros_f.h"

      subroutine v4d_zeronest
*
      implicit none
*
*author
*     Monique Tanguay
*
*revision
* v3_03 - Tanguay M.       - initial MPI version
* v3_30 - Tanguay M.       - Validation for LAM version 
* v4_04 - Tanguay M.       - Staggered version TL/AD 
* v4_10 - Tanguay M.       - VMM replacement with GMM for (TL/AD)
*
*object
*     see id section
*
*implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "tr3d.cdk"
#include "nest.cdk"
#include "schm.cdk"
*
      integer i,j,k,n
      real, pointer, dimension(:,:,:) :: trn
      real*8, parameter :: ZERO_8 = 0.0
*     ---------------------------------------------------------------
*
      gmmstat = gmm_get(gmmk_nest_u_s ,nest_u ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zeronest ERROR at gmm_get(nest_u)'
      gmmstat = gmm_get(gmmk_nest_v_s ,nest_v ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zeronest ERROR at gmm_get(nest_v)'
      gmmstat = gmm_get(gmmk_nest_w_s ,nest_w ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zeronest ERROR at gmm_get(nest_w)'
      gmmstat = gmm_get(gmmk_nest_t_s ,nest_t ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zeronest ERROR at gmm_get(nest_t)'
      gmmstat = gmm_get(gmmk_nest_zd_s,nest_zd,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zeronest ERROR at gmm_get(nest_zd)'
      gmmstat = gmm_get(gmmk_nest_s_s ,nest_s ,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zeronest ERROR at gmm_get(nest_s)'

      if (.not.Schm_hydro_L) then
         gmmstat = gmm_get(gmmk_nest_q_s,nest_q,meta3d)
         if (GMM_IS_ERROR(gmmstat)) print *,'v4d_zeronest ERROR at gmm_get(nest_q)'
      endif
*
      nest_u = ZERO_8 
      nest_v = ZERO_8 
      nest_w = ZERO_8 
      nest_t = ZERO_8 
      nest_zd= ZERO_8 
      nest_s = ZERO_8 
*
      if (.not. Schm_hydro_L) nest_q = ZERO_8
*
      do n=1,Tr3d_ntr
*
         gmmstat = gmm_get('NEST/'//trim(Tr3d_name_S(n))//':C',trn,meta3d)
*
         do k= 1, l_nk+2
         do j= l_miny, l_maxy 
         do i= l_minx, l_maxx
            trn (i,j,k) = ZERO_8 
         end do
         end do
         end do
*
      enddo
*
*     ---------------------------------------------------------------
      return
      end
