!-------------------------------------- LICENCE BEGIN -------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END ---------------------------
#include "constants.h"
#include "msg.h"
#include "stop_mpi.h"

subroutine adx_pos_glb_ad()
   call stop_mpi(STOP_ERROR,'adx_pos_glb_ad','called a stub')
   return
end subroutine adx_pos_glb_ad

subroutine adx_pos_glb2_ad()
   call stop_mpi(STOP_ERROR,'adx_pos_glb2_ad','called a stub')
   return
end subroutine adx_pos_glb2_ad

!/**
subroutine adx_pos_glb3_ad(F_wrkx1  ,F_wrky1  ,F_u1  ,F_u2  ,F_xth  ,F_yth  ,F_zth  , &
                                               F_u1_m,F_u2_m,F_xth_m,F_yth_m,F_zth_m, & 
                           F_dth, F_has_u2_L, F_i0,F_in,F_j0,F_jn, &
                           F_ni,F_nj,F_aminx, F_amaxx, F_aminy, F_amaxy,F_nk, F_nk_super)
   implicit none
   !@objective ADJ of adx_pos_glb
   !@arguments
   logical :: F_has_u2_L           !I, .T. if F_u2 needs to be treated
   real    :: F_dth                !I, factor (1. or timestep)
   integer :: F_nk, F_nk_super     !I, number of vertical levels
   integer :: F_aminx, F_amaxx, F_aminy, F_amaxy !I, wind fields array bounds
   integer :: F_ni, F_nj           !I, dims of position fields
   integer :: F_i0,F_in,F_j0,F_jn  !I, operator scope
   real, dimension(F_ni,F_nj,F_nk) :: F_xth,F_yth !I/O, x,y positions
   real, dimension(F_ni,F_nj,F_nk) :: F_zth       !I, z positions
   real, dimension(F_ni,F_nj,F_nk) :: F_xth_m,F_yth_m !I/O, x,y positions TRAJ
   real, dimension(F_ni,F_nj,F_nk) :: F_zth_m         !I, z positions TRAJ
   real, dimension(F_aminx:F_amaxx,F_aminy:F_amaxy,F_nk_super) :: &
        F_u1  ,F_u2  , &   !I, field to interpol
        F_u1_m,F_u2_m      !I, field to interpol TRAJ
   real, dimension(F_ni,F_nj,F_nk) :: F_wrkx1  ,F_wrky1 !O, F_dt * result of interp
   !@author monique tanguay
   !@revisions
   ! v4_XX - Tanguay M.        - Adjustments GEM413
   !**/
#include "adx_nml.cdk"
#include "adx_dims.cdk"
#include "adx_poles.cdk"
   !---------------------------------------------------------------------
      
   IF_FRO_A: if (adx_fro_a > 0) then

   ! NOT DONE YET

   endif IF_FRO_A

   call adx_trilin_opt3_ad(F_wrkx1  ,F_wrky1  ,F_u1  ,F_u2  ,F_xth  ,F_yth  ,F_zth  , &
                                               F_u1_m,F_u2_m,F_xth_m,F_yth_m,F_zth_m, &
                           F_dth, F_has_u2_L, F_i0,F_in,F_j0,F_jn, &
                           F_ni,F_nj,F_aminx, F_amaxx, F_aminy, F_amaxy,F_nk, F_nk_super)

   !---------------------------------------------------------------------
   return
end subroutine adx_pos_glb3_ad
