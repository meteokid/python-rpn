!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r v4d_rwtraj_sigma_phystep - Load variables and 
*                                 Call v4d_rwtraj_sigma/v4d_rwtraj_phystep 
*
#include "model_macros_f.h"
*
      subroutine v4d_rwtraj_sigma_phystep (tp,qp,trp,vtmoins,trm,DIST_DIM,Nk)
*
      implicit none
*
      integer DIST_DIM,Nk
      real 
     $     tp(DIST_SHAPE,Nk), qp(DIST_SHAPE,Nk), trp(DIST_SHAPE,Nk),
     $     vtmoins(DIST_SHAPE,Nk), trm(DIST_SHAPE,Nk)
*
*author
*     M. Tanguay 
*
*revision
* v3_30 - Tanguay M.        - initial version  
*
*object
*     see id section
*
*arguments
*     none
*	
*implicits
#include "glb_ld.cdk"
#include "v4dg.cdk"
#include "itf_phy_vmm.cdk"
*
*modules
      integer  vmmlod,vmmget,vmmuld,err
      external vmmlod,vmmget,vmmuld
      integer key(5)
*
*     ----------------------------------------------------------------------
*
      key(1) = VMM_KEY(p_sigm)
      key(2) = VMM_KEY(p_uplus)
      key(3) = VMM_KEY(p_vplus)
      key(4) = VMM_KEY(p_umoins)
      key(5) = VMM_KEY(p_vmoins)
      err = vmmlod(key,5)
      err = VMM_GET_VAR(p_sigm)
      err = VMM_GET_VAR(p_uplus)
      err = VMM_GET_VAR(p_vplus)
      err = VMM_GET_VAR(p_umoins)
      err = VMM_GET_VAR(p_vmoins)
*
      call v4d_rwtraj_sigma  (p_sigm,LDIST_DIM,Nk)
*
      if( V4dg_oktr_L) call v4d_rwtraj_phystep(p_uplus,p_vplus,tp,qp,trp,
     $                                           p_umoins,p_vmoins,vtmoins,trm,
     $                                           LDIST_DIM,Nk)
      err = vmmuld(key,5)
*
      return
      end
