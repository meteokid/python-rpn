!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r hzd_ho_tl  - TLM of hzd_ho 
*
#include "model_macros_f.h"
*
      subroutine hzd_ho_tl (  F_u   , F_v , F_psd , F_tp  , F_ip  ,
     %                        F_td  , F_t , F_it  , F_plt ,   
     %                        F_pip , F_w , F_qp  , F_mu  , F_mul ,  
     %                        F_um  , F_vm, F_psdm, F_tpm , F_ipm ,
     %                        F_tdm , F_tm, F_itm , F_pltm,   
     %                        F_pipm, F_wm, F_qpm , F_mum , F_mulm,  
     %                        F_xfis, DIST_DIM,Nk)
*
      implicit none
*
      integer DIST_DIM, Nk
*
      real   F_u  (DIST_SHAPE,Nk), F_v (DIST_SHAPE,Nk),
     %       F_psd(DIST_SHAPE,Nk), F_tp(DIST_SHAPE,Nk),
     %       F_ip (DIST_SHAPE,Nk), F_td(DIST_SHAPE,Nk),
     %       F_t  (DIST_SHAPE,Nk), F_it(DIST_SHAPE,Nk),
     %       F_plt(DIST_SHAPE,Nk),  
     %       F_pip(DIST_SHAPE,Nk), F_w (DIST_SHAPE,Nk),
     %       F_qp (DIST_SHAPE,Nk), F_mu(DIST_SHAPE,Nk),
     %       F_mul(DIST_SHAPE,Nk), F_xfis(DIST_SHAPE)
*
      real   F_um  (DIST_SHAPE,Nk), F_vm (DIST_SHAPE,Nk),
     %       F_psdm(DIST_SHAPE,Nk), F_tpm(DIST_SHAPE,Nk),
     %       F_ipm (DIST_SHAPE,Nk), F_tdm(DIST_SHAPE,Nk),
     %       F_tm  (DIST_SHAPE,Nk), F_itm(DIST_SHAPE,Nk),
     %       F_pltm(DIST_SHAPE,Nk),
     %       F_pipm(DIST_SHAPE,Nk), F_wm (DIST_SHAPE,Nk),
     %       F_qpm (DIST_SHAPE,Nk), F_mum(DIST_SHAPE,Nk),
     %       F_mulm(DIST_SHAPE,Nk)
*
*author
*     M.Tanguay
*
*revision
* v2_21 - Tanguay M.        - initial MPI version
* v2_31 - Tanguay M.        - TLM of control for diffusion on momentum only 
* v3_00 - Tanguay M.        - adapt to restructured hzd_ho 
* v3_03 - Tanguay M.        - Adjoint NoHyd configuration
* v3_11 - Tanguay M.        - AIXport+Opti+OpenMP for TLM-ADJ
*
*object
*     see id section
*
*arguments
* 
*implicits
#include "glb_ld.cdk"
#include "glb_pil.cdk"
#include "ldnh.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "trp.cdk"
#include "hzd.cdk"
#include "opr.cdk"
#include "schm.cdk"
#include "geomg.cdk"
#include "lun.cdk"
#include "ptopo.cdk"
*
      integer i, j, k, dpwr, i0,in,j0,jn,Gni
      real*8 wk1_8
      real   wk2(LDIST_SHAPE,Nk), wk2_m(LDIST_SHAPE,Nk)
      real*8, dimension(:)  , allocatable :: wkh_evec_8,wk_evec_8
*     ______________________________________________________
*
      Gni = G_ni-Lam_pil_w-Lam_pil_e
      dpwr = Hzd_pwr / 2
      if (Lun_debug_L) write(Lun_out,1000) Hzd_pwr
*
      if ( Hzd_cdiff .gt. 0.0 ) then
*
         allocate ( wkh_evec_8(Gni*Gni), wk_evec_8(Gni*Gni) )
         do j=1,Gni
         do i=1,Gni
           wkh_evec_8((j-1)*Gni+i)=Hzd_xevec_8((j+Lam_pil_w-1)*G_ni+i+Lam_pil_w)
           wk_evec_8((j-1)*Gni+i)=Opr_xevec_8((j+Lam_pil_w-1)*G_ni+i+Lam_pil_w)
         enddo
         enddo
*
*     Momentum
*     ~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_um, wk1_8, wkh_evec_8, 
     %                    Hzd_au_8,Hzd_cu_8,Hzd_deltau_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn, Hzd_xp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_u, wk1_8, wkh_evec_8,
     %                    Hzd_au_8,Hzd_cu_8,Hzd_deltau_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn, Hzd_xp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_vm, wk1_8, wk_evec_8 ,
     %                    Hzd_av_8,Hzd_cv_8, Hzd_deltav_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Hzd_yp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_v, wk1_8, wk_evec_8 ,
     %                    Hzd_av_8,Hzd_cv_8, Hzd_deltav_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Hzd_yp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*     Vertical motion in pressure coord. 
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_psdm, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_psd, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*     Total divergence 
*     ~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_tdm, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_td, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
         if (Hzd_uvwdt_L) goto 9988
*
*     Mass related fields
*     ~~~~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_ipm, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8,Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_ip, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8,Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_itm, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8,Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_it, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8,Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
!$omp parallel 
*
!$omp do
         do k = 2, Nk
         do j = 1+pil_s,l_nj-pil_n
         do i = 1+pil_w,l_ni-pil_e
*
*           TRAJECTORY
*           ----------
            F_itm(i,j,k) = F_ipm(i,j,k) + Cstvr_fistr_8(k) + F_xfis(i,j)
*
*           TLM
*           ---
            F_it(i,j,k) = F_ip(i,j,k) 
*
         end do
         end do
         end do
!$omp end do
*
* updating phi' at the top
*
!$omp do
         do j = 1+pil_s,l_nj-pil_n
         do i = 1+pil_w,l_ni-pil_e
*
*           TRAJECTORY
*           ----------
            F_ipm(i,j,1) = F_itm(i,j,1) - Cstvr_fistr_8(1) - F_xfis(i,j)
*
*           TLM
*           ---
            F_ip(i,j,1) = F_it(i,j,1) 
*
         end do
         end do
!$omp end do
*
!$omp end parallel 
*
*     The temperature: T', T'lin & hence T 
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_tpm, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_tp, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_pltm, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_plt, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
!$omp parallel
*
!$omp do 
         do k=1, Nk
         do j=1+pil_s,l_nj-pil_n
         do i=1+pil_w,l_ni-pil_e
*
*           TRAJECTORY
*           ----------
            F_tm(i,j,k) = F_tpm(i,j,k) + Cstv_tstr_8
*
*           TLM
*           ---
            F_t(i,j,k) = F_tp(i,j,k) 
*
         end do
         end do
         end do
!$omp end do 
*
*     Save pi' for the diffusion of q'
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         if ( (.not.Schm_hydro_L) .and. Schm_difqp_L ) then
!$omp do 
            do k = 1, Nk
            do j = 1+pil_s,l_nj-pil_n
            do i = 1+pil_w,l_ni-pil_e
*
*              TRAJECTORY
*              ----------
               wk2_m(i,j,k) = F_pipm(i,j,k)
*
*              TLM
*              ---
               wk2(i,j,k) = F_pip(i,j,k)
*
            end do
            end do
            end do
!$omp end do 
         endif
*
!$omp end parallel 
*
*     The hydrostatic pressure: pi'  
*     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_pipm, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_pip, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*****************************
*  3. Nonyhydrostatic model * 
*****************************
*
         if ( .not. Schm_hydro_L ) then
*
*     Vertical wind (physical) 
*     ~~~~~~~~~~~~~~~~~~~~~~~~
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_wm, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_w, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
         if ( Schm_difqp_L ) then ! q' & related variables
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_mum, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_mu, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(F_mulm, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(F_mul, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        Indirect diffusion of q' 
*        ~~~~~~~~~~~~~~~~~~~~~~~~
!$omp parallel do 
         do k=1, Nk  ! 
         do j=1+pil_s,l_nj-pil_n ! p = (pi)exp(q')
         do i=1+pil_w,l_ni-pil_e ! ~~~~~~~~~~~~~~~
*
*           TLM
*           ---
            wk2  (i,j,k) = (               dble(wk2  (i,j,k)) )
     %                       *exp( dble(F_qpm(i,j,k)) )           +
     %                    ( Geomg_z_8(k) + dble(wk2_m(i,j,k)) )
     %                       *exp( dble(F_qpm(i,j,k)) ) * dble(F_qp(i,j,k))
*
*           TRAJECTORY
*           ----------
            wk2_m(i,j,k) = ( Geomg_z_8(k) + dble(wk2_m(i,j,k)) )
     %                       *exp( dble(F_qpm(i,j,k)) )
*
         end do
         end do
         end do
!$omp end parallel do 
*
*        TRAJECTORY
*        ----------
         call hzd_solmxma(wk2_m, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
*        TLM
*        ---
         call hzd_solmxma(wk2, wk1_8, wk_evec_8 ,
     %                    Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %                    trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %                    trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %                    l_maxx, l_miny, l_maxy,Nk,G_ni,l_ni,l_nj,
     %                    trp_12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %                    Ptopo_npex,Ptopo_npey)
*
!$omp parallel do 
         do k=1, Nk  ! 
         do j=1+pil_s,l_nj-pil_n ! q' = log(p/pi)
         do i=1+pil_w,l_ni-pil_e ! ~~~~~~~~~~~~~~
*
*           TRAJECTORY
*           ----------
            F_qpm(i,j,k) = log(             dble(wk2_m(i,j,k))
     %                       /( Geomg_z_8(k) + dble(F_pipm(i,j,k)) )  )
*
*           TLM
*           ---
            F_qp(i,j,k) = (dble(wk2  (i,j,k))*( Geomg_z_8(k) + dble(F_pipm(i,j,k))) -
     %                     dble(wk2_m(i,j,k))*(                dble(F_pip (i,j,k))) )
     %                   /(dble(wk2_m(i,j,k))*( Geomg_z_8(k) + dble(F_pipm(i,j,k))) )
*
         end do
         end do
         end do
!$omp end parallel do 
*
         endif
         endif
*
      endif
*
 9988 continue
*
      if ( Hzd_cdiff .gt. 0.0 ) deallocate( wkh_evec_8,wk_evec_8 ) 
*
 1000 format(/,
     $     3X,'TLM of PERFORM DEL-',i1,' HORIZONTAL DIFFUSION: (S/R HZD_HO_TL)')
*     __________________________________________________________________
*
      return
      end
