!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
***s/r hzd_hof_tl - TLM of hzd_hof 
*
#include "model_macros_f.h"
*
      subroutine hzd_hof_tl ( F_u,  F_v,  F_zd,  F_w,  F_t,  F_s,   
     %                        F_u_m,F_v_m,F_zd_m,F_w_m,F_t_m,F_s_m, 
     %                        DIST_DIM, Nk)
*
      implicit none
*
      integer DIST_DIM, Nk
*
      real     F_u (DIST_SHAPE,Nk  ),F_v(DIST_SHAPE,Nk  ),
     %         F_zd(DIST_SHAPE,Nk+1),F_w(DIST_SHAPE,Nk+1),
     %         F_t (DIST_SHAPE,Nk+1),F_s(DIST_SHAPE)
*
      real     F_u_m (DIST_SHAPE,Nk  ), F_v_m(DIST_SHAPE,Nk  ),
     %         F_zd_m(DIST_SHAPE,Nk+1), F_w_m(DIST_SHAPE,Nk+1),
     %         F_t_m (DIST_SHAPE,Nk+1), F_s_m(DIST_SHAPE)
*
*author
*     M.Tanguay
*
*revision
* v2_21 - Tanguay M.        - initial MPI version
* v2_31 - Tanguay M.        - TLM of control for diffusion on momentum only
* v3_03 - Tanguay M.        - Adjoint NoHyd configuration
* v3_11 - Tanguay M.        - AIXport+Opti+OpenMP for TLM-ADJ
* v3_20 - Tanguay M.        - Option of storing instead of redoing TRAJ 
*                           - Introduce Hzd_hzdmain_n_L
* v4_04 - Tanguay M.        - Staggered version TL/AD 
*
*object
*     see id section
*
*arguments
* 
*implicits
#include "fft.cdk"
#include "glb_ld.cdk"
#include "ldnh.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "trp.cdk"
#include "hzd.cdk"
#include "opr.cdk"
#include "schm.cdk"
#include "lun.cdk"
#include "ptopo.cdk"
#include "type.cdk"
#include "ver.cdk"
*
      integer dpwr
      real*8 wk1_8
*
*     ______________________________________________________
*
      dpwr = Hzd_pwr / 2
      if (Lun_debug_L) write(Lun_out,1000) Hzd_pwr
*
      if ( Hzd_cdiff .le. 0.0 ) then
           if (Lun_debug_L) write(Lun_out,1001) Hzd_cdiff
           return
      endif
*
*     Momentum
*     ~~~~~~~~
*
*     TRAJECTORY
*     ----------
      if (Hzd_hzdmain_0_L) then
*
      call hzd_solfft(F_u_m, wk1_8, Fft_pri_8,
     %     Hzd_au_8,Hzd_cu_8,Hzd_deltau_8,
     %     trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %     trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %     l_maxx,l_miny,l_maxy,Nk,G_ni,l_ni,l_nj,
     %     trp_12dn,Hzd_xp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %     Ptopo_npex,Ptopo_npey)
*
      endif 
*
*     TLM
*     ---
      if (Hzd_hzdmain_1_L) then
*
      call hzd_solfft(F_u, wk1_8, Fft_pri_8,
     %     Hzd_au_8,Hzd_cu_8,Hzd_deltau_8,
     %     trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %     trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %     l_maxx,l_miny,l_maxy,Nk,G_ni,l_ni,l_nj,
     %     trp_12dn,Hzd_xp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %     Ptopo_npex,Ptopo_npey)
*
      endif

*     TRAJECTORY
*     ----------
      if (Hzd_hzdmain_0_L) then
*
      call hzd_solfft(F_v_m, wk1_8, Fft_pri_8 ,
     %     Hzd_av_8,Hzd_cv_8,Hzd_deltav_8,
     %     trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %     trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %     l_maxx,l_miny,l_maxy,Nk,G_ni,l_ni,l_nj, 
     %     trp_12dn,Opr_opsxp0_8,Hzd_yp0_8, Hzd_cdiff,
     %     Ptopo_npex,Ptopo_npey)
*
      endif
*
*     TLM
*     ---
      if (Hzd_hzdmain_1_L) then
*
      call hzd_solfft(F_v, wk1_8, Fft_pri_8 ,
     %     Hzd_av_8,Hzd_cv_8,Hzd_deltav_8,
     %     trp_12dmin,trp_12dmax,trp_22min,trp_22max,
     %     trp_12dn,trp_22n,G_nj, dpwr,l_minx,
     %     l_maxx,l_miny,l_maxy,Nk,G_ni,l_ni,l_nj,
     %     trp_12dn,Opr_opsxp0_8,Hzd_yp0_8, Hzd_cdiff,
     %     Ptopo_npex,Ptopo_npey)
*
      endif
*     
*     Vertical momentum
*     ~~~~~~~~~~~~~~~~~
*
*     TRAJECTORY
*     ----------
      if (Hzd_hzdmain_0_L) then
*
      if(.true.) then
*********not physical, done nevertheless*******
         call hzd_solfft(F_zd_m,wk1_8, Fft_pri_8 ,
     %     Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %     trp_p12dmin,trp_p12dmax,trp_22min,trp_22max,
     %     trp_p12dn,trp_22n,G_nj, dpwr,l_minx,
     %     l_maxx, l_miny, l_maxy,Nk+1,G_ni,l_ni,l_nj,
     %     trp_p12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %     Ptopo_npex,Ptopo_npey)
      endif
*
      if(.not.Schm_hydro_L) then
      call hzd_solfft(F_w_m, wk1_8, Fft_pri_8 ,
     %     Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %     trp_p12dmin,trp_p12dmax,trp_22min,trp_22max,
     %     trp_p12dn,trp_22n,G_nj, dpwr,l_minx,
     %     l_maxx, l_miny, l_maxy,Nk+1,G_ni,l_ni,l_nj,
     %     trp_p12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %     Ptopo_npex,Ptopo_npey)
*
      endif
*
      endif
*
*     TLM
*     ---
      if (Hzd_hzdmain_1_L) then
*
      if(.true.) then
*********not physical, done nevertheless*******
         call hzd_solfft(F_zd,wk1_8, Fft_pri_8 ,
     %     Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %     trp_p12dmin,trp_p12dmax,trp_22min,trp_22max,
     %     trp_p12dn,trp_22n,G_nj, dpwr,l_minx,
     %     l_maxx, l_miny, l_maxy,Nk+1,G_ni,l_ni,l_nj,
     %     trp_p12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %     Ptopo_npex,Ptopo_npey)
      endif
*
      if(.not.Schm_hydro_L) then
      call hzd_solfft(F_w, wk1_8, Fft_pri_8 ,
     %     Hzd_as_8,Hzd_cs_8,Hzd_deltas_8,
     %     trp_p12dmin,trp_p12dmax,trp_22min,trp_22max,
     %     trp_p12dn,trp_22n,G_nj, dpwr,l_minx,
     %     l_maxx, l_miny, l_maxy,Nk+1,G_ni,l_ni,l_nj,
     %     trp_p12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff,
     %     Ptopo_npex,Ptopo_npey)
      endif
*
      endif
*     
 1000 format(/,
     $  3X,'TLM of PERFORM DEL-',i1,' FFT HORIZONTAL DIFFUSION: (S/R HZD_HOF_TL)')
 1001 format(/,
     $     3X,'HZD_CDIFF=',F20.8,' NO HORIZONTAL DIFFUSION: (S/R HZD_HOF_TL)')
*     __________________________________________________________________
*
      return
      end
