!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r itf_phy_extract_pbl - Save the pbl trajectory
!
#include "model_macros_f.h"
!
      subroutine v4d_phy_extract_pbl (F_busvol, F_jdo, F_step, nk)
      implicit none
!
      integer F_jdo, F_step, nk
      real F_busvol(*) 
!
!author 
!     Lubos Spacek - September 2009
!
!revision
! v4_12 - Spacek L.  - initial GMM version
!
!object
!	Save the pbl variables for TL/AD
!
#include "glb_ld.cdk"
#include "itf_phy_buses.cdk"
#include "v4dg.cdk"
!
!notes
!
      integer i, k, n, ii, indx, index, numtr, lght, soit
      integer km,kt,bm,bt
      real con
!
!     ---------------------------------------------------------------
!
      if(.not.(V4dg_conf.ne.0 .and. V4dg_oktr_L.and.  &
               V4dg_phy_pbl.eq.2 .and. F_step.gt.0))return
!
      do n=1,p_bvol_top
       if (volnm(n)(1:2).eq.'KM')call getindx(volnm(n),'V',km,lght,soit)
       if (volnm(n)(1:2).eq.'KT')call getindx(volnm(n),'V',kt,lght,soit)
       if (volnm(n)(1:2).eq.'BM')call getindx(volnm(n),'V',bm,lght,soit)
       if (volnm(n)(1:2).eq.'KT')call getindx(volnm(n),'V',bt,lght,soit)
      end do

         numtr=22
         index=0;     call v4d_wtrnch                                       &
        (F_busvol,km,numtr,index,F_jdo,p_offi,p_ni,nk)
         index=nk;    call v4d_wtrnch                                       &
        (F_busvol,kt,numtr,index,F_jdo,p_offi,p_ni,nk)
         index=nk+1;  call v4d_wtrnch                                       &
        (F_busvol,bm,numtr,index,F_jdo,p_offi,p_ni,1)
         index=nk+2;  call v4d_wtrnch                                       &
        (F_busvol,bt,numtr,index,F_jdo,p_offi,p_ni,1)
!
!     ---------------------------------------------------------------
!
      return
      end
