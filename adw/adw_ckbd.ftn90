!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r adw_ckbd - check if upstream points from north and south 
!                 pe's for which an interpolation is requested are 
!                 inside own advection source grid
!
#include "model_macros_f.h"
!
      subroutine adw_ckbd ( F_y )
      implicit none
#include <arch_specific.hf>
!
      real    F_y ( * )
!
!author
!     alain patoine
!
!revision
! v3_10 - Corbeil & Desgagne & Lee - AIXport+Opti+OpenMP
!
!language
!     fortran 77
!
!object
!     see id section
!
!arguments
!______________________________________________________________________
!              |                                                 |     |
! NAME         | DESCRIPTION                                     | I/O |
!--------------|-------------------------------------------------|-----|
! F_y          | y upstream positions                            |  i  |
!______________|_________________________________________________|_____|
!
!notes
!______________________________________________________________________
!                                                                      |
! The positions are strored in the following manner:                   |
!                                                                      |
! Adw_fro_n values followed by Adw_fro_s values = Adw_fro_a values     |
! ---------                    ---------          ---------            |
!______________________________________________________________________|

!implicits
#include "glb_ld.cdk"
!      integer l_minx,l_maxx,l_miny,l_maxy
#include "adw.cdk"
!      integer            Adw_njt
!      integer            Adw_fro_n, Adw_fro_a
!      real*8             adw_yy_8(*)
!***********************************************************************
      integer n
!***********************************************************************
!$omp parallel
!$omp do
      do n = 1,Adw_fro_n
      if ( F_y(n).le.Adw_yy_8(2) ) then
         !TODO: pass these print as a string to handle_error
         print *,'*************************************************'
         print *,'*                                               *'
         print *,'* PROBLEM:  The upstream point from north pe    *'
         print *,'*           is south of advection source grid   *'
         print *,'*                                               *'
         print *,'*           South border  :',Adw_yy_8(2)
         print *,'*           Upstream point:',F_y(n)
         print *,'*************************************************'
         call flush(6)
         call handle_error(-1,'adw_ckbd','')
      endif
      enddo
!$omp enddo
!
!$omp do
      do n = Adw_fro_n+1,Adw_fro_a
      if ( F_y(n).ge.Adw_yy_8(Adw_njt-1) ) then
         !TODO: pass these print as a string to handle_error
         print *,'*************************************************'
         print *,'*                                               *'
         print *,'* PROBLEM:  The upstream point from south pe    *'
         print *,'*           is north of advection source grid   *'
         print *,'*                                               *'
         print *,'*           North border  :',Adw_yy_8(Adw_njt-1)
         print *,'*           Upstream point:',F_y(n)
         print *,'*************************************************'
         call flush(6)
         call handle_error(-1,'adw_ckbd','')
      endif
      enddo
!$omp enddo
!$omp end parallel
!
      return
      end

