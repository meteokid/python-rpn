!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**   s/r adw_load_super_winds.ftn - Store native and interpolated winds in super winds vectors.
!
#include "model_macros_f.h"
      subroutine adw_load_super_winds(F_u,F_v,F_w,F_ut,F_vt,F_wm,F_su, &
           F_sv,F_sw)
!
      implicit none
#include <arch_specific.hf>
!
      real F_u(*),F_v(*),F_w(*),F_ut(*),F_vt(*),F_wm(*),F_su(*), &
           F_sv(*),F_sw(*)
!
!
!author
!     Andre Plante
!
!revision
!
!language
!     fortran 77
!
!object
!     see id section
!
!arguments
!______________________________________________________________________
!              |                                                 |     |
! NAME         | DESCRIPTION                                     | I/O |
!--------------|-------------------------------------------------|-----|
! F_u          | u components of winds on advection grid on m lev|  i  |
! F_v          | v components of winds on advection grid on m lev|  i  |
! F_w          | w components of winds on advection grid on t lev|  i  |
! F_ut         | u components of winds on advection grid on t lev|  i  |
! F_vt         | v components of winds on advection grid on t lev|  i  |
! F_wm         | w components of winds on advection grid on m lev|  i  |
! F_su         | u components of winds on advection grid on s lev|  i  |
! F_sv         | v components of winds on advection grid on s lev|  i  |
! F_sw         | w components of winds on advection grid on s lev|  i  |
!______________|_________________________________________________|_____|
!
!implicits
#include "glb_ld.cdk"
#include "type.cdk"
#include "ver.cdk"
#include "adw.cdk"
!modules
!***********************************************************************
      integer n,nn,nij,i,j,k,ind,indm,indt
!
      nij=Adw_nit*Adw_njt
!

!     Index k in loops below is used to address super levels
!     Index ind in loops below is use to address thermo/momentum leves
!
!     Example of index for l_nk=3
!
!     -----------------------------
!     | Super | Thermo | momentum |
!     |---------------------------|
!     |   1   |    1   |          |
!     |---------------------------|
!     |   2   |        |    1     |
!     |---------------------------|
!     |   3   |    2   |          |
!     |---------------------------|
!     |   4   |        |    2     |
!     |---------------------------|
!     |   5   |    3   |          |
!     |---------------------------|
!     |   6   |        |    3     |
!     |---------------------------|
!     |   7   |    4   |          |
!     |---------------------------|
!
!***********************************************************************
!     Note : no OPENMP uptimization done, since one thread probably occupy 
!            the band width.
!***********************************************************************
!
!     Put thermo stuff in super grid
!
      ind=0
      do k = 1,2*l_nk+1,2
         ind=ind+1
         do j=1,Adw_njt
         do i=1,Adw_nit
            n= (k-1)  *nij+((j-1)*Adw_nit) + i
            nn=(ind-1)*nij+((j-1)*Adw_nit) + i
            F_su(n)=F_ut(nn)
            F_sv(n)=F_vt(nn)
            F_sw(n)=F_w(nn)
         enddo
         enddo
      enddo
!
!     Put momentum stuff in super grid
!     
      ind=0
      do k = 2,2*l_nk,2
         ind=ind+1
         do j=1,Adw_njt
         do i=1,Adw_nit
            n= (k-1)  *nij+((j-1)*Adw_nit) + i
            nn=(ind-1)*nij+((j-1)*Adw_nit) + i
            F_su(n)=F_u(nn)
            F_sv(n)=F_v(nn)
            F_sw(n)=F_wm(nn)
         enddo
         enddo
      enddo      
!      
      end
