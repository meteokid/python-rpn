!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r gemgrid - grille program
#include <model_macros_f.h>
      subroutine gemgrid
      implicit none
!
!author V.Lee - Jun. 14, 2011
!
!object
!     to create a file containing all 3 pairs of tic tacs for the
!     GEM grid using functions from GEM
!     to create gfilemap txt file to go with file created by genphysX
!     code derived originally from gengeo/genesis(S. Chamberlain/A. Zadra)
!     Now the program genphysX is maintained by L.Chardon
!
! In order for function geodata to read geophy file, there must be
! the same prefix for both files:
!
! blabla_0000001-0000001 (RPN standard file for geophysical fields)
! blabla_gfilemap.txt    (Text file with coverage info)
!
!     Computes positional parameters (>>=lat ^^=lon)
!
      integer  fnom,fstouv,fstecr,fstfrm,fclos,wkoffit,grid_nml2
      external fnom,fstouv,fstecr,fstfrm,fclos,wkoffit,grid_nml2

#include <arch_specific.hf>
#include "grd.cdk"
#include "hgc.cdk"

      character*120 outfile,gfile,dumc,fn
      logical lam
      integer ni,nila,oun,uout,err,npack,i,j,k
      integer nklemax,npos,core
      parameter(nklemax=3)
      character*256 defaut(nklemax),liste(0:nklemax-1),val(nklemax)
      integer itile,jtile,i0,j0,i1,j1,ierx, iery
      integer Grd_ip1,Grd_ip2,Grd_ip3
      real  , dimension(:), allocatable :: xpos, ypos
      real*8, dimension(:), allocatable :: x_8, y_8
      DATA LISTE /'core.','liste','help'/
      DATA defaut/'0','','AIDE'/
      DATA val /'1','','OK'/
      data oun,uout /51, 21/
      data npack /-32/
!
!----------------------------------------------------------------------
!
      print *
      print *,'------------------------------------------'
      print *,'------------------------------------------'
      print *
      print *,'GEMGRID - version v_4.4.0  January 10, 2012 '
      print *,'        - to write out ^^ >> for Phi grids in tape1'
      print *,'        - to write out ^^ >> endpoints in gfilemap.txt '
      print *
      print *,'------------------------------------------'
      print *,'------------------------------------------'
      core=0
      call ccard(liste,defaut,val,nklemax,npos)
      read(val(1),*) core

      do 900 k=0,1

      if (k.eq.0) outfile     = 'tape1'
      if (k.eq.1) outfile     = 'tape2'
      if (k.eq.0) gfile       = 'gfilemap.txt'
      if (k.eq.1) gfile       = 'gfilemap2.txt'
      if (k.eq.0) Grd_yinyang_S = 'YIN'
      if (k.eq.1) Grd_yinyang_S = 'YAN'
!
      if (wkoffit(outfile).ne.-3.or.wkoffit(gfile).ne.-3) then
          print *,trim(outfile), ' and/or ', trim(gfile),' already exist'
          stop
      endif

!     Read grid namelist using grid_nml

      fn  = 'gem_settings.nml'
      if (grid_nml2(fn,lam).lt.0) then
           print *,'STOP: problem with NAMELIST GRID'
           print *,"Use checknml to verify: \'checknml grid\'"
           stop
      endif

      print*, 'Requested grid configuration'
      err = grid_nml2('print',lam)

!     Setup before calling e_grid
      Grd_yinyang_L = Grd_typ_S(1:1).eq.'G'.and.Grd_typ_S(2:2).eq.'Y'
      LAM = Grd_typ_S(1:1).eq.'L'.or.Grd_yinyang_L

      allocate (x_8(Grd_ni+1), y_8(Grd_nj), xpos(Grd_ni), ypos(Grd_nj))

      call set_gemHgrid ( x_8, y_8, Grd_ni, Grd_nj, Grd_dx, Grd_dy,     & 
                          Grd_x0, Grd_xl, Grd_left, Grd_y0, Grd_yl, Grd_belo, &
                          Grd_nila, Grd_njla, Grd_dxmax, Grd_dymax,           &
                          Grd_gauss_L, lam, ierx, iery, .true. )

      xpos(1:Grd_ni) = x_8(1:Grd_ni)
      ypos(1:Grd_nj) = y_8(1:Grd_nj)

      call set_igs2 ( Grd_ip1,Grd_ip2, &
                      xpos,ypos,Grd_ni,Grd_nj,&
                      Hgc_ig1ro,Hgc_ig2ro, Hgc_ig3ro, Hgc_ig4ro, &
                      1,Grd_ni,1,1,Grd_nj,1)

      Grd_ip3 = 0

      uout=0
      if (fnom(uout,outfile,'RND',0).ge.0) then
          err= fstouv (uout, 'RND')
      else
          print *,'problem opening', trim(outfile)
          stop
      endif  

      open(oun,file=gfile,access='SEQUENTIAL',form='FORMATTED',iostat=err)
      i0=1
      j0=1
      i1=grd_ni
      j1=grd_nj
      itile=1
      jtile=1

      write(oun,777) i0,j0,xpos(i0),xpos(i1),ypos(j0),ypos(j1),i1,j1, &
                    itile,jtile
      write(6,*) 'LONGITUDE'
      write(6,778)(i,xpos(i),i=1,grd_ni)
      write(6,*) 'LATITUDE'
      write(6,778)(i,ypos(i),i=1,grd_nj)

 777  format(2i8,4e15.7,2i10,x,2I5)
 778  format(4(i5,e15.7))
!     
      err= fstecr ( xpos,xpos, npack, uout, 0, 0, 0, grd_ni, 1, 1, &
                    Grd_ip1,Grd_ip2,Grd_ip3,'X','>>','GRDZ',Hgc_gxtyp_s, &
                    Hgc_ig1ro,Hgc_ig2ro,Hgc_ig3ro,Hgc_ig4ro, 5, .true. )
      err= fstecr ( ypos,ypos, npack, uout, 0, 0, 0, 1, grd_nj, 1, &
                    Grd_ip1,Grd_ip2,Grd_ip3,'X','^^','GRDZ',Hgc_gxtyp_s, &
                    Hgc_ig1ro,Hgc_ig2ro,Hgc_ig3ro,Hgc_ig4ro, 5, .true. )
!     
      err= fstfrm(uout)
      err= fclos (uout)

      print *,'tictacs are in file: ',trim(outfile)
      print *,trim(gfile),' is created'

      if (Grd_typ_S(2:2).ne.'Y') exit

  900 continue
!      
!-------------------------------------------------------------------
!
      return
      end
