!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
!**s/r yyg_scalgeo - to interpolate and exchange non-halo geophysical data 
!                   using local PEs
!
#include "model_macros_f.h"
#include "stop_mpi.h"
   
subroutine yyg_scalgeo()
   !---------------------------------------------------------------------
   call stop_mpi(STOP_ERROR,'yyg_scalgeo','called a depracated sub')
   !---------------------------------------------------------------------
end subroutine yyg_scalgeo


      Subroutine yyg_scalgeo2(tab_dst,F_minx,F_maxx,F_miny,F_maxy,NK,Interp_S,nomvar_S)
      implicit none
!
!author
!           Abdessamad Qaddouri/V.Lee - October 2009
!
#include <arch_specific.hf>
#include "glb_ld.cdk"

      integer F_minx,F_maxx,F_miny,F_maxy,NK
      real  tab_dst (F_minx:F_maxx,F_miny:F_maxy,NK)
      real  tab_srcf(LDIST_SHAPE,NK)
      real  tab_dstf(LDIST_SHAPE,NK)
      integer ierr,i,j,k
      character*32 interp_S,nomvar_S,UPinterp_S
      
      call low2up  (interp_S,UPinterp_S)

!     Copy original fields to a source and destination tables with halo
      do k=1,NK
      do j=1,l_nj
      do i=1,l_ni
      tab_srcf(i,j,k)=tab_dst(i,j,k)
      tab_dstf(i,j,k)=tab_dst(i,j,k)
      enddo
      enddo
      enddo
!     Exchange halos, interpolate and get scalar data for Yin, Yang bcs
!     print *,'(yyg_scalgeo):',trim(nomvar_S),'using ',trim(UPinterp_S) 
      call rpn_comm_xch_halo(tab_srcf, LDIST_DIM,l_ni,l_nj,NK,      &
                  G_halox,G_haloy,G_periodx,G_periody,l_ni,0 )
      if (trim(UPinterp_S).eq.'NEAREST') then
          call yyg_scalbc0(tab_dstf,tab_srcf,LDIST_DIM,NK)
      elseif (trim(UPinterp_S).eq.'LINEAR') then
          call yyg_scalbc1(tab_dstf,tab_srcf,LDIST_DIM,NK)
      elseif (trim(UPinterp_S).eq.'CUBIC') then
          call yyg_scalbc(tab_dstf,tab_srcf,LDIST_DIM,NK)
      else
         print*,'Cannot find interpolator'
         stop
      endif
     call glbstat2 (tab_dstf,trim(nomvar_S),"scalg",LDIST_DIM,1,NK,1,G_ni,1,G_nj,1,NK)
      do k=1,NK
      do j=1,l_nj
      do i=1,l_ni
      tab_dst(i,j,k)=tab_dstf(i,j,k)
      enddo
      enddo
      enddo
      return
      end

