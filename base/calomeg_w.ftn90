!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/p calomeg_w - compute vertical velocity in pressure coordinates
!                    from advection
!
#include "model_macros_f.h"

!
      subroutine calomeg_w (F_ww,F_st1,F_wt1,F_tt1,DIST_DIM,Nk)
!
      implicit none
!
      integer DIST_DIM, Nk
      real F_ww(DIST_SHAPE,Nk+2),F_st1(DIST_SHAPE)
      real F_wt1(DIST_SHAPE,Nk+1),F_tt1(DIST_SHAPE,Nk+2)
!
!author
!     Claude Girard et Andre Plante avril 2008.
!
!revision
! v4.0.4 Andre Plante Nov. 1008 ajout de vsexp.
!
!object
!	compute vertical velocity in hydrostatic pressure coordinates
!
!        omega = dpi/dt ~ -g*rau*dz/dt = -g*rau*w
!                   
!        where : pi  is the hydrostatic pressure
!                rau the density
!                w   real vertical wind
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! F_ww           O                 dpi/dt (Pa/s)
! F_st1        I                   s at time t1 = exp(PIt1/Zsruf)
! F_wt1        I                   real vertical wind
! F_tt1        I                   virtual temperature
!
!implicits
#include "glb_ld.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "lctl.cdk"
#include "type.cdk"
#include "ver.cdk"
!
!*
      integer i,j,k
      real, dimension(l_ni,l_nj) :: work
!     __________________________________________________________________
!

!$omp parallel private(work)
!$omp do
      do k=1,l_nk+1
         do j=1,l_nj
            do i=1,l_ni
               work(i,j)=Ver_z_8%t(k) + Ver_b_8%t(k)*F_st1(i,j)
            end do
         end do
         call vsexp(work,work,l_ni*l_nj)
         do j=1,l_nj
            do i=1,l_ni
               F_ww (i,j,k) = -Dcst_grav_8*F_wt1(i,j,k)*work(i,j)/ &
                    (Dcst_rgasd_8*F_tt1(i,j,k))
            end do
         end do
      end do
!$omp enddo
!$omp end parallel
!     __________________________________________________________________
!
      return
      end
