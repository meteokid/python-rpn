
!/**
function file_open_existing(F_fileName_S,F_fileType_S) result(F_fileUnit)
   implicit none
#include <rmnlib_basics.hf>
#include <clib_interface.cdk>
#include <msg.h>
   !@objective Open a file, handle error and return unit
   !@arguments
   character(len=*) :: F_fileName_S,F_fileType_S
   !@returns
   integer :: F_fileUnit
   !@author Stephane Chamberland, Nov 2009
   !@revisions
   !  YYYY-MM, MY_AUTHOR: original code
!**/
   integer :: iErr,nrec=0
   !---------------------------------------------------------------------
   iErr = clib_isfile(F_fileName_S)
   if (iErr == CLIB_OK) then
      F_fileUnit = 0
      iErr = fnom(F_fileUnit, F_fileName_S, F_fileType_S, nrec)
      if (iErr<0) then
         F_fileUnit = RMN_ERR
         call msg(MSG_ERROR,'Unable to open file: '//trim(F_fileName_S))
      endif
   else
      F_fileUnit = RMN_ERR
      call msg(MSG_ERROR,'File does not exists when it should: '//trim(F_fileName_S))
   endif
   !TODO: register a call back to close file on error
   !TODO: if filetype == STD call fstouv() as well
   !---------------------------------------------------------------------
   return
end function file_open_existing

!TODO: create file_close: close file (and FSTFRM) and remove call back
