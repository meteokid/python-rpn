!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r diag_ttes
!
#include "model_macros_f.h"
!
      subroutine diag_ttes (tt,es,ni,nj,ki)
      implicit none
#include <arch_specific.hf>
!
      integer ni,nj,ki
      real tt(ni,nj),es(ni,nj)
!
!author
!     M. Desgagne - Spring 2008
!
!revision
! v3_31 - Desgagne M.       - initial version
! v4_05 - Lepine M.         - VMM replacement with GMM
!
#include "gmm.hf"
#include "glb_ld.cdk"
#include "vt1.cdk"
#include "ver.cdk"
#include "pw.cdk"
!
      logical,parameter :: WATERONLY = .false.
      type(gmm_metadata) :: mymeta
      integer ninj,istat,mynk
      real, pointer, dimension(:,:,:)     :: humod
      real  hu(l_ni,l_nj),px(l_ni,l_nj)
!
!     ________________________________________________________________
!
      nullify (pw_tt_plus,st1,humod)
      istat = gmm_get(gmmk_pw_tt_plus_s ,pw_tt_plus,mymeta)
      istat = gmm_get(gmmk_st1_s        ,st1       ,mymeta)
      istat = gmm_get('TR/HU:P'         ,humod     ,mymeta)

      tt(:,:) = pw_tt_plus (1:l_ni,1:l_nj,ki)
      hu(:,:) = humod      (1:l_ni,1:l_nj,ki)

      ninj = ni*nj
      mynk = 1

      px(:,:) = exp ( Ver_a_8%t(ki) + Ver_b_8%t(ki)*st1(1:l_ni,1:l_nj) )

      call mhuaes3(es,hu,tt,px,WATERONLY,ninj,mynk,ninj)

      es(:,:) = max(0.,es(:,:))
!
!     ________________________________________________________________
!
      return
      end

