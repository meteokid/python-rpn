!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
#include "model_macros_f.h"

   subroutine itf_adx_yywinds (F_u,F_v,i0u,j0u,inu,jnu,i0v,j0v,inv,jnv)
      implicit none
#include <arch_specific.hf>
      !@objective convert wind from image to real values
      !@arguments
      integer :: i0u,j0u,inu,jnu,i0v,j0v,inv,jnv
      real, dimension(:,:,:), pointer :: F_u, F_v
      !@revisions
      ! v4_40 - Qaddouri/Lee      - Yin-Yang uses global range
     !**/

#include "glb_ld.cdk"
#include "geomg.cdk"

      integer :: i,j,k
      real*8 sc_8(l_miny:l_maxy)
      real temp_um (l_minx:l_maxx,l_miny:l_maxy,l_nk)
      real temp1_um(l_minx:l_maxx,l_miny:l_maxy,l_nk)
      real temp_vm (l_minx:l_maxx,l_miny:l_maxy,l_nk)
      real temp1_vm(l_minx:l_maxx,l_miny:l_maxy,l_nk)

      !---------------------------------------------------------------------     
       ! lazy code ===> should be fixed
          temp_um (:,:,:)=0.0
          temp_vm (:,:,:)=0.0
          temp1_um(:,:,:)=0.0
          temp1_vm(:,:,:)=0.0
          do j = 1-G_haloy,l_nj+G_haloy
             sc_8(j) = 1.D0/Geomg_cy_8(j)
          enddo
          do k=1,l_nk
             do j= j0u, jnu
             do i= i0u, inu
                temp_um (i,j,k)= F_u(i,j,k)*sc_8(j)
                temp1_um(i,j,k)= temp_um (i,j,k)
             enddo
             enddo
             do j= j0v, jnv
             do i= i0v, inv
                temp_vm (i,j,k)= F_v(i,j,k)*sc_8(j)
                temp1_vm(i,j,k)= temp_vm (i,j,k)
             enddo
             enddo
          end do
          !Exchange U and V between Yin and Yang
          call rpn_comm_xch_halo(temp_um,l_minx,l_maxx,l_miny,l_maxy,&
               l_ni,l_nj,G_nk, G_halox,G_haloy,G_periodx,G_periody,l_ni,0)
          call rpn_comm_xch_halo(temp_vm,l_minx,l_maxx,l_miny,l_maxy,&
               l_ni,l_nj,G_nk, G_halox,G_haloy,G_periodx,G_periody,l_ni,0)
          call rpn_comm_xch_halo(temp1_um,l_minx,l_maxx,l_miny,l_maxy,&
               l_ni,l_nj,G_nk, G_halox,G_haloy,G_periodx,G_periody,l_ni,0)
          call rpn_comm_xch_halo(temp1_vm,l_minx,l_maxx,l_miny,l_maxy,&
               l_ni,l_nj,G_nk, G_halox,G_haloy,G_periodx,G_periody,l_ni,0)

          call  yyg_scaluv ( temp1_um,temp_um,temp1_vm,temp_vm,&
                              l_minx,l_maxx,l_miny,l_maxy,G_nk )

          if (l_west) then
              do k= 1, G_nk
              do j= 1,l_nj
              do i= 1, 2
                 F_u(i,j,k)= temp1_um (i,j,k)*Geomg_cy_8(j)
              enddo
              enddo
              enddo
          endif
          if (l_east) then
              do k= 1, G_nk
              do j= 1,l_nj
                 F_u(l_niu,j,k)= temp1_um (l_niu,j,k)*Geomg_cy_8(j)
                 F_u(l_ni ,j,k)= temp1_um (l_ni ,j,k)*Geomg_cy_8(j)
              enddo
              enddo
          endif
          if (l_south) then
              do k= 1, G_nk
              do i= 1, l_ni
              do j= 1, 2
                 F_v(i,j,k)=temp1_vm (i,j,k)*Geomg_cy_8(j)
              enddo
              enddo
              enddo
          endif
          if (l_north) then
              do k= 1, G_nk
              do i= 1, l_ni
                 F_v(i,l_njv,k)= temp1_vm(i,l_njv,k)*Geomg_cy_8(l_njv)
                 F_v(i,l_nj ,k)= temp1_vm(i,l_nj ,k)*Geomg_cy_8(l_nj )
              enddo
              enddo
          endif
      !---------------------------------------------------------------------
      return
   end subroutine itf_adx_yywinds
