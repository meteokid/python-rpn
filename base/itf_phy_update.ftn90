!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r itf_phy_update - 
!
#include "model_macros_f.h"
!
      subroutine itf_phy_update ( F_busdyn, F_jdo, nk, F_apply_L )
      implicit none
#include <arch_specific.hf>
!
      logical F_apply_L
      integer F_jdo, nk
      real    F_busdyn(*)
!
!author 
!     Michel Desgagne  -  Spring 2012
!
!revision
! v4_14 - Desgagne M.       - initial version
!
!object
!	Extract physics tendencies from the folded space 
!       F_busvol into model space phy_tend. Extract also
!       physics output from F_busper and F_busvol.
!
#include "glb_ld.cdk"
#include "itf_phy_buses.cdk"
#include "itf_cpl.cdk"
#include "gmm.hf"
#include "pw.cdk"
#include "schm.cdk"
!
      type(gmm_metadata) :: mymeta
      character*5 liste(3)
      character*7 item_bus, item_pw
      character*60 dumc
      integer i, n, indx, lght, soit, istat
      real, pointer, dimension(:,:,:) :: pw,trm
!
!     ---------------------------------------------------------------
      liste(1) = 'PW_TT'
      liste(2) = 'PW_UU'
      liste(3) = 'PW_VV'
!
!     Extract physics updated quantities from BUSDYN
!
      if (.not. F_apply_L) then
         do n= 1, p_bdyn_top
            item_bus = dynnm(n)(1:7)
            if ( item_bus(1:3) .eq. 'TR/' .and. item_bus(7:7) .eq. 'P' .and. item_bus(4:5).ne.'HU' ) then
               dumc = 'TR/'//dynnm(n)(4:6)//'P,W'
               call getindx2  (trim(dumc),  'DYN', indx, lght, soit)
               istat = gmm_get('TR/'//dynnm(n)(4:6)//'P', pw , mymeta )
               istat = gmm_get('TR/'//dynnm(n)(4:6)//'M', trm, mymeta )
               call itf_phy_unfold (pw(l_minx,l_miny,1+Schm_notop), &
                                    F_busdyn(indx), F_jdo, &
                                    1,nk,l_minx,l_maxx,l_miny,l_maxy)
               call itf_phy_unfold (trm(l_minx,l_miny,1+Schm_notop), &
                                    F_busdyn(indx), F_jdo, &
                                    1,nk,l_minx,l_maxx,l_miny,l_maxy)
            endif
         end do
         return
      endif

      do n= 1, p_bdyn_top
         item_bus = dynnm(n)(1:7)
         if ( item_bus(1:3) .eq. 'TR/' .and. item_bus(7:7) .eq. 'P' ) then
            dumc = 'TR/'//dynnm(n)(4:6)//'P,W'
            call getindx2  (trim(dumc),  'DYN', indx, lght, soit)
            istat = gmm_get('TR/'//dynnm(n)(4:6)//'P', pw, mymeta )
            call itf_phy_unfold (pw(l_minx,l_miny,1+Schm_notop), &
                                 F_busdyn(indx), F_jdo, &
                                 1,nk,l_minx,l_maxx,l_miny,l_maxy)
         endif
         do i= 1, 3
            item_pw = liste(i)//':P'
            if (item_bus .eq. item_pw) then
               call getindx2  (item_bus,  'DYN', indx, lght, soit)
               istat = gmm_get(item_bus, pw, mymeta )
               call itf_phy_unfold (pw(l_minx,l_miny,1+Schm_notop), &
                                    F_busdyn(indx), F_jdo, &
                                    1,nk,l_minx,l_maxx,l_miny,l_maxy)
               exit
            endif
         end do
      end do
!
!     ---------------------------------------------------------------
!
      return
      end
