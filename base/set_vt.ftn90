!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r set_vt -	initialization of the commons for time-dependent
!		variable. Virtual Memory manager initialization
!
#define SPY_VMM_CREATE spy_vmm_create
#include "model_macros_f.h"

      subroutine set_vt
!
      implicit none
!
!author
!    sylvie gravel - rpn - august 1993
!
!revision
! v2_00 - Desgagne/Lee   - initial MPI version (from set_vt v1_03)
! v2_21 - J. P. Toviessi - rename some model output variables
! v2_30 - Edouard S.     - remove pi' at the top
! v2_31 - Desgagne M.    - remove HU and QC and call to set_trin and
!                          re-introduce 3D tracers
! v3_00 - Desgagne & Lee    - Lam configuration
! v4_05 - Lepine M.         - VMM replacement with GMM
! V4_10 - Plante A.         - Thermo upstream positions
!
!object
!	See above id.
!	
!arguments
!	none
!
!implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "vt0.cdk"
#include "vth.cdk"
#include "vt1.cdk"
#include "vtx.cdk"
#include "tr3d.cdk"
#include "pw.cdk"
!
!modules
!
      integer i
      real, pointer, dimension (:,:,:) :: tr
!
!Notes:
!	The level at time t0 is not created explicitly in the
!	VMM manager tables.
!	It exists in the timestep by renaming the variables
!	created at time level t1 when they are not needed anymore
!	and will bear the same attributes.
!	However, for clarity, a complete comdeck is created
!	for all of the variables at time t0 and the keys
!	will be shuffled at run time according to the renaming
!	performed.
!	The user will therefore use two separate sets
!	of variables for clarity, but will only be using one in
!	memory or disk.
!       vt0 (VMM variables at time t0)
!       vt1 (VMM variables at time t1)
!       vt2 (VMM variables at time t2)
!       vth (VMM variables at time th [t0-dt/2])
!       vtx (VMM variables at no specific time: we do not carry from
!            t0 to t1 and from t1 to t2.)
!
!*
!
!     ---------------------------------------------------------------
!
      if (Lun_out.gt.0) write(Lun_out,1000)
!
!
!C       2.    Initialize comdeck for variables at time t0
!              -------------------------------------------
!	Assign the names of the variables
!
!
      gmmk_wt0_s    = 'WT0'
      gmmk_tt0_s    = 'TT0'
      gmmk_zdt0_s   = 'ZDT0'
      gmmk_st0_s    = 'ST0'
      gmmk_qt0_s    = 'QT0'
      gmmk_ut0_s    = 'UT0'
      gmmk_vt0_s    = 'VT0'

      nullify(ut0,vt0,wt0,tt0,qt0,zdt0,st0)
      gmmstat = gmm_create(gmmk_ut0_s,ut0,meta3d_nk1,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(ut0)'
      gmmstat = gmm_create(gmmk_vt0_s,vt0,meta3d_nk1,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(vt0)'
      gmmstat = gmm_create(gmmk_wt0_s,wt0,meta3d_nk1,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(wt0)'
      gmmstat = gmm_create(gmmk_tt0_s,tt0,meta3d_nk2,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(wt0)'
      gmmstat = gmm_create(gmmk_qt0_s,qt0,meta3d_0nk1,GMM_FLAG_RSTR+GMM_FLAG_IZER)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(qt0)'
      gmmstat = gmm_create(gmmk_zdt0_s,zdt0,meta3d_nk1,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(zdt0)'
      gmmstat = gmm_create(gmmk_st0_s,st0,meta2d,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(st0)'
!
!
!C       3.    Create variables at time t0-dt/2 (th)
!              -------------------------------------
!	Assign the name of the variables
!
      gmmk_uth_s = 'UTH'
      gmmk_vth_s = 'VTH'
      gmmk_zdth_s= 'ZDTH'
!
      gmmk_xth_s = 'XTH'
      gmmk_yth_s = 'YTH'
      gmmk_zth_s = 'ZTH'
      gmmk_xcth_s= 'XCTH'
      gmmk_ycth_s= 'YCTH'
      gmmk_zcth_s= 'ZCTH'
!
      gmmk_xth_thermo_s = 'XTHT'
      gmmk_yth_thermo_s = 'YTHT'
      gmmk_zth_thermo_s = 'ZTHT'
      gmmk_xcth_thermo_s= 'XCHT'
      gmmk_ycth_thermo_s= 'YCHT'
      gmmk_zcth_thermo_s= 'ZCHT'
!
      gmmstat = gmm_create(gmmk_uth_s ,uth ,meta3d_nk,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(uth)'
      gmmstat = gmm_create(gmmk_vth_s ,vth ,meta3d_nk,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(vth)'
      gmmstat = gmm_create(gmmk_zdth_s,zdth,meta3d_nk1,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(zdth)'
!
      gmmstat = gmm_create(gmmk_xth_s ,xth,meta1d,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(xth)'
      gmmstat = gmm_create(gmmk_yth_s ,yth,meta1d,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(yth)'
      gmmstat = gmm_create(gmmk_zth_s ,zth,meta1d,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(zth)'
      gmmstat = gmm_create(gmmk_xcth_s,xcth,meta1d,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(xcth)'
      gmmstat = gmm_create(gmmk_ycth_s,ycth,meta1d,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(ycth)'
      gmmstat = gmm_create(gmmk_zcth_s,zcth,meta1d,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(zcth)'
!
      gmmstat = gmm_create(gmmk_xth_thermo_s ,xth_thermo,meta1dt,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(xth_thermo)'
      gmmstat = gmm_create(gmmk_yth_thermo_s ,yth_thermo,meta1dt,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(yth_thermo)'
      gmmstat = gmm_create(gmmk_zth_thermo_s ,zth_thermo,meta1dt,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(zth_thermo)'
      gmmstat = gmm_create(gmmk_xcth_thermo_s,xcth_thermo,meta1dt,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(xcth_thermo)'
      gmmstat = gmm_create(gmmk_ycth_thermo_s,ycth_thermo,meta1dt,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(ycth_thermo)'
      gmmstat = gmm_create(gmmk_zcth_thermo_s,zcth_thermo,meta1dt,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(zcth_thermo)'

!
!C       4.    Create variables at time t0-dt (t1)
!              -----------------------------------
!	Assign the names of the variables
!
!
      gmmk_wt1_s   = 'WT1'
      gmmk_tt1_s   = 'TT1'
      gmmk_zdt1_s  = 'ZDT1'
      gmmk_wup_s   = 'WUP'
      gmmk_zdup_s  = 'ZDUP'
      gmmk_xct1_s  = 'XCT1'
      gmmk_yct1_s  = 'YCT1'
      gmmk_zct1_s  = 'ZCT1'
      gmmk_st1_s   = 'ST1'
      gmmk_qt1_s   = 'QT1'
      gmmk_ut1_s   = 'UT1'
      gmmk_vt1_s   = 'VT1'
      gmmk_mutx_s  = 'MUTX'
      gmmk_bspqtx_s= 'BSPQ'
      gmmk_fiptx_s = 'FIPTX'

      nullify(ut1,vt1,wt1,tt1)
      gmmstat = gmm_create(gmmk_ut1_s,ut1,meta3d_nk1,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(ut1)'
      gmmstat = gmm_create(gmmk_vt1_s,vt1,meta3d_nk1,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(vt1)'
      gmmstat = gmm_create(gmmk_wt1_s,wt1,meta3d_nk1,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(wt1)'
      gmmstat = gmm_create(gmmk_tt1_s,tt1,meta3d_nk2,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(tt1)'

      nullify(wup,zdup,qt1,zdt1,st1)
      gmmstat = gmm_create(gmmk_wup_s,wup,meta3d_nk,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(wup)'
      gmmstat = gmm_create(gmmk_zdup_s,zdup,meta3d_nk1,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(zdup)'
      gmmstat = gmm_create(gmmk_qt1_s,qt1,meta3d_0nk1,GMM_FLAG_RSTR+GMM_FLAG_IZER)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(qt1)'
      gmmstat = gmm_create(gmmk_zdt1_s,zdt1,meta3d_nk1,GMM_FLAG_RSTR+GMM_FLAG_IZER)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(zdt1)'
      gmmstat = gmm_create(gmmk_st1_s,st1,meta2d,GMM_FLAG_RSTR+GMM_FLAG_IZER)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(st1)'
!
      nullify(xct1,yct1,zct1,bspqtx,mutx,fiptx)
      gmmstat = gmm_create(gmmk_xct1_s,xct1,meta1d,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(xct1)'
      gmmstat = gmm_create(gmmk_yct1_s,yct1,meta1d,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(yct1)'
      gmmstat = gmm_create(gmmk_zct1_s,zct1,meta1d,GMM_FLAG_RSTR+GMM_FLAG_INAN)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(zct1)'
      gmmstat = gmm_create(gmmk_bspqtx_s,bspqtx,meta3d_0nk1,GMM_NULL_FLAGS)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(bspqtx)'
      gmmstat = gmm_create(gmmk_mutx_s,mutx,meta3d_nk1,GMM_NULL_FLAGS)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(mutx)'
      gmmstat = gmm_create(gmmk_fiptx_s,fiptx,meta3d_0nk1,GMM_NULL_FLAGS)
      if (GMM_IS_ERROR(gmmstat)) print *,'set_vt ERROR at gmm_create(fiptx)'

      do i=1,Tr3d_ntr
         nullify(tr)
         gmmstat = gmm_create('TR/'//trim(Tr3d_name_S(i))//':M',tr,meta3d_nk2,GMM_FLAG_RSTR+GMM_FLAG_IZER)
         nullify(tr)
         gmmstat = gmm_create('TR/'//trim(Tr3d_name_S(i))//':P',tr,meta3d_nk2,GMM_FLAG_RSTR+GMM_FLAG_IZER)
         nullify(tr)
         gmmstat = gmm_create('DIGF_'//trim(Tr3d_name_S(i))    ,tr,meta3d_nk2,GMM_FLAG_RSTR+GMM_FLAG_IZER)
      end do

      gmmk_pw_uplus_s  = 'PW_UU:P'
      gmmk_pw_vplus_s  = 'PW_VV:P'
      gmmk_pw_wplus_s  = 'PW_WW:P'
      gmmk_pw_tplus_s  = 'PW_TT:P'
      gmmk_pw_pmplus_s = 'PW_PM:P'
      gmmk_pw_ptplus_s = 'PW_PT:P'
      gmmk_pw_gzplus_s = 'PW_GZ:P'

      gmmk_pw_umoins_s = 'PW_UU:M'
      gmmk_pw_vmoins_s = 'PW_VV:M'
      gmmk_pw_tmoins_s = 'PW_TT:M'
      gmmk_pw_pmmoins_s= 'PW_PM:M'

!      gmmk_pw_lat_s    = 'PW_LAT'
!      gmmk_pw_lon_s    = 'PW_LON'
!      gmmk_pw_dxdy_s   = 'PW_DXDY'
!      gmmk_pw_eponmod_s= 'PW_EPONMOD'

      nullify (pw_uplus,pw_vplus,pw_wplus,pw_tplus,pw_pm_plus,pw_pt_plus,pw_gzplus)
      nullify (pw_umoins,pw_vmoins,pw_tmoins,pw_pm_moins)

      gmmstat = gmm_create(gmmk_pw_uplus_s  ,pw_uplus  ,meta3d_nk2,GMM_FLAG_RSTR)
      gmmstat = gmm_create(gmmk_pw_vplus_s  ,pw_vplus  ,meta3d_nk2,GMM_FLAG_RSTR)
      gmmstat = gmm_create(gmmk_pw_wplus_s  ,pw_wplus  ,meta3d_nk2,GMM_FLAG_RSTR)
      gmmstat = gmm_create(gmmk_pw_tplus_s  ,pw_tplus  ,meta3d_nk2,GMM_FLAG_RSTR)
      gmmstat = gmm_create(gmmk_pw_pmplus_s ,pw_pm_plus,meta3d_nk2,GMM_FLAG_RSTR)
      gmmstat = gmm_create(gmmk_pw_ptplus_s ,pw_pt_plus,meta3d_nk2,GMM_FLAG_RSTR)
      gmmstat = gmm_create(gmmk_pw_gzplus_s ,pw_gzplus ,meta3d_nk2,GMM_FLAG_RSTR)

      gmmstat = gmm_create(gmmk_pw_umoins_s ,pw_umoins  ,meta3d_nk2)
      gmmstat = gmm_create(gmmk_pw_vmoins_s ,pw_vmoins  ,meta3d_nk2)
      gmmstat = gmm_create(gmmk_pw_tmoins_s ,pw_tmoins  ,meta3d_nk2)
      gmmstat = gmm_create(gmmk_pw_pmmoins_s,pw_pm_moins,meta3d_nk2)

!
 1000 format( &
      /,'INITIALIZATION OF TIME-DEP. VARIABLE COMDECKS (S/R SET_VT)', &
      /,'=========================================================')
!
!     ---------------------------------------------------------------
!
      return
      end
