!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!s/r wrrstrt_phy - Write the restart file restart_BUSPER_$date
!
#include "model_macros_f.h"
!
      subroutine wrrstrt_phy (F_spin_L)
      implicit none
!
      logical F_spin_L
!author
!     M. Desgagne - Mars 2008
!
!revision
! v3_31 - Desgagne M.       - initial MPI version
! v4_14 - Dugas B.          - account for increment forcing data
!
!implicits
#include <arch_specific.hf>
#include <gmm.hf>
#include "lun.cdk"
#include "lctl.cdk"
#include "grd.cdk"
#include "cstv.cdk"
#include "init.cdk"
#include "schm.cdk"
#include "rstr.cdk"
#include "modconst.cdk"
#include "clim.cdk"
#include "cfld.cdk"
#include "step.cdk"
!
      integer,external :: fnom,fclos
!
      character*512  fn
      character*16   datev
      integer dim,unf,ier,ibuf(4),datstp,gmmstat
      real   rbuf(6)
      real*8 dayfrac, sec_in_day
      parameter (sec_in_day=86400.0d0)
      type(gmm_metadata) :: meta_busper
      real, pointer, dimension(:,:) :: BUSPER_3d
!
!     ---------------------------------------------------------------
!
      if ( .not. Schm_phyms_L ) return
!
      unf = 0
!
      dayfrac = dble(Step_kount) * Cstv_dt_8 / sec_in_day
      call incdatsd (datev,Mod_runstrt_S,dayfrac)
!
      fn='restart_BUSPER'
      if (F_spin_L) fn= 'BUSPER4spinphy_'//trim(datev)
!
      ier = fnom (unf,fn,'SEQ+UNF',0)
!
      if (Lun_out.gt.0) write(Lun_out,2000) Lctl_step,trim(fn)
!
      write(unf) F_spin_L 
!
      if (F_spin_L) then
         call datp2f (datstp,datev)
         gmmstat = gmm_get ('BUSPER_3d',BUSPER_3d,meta_busper)
         dim = (meta_busper%l(1)%high-meta_busper%l(1)%low+1)*&
               (meta_busper%l(2)%high-meta_busper%l(2)%low+1)

         ibuf(1) = datstp
         ibuf(2) = dim
         ibuf(3) = Grd_ni
         ibuf(4) = Grd_nj
!
         rbuf(1) = Grd_dx
         rbuf(2) = Grd_dy
         rbuf(3) = Grd_xlon1
         rbuf(4) = Grd_xlat1
         rbuf(5) = Grd_xlon2
         rbuf(6) = Grd_xlat2
!
         write(unf) ibuf, rbuf
         write(unf) BUSPER_3d
      endif
!
!      if (Clim_inincr_L) then
!         call wawrit (unf, Cfld_nbr, adr, 1)
!         adr = adr + 1
!         if (Cfld_nbr > 0) then
!            call wawrit( unf,Cfld_date, adr,           Cfld_nbr )
!            call wawrit( unf,Cfld_levs, adr+  Cfld_nbr,Cfld_nbr )
!            call wawrit( unf,Cfld_list, adr+2*Cfld_nbr,Cfld_nbr )
!            adr = adr+3*Cfld_nbr
!         endif
!      endif
!
      ier = fclos(unf) 
!
 2000 format(/,'WRITING A PHYSICS RESTART FILE AT TIMESTEP #',I8,x,a, &
             /,'============================================')
!
!     ---------------------------------------------------------------
!      
      return
      end
