!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r var_topo - varies topography incrementally from analysis
!                 topography to target topography
!
#include "model_macros_f.h"
!
      subroutine var_topo()
!
      implicit none
!
!author
!     Sylvie Gravel
!
!revision
! v3_11 - Gravel S.         - initial version
! v4_05 - Lepine M.         - VMM replacement with GMM
!
!object
! (see above)
!
!arguments
!        None
!
!implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "p_geof.cdk" 
#include "lctl.cdk"
#include "dcst.cdk"
#include "vtopo.cdk"
#include "vt1.cdk"
!
!modules
!
      integer i,j
!*
      real*8 lt, pio2, f, atime, two
      parameter (two = 2.0d0)
!     __________________________________________________________________
!
      gmmstat = gmm_get(gmmk_fis0_s,fis0,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'var_topo ERROR at gmm_get(fis0)'
      gmmstat = gmm_get(gmmk_fis1_s,fis1,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'var_topo ERROR at gmm_get(fis1)'
      gmmstat = gmm_get(gmmk_dfis_s,dfis,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'var_topo ERROR at gmm_get(dfis)'
!
      if(Vtopo_ndt.eq.0)then
         call handle_error(-1,'var_topo','var_topo : Vtopo_ndt must be > 0')
      endif
      lt = Vtopo_ndt
      pio2 = Dcst_pi_8 / two

      f = min(Lctl_step-Vtopo_start+1,Vtopo_ndt)
      atime  = (cos(pio2 * (f-1.)/ lt))**2 &
             - (cos(pio2 *  f    / lt))**2

      do j= 1, l_nj 
      do i= 1, l_ni
         fis1 (i,j)  = fis0(i,j)
         fis0 (i,j)  = fis0(i,j)  + atime * dfis(i,j)
      end do
      end do
!
!
!     __________________________________________________________________
!
      return
      end
