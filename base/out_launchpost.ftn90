!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r out_launchpost - Signals monitor for output processing
!
#include "model_macros_f.h"
!
      subroutine out_launchpost (F_forceit_L)
      implicit none
!
      logical F_forceit_L
!
!AUTHOR   Michel Desgagne  - Summer 2010
!
!REVISION
! v4_14 - Desgagne M.      - Initial version
!
#include "out.cdk"
#include "path.cdk"
#include "ptopo.cdk"
#include "lctl.cdk"
#include <clib_interface.cdk>
!
      character*1024 filen,filen_link
      integer i, err, unf
!
!----------------------------------------------------------------------
!
      if (Ptopo_myproc.eq.0)           then

      if (Out_post_L .or. F_forceit_L) then
      
         filen      = trim(Path_output_S)//'/output_ready_MASTER'
         filen_link = trim(Path_output_S)//'/output_ready'
         unf   = 474
         open  (unf,file=filen,access='SEQUENTIAL',form='FORMATTED',position='APPEND')
         write (unf,'(a,x,a)') trim(Out_laststep_S)
         close (unf)
         if (.not.F_forceit_L) then
            err = clib_symlink ( trim(filen), trim(filen_link) )
            write (6,1001) trim(Out_laststep_S),lctl_step
         endif

      endif

      endif

 1001 format (' OUT_LAUNCHPOST: DIRECTORY output/',a,' was released for postprocessing at timestep: ',i)
!
!----------------------------------------------------------------------
!
      return
      end
