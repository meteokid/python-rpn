!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r wil_eval
!
      SUBROUTINE WIL_EVAL(DIVSC,ZETASC,PHISC,MMH,NNH,KKH,A,ALPHA, &
                          OMEGA,LAMBDA,THETA,DIV,ZETA,PHI,U,V, &
                          LDIAG,LROW,TRIGS,CMN,DMN,EMN,EPSIL,ALP,DALP,ANNP1,MAXH,NALPH)
!
      implicit none
#include <arch_specific.hf>
!
      COMPLEX ZETASC(*),DIVSC(*),PHISC(*)
      INTEGER MMH,NNH,KKH
      REAL A, ALPHA, OMEGA, LAMBDA, THETA
      REAL DIV, ZETA, PHI, U, V 
!
      INTEGER MAXH,NALPH
!
!author Jacob et al. 1992 
!
!revision
! v4_04 - Jacob et al.     - initial version EVAL 
! v4_04 - Tanguay M.       - Williamson's cases
!
!object
!     ENCAPSULATED CODE FOR RECOVERING HIGH RESOLUTION SOLUTION
!     AT ARBITRARY POINT ON SPHERE.
!                   
!implicite
#include "wil_lun.cdk"
!------------------------------------------------------------------
!
!     UNDEFINED VALUE (USED FOR INITIAL CALL OF ROUTINE)
!     --------------------------------------------------
      REAL UNDEF
      PARAMETER (UNDEF=1.E-30)
!
!     KEEP OLD ARGUMENT VALUES TO SAVE RECOMPUTATION IF THEY
!     HAVEN'T CHANGED SINCE LAST CALL
!     ------------------------------------------------------
!
!     ROTATION ANKLE (REMEMBER PREVIOUS VALUE)
!     ----------------------------------------
      REAL AOLD
      SAVE AOLD
      LOGICAL FIRST 
      SAVE FIRST 
!     
!     SPECTRAL SPACE (REMEMBER PREVIOUS VALUE)
!     ----------------------------------------
      INTEGER MMOLD,NNOLD,KKOLD
      SAVE MMOLD,NNOLD,KKOLD
!
!     POSITION (REMEMBER PREVIOUS VALUE)
!     ----------------------------------
      REAL LAMOLD,THEOLD
      SAVE LAMOLD,THEOLD
!
!     LOCAL VARIABLES
!     ---------------
!
!     ARRAY DIMENSIONS
!     ----------------
      INTEGER NFCH
!
!     ARRAY INDEX FOR SPECTRAL COEFFICIENTS
!     -------------------------------------
      INTEGER LDIAG(0:MAXH,2)
      INTEGER LROW(0:MAXH,2)
!
!CC   SAVE LDIAG,LROW
!
!     INVERSE FOURIER TRANSFORM
!     -------------------------
      REAL TRIGS(MAXH+1,2)
!CC   SAVE TRIGS
!
!     RECURRENCE COEFFICIENTS FOR LEGENDRE POLYNOMIALS
!     ------------------------------------------------
      REAL CMN(NALPH),DMN(NALPH),EMN(NALPH)
!CC   SAVE CMN,DMN,EMN
!
!     RECURRENCE COEFFICIENTS FOR DERIVATIVE
!     --------------------------------------
      REAL EPSIL(NALPH)
!CC   SAVE EPSIL
!
!     VALUE OF POLYNOMIALS AND DERIVATIVES
!     ------------------------------------
      REAL ALP(NALPH),DALP(NALPH)
!CC   SAVE ALP,DALP
!
!     SCALING FACTOR FOR U,V
!     ----------------------
      REAL ANNP1(MAXH)
!CC   SAVE ANNP1
!
!     CORIOLIS COEFFICIENT
!     --------------------
      REAL CORSC1,CORSC2
      SAVE CORSC1,CORSC2
!
!     TEMPORARIES
!     -----------
      INTEGER N
!
!     INITIAL (UNDEFINED) VALUES FOR MODEL PARAMETERS
!     -----------------------------------------------
      DATA AOLD /UNDEF/
      DATA FIRST /.TRUE./
      DATA MMOLD,NNOLD,KKOLD /0,0,0/
      DATA LAMOLD,THEOLD /UNDEF,UNDEF/
!------------------------------------------------------------------
!
!     NUMBER OF FOURIER COEFFICIENTS
!     ------------------------------
      NFCH=(MMH+1) - AMAX0(MMH-KKH, 0)
!
!     COEFFICIENT AND INDEX ARRAYS FOR LEGENDRE TRANSFORM     
!     ---------------------------------------------------
!
!     CHECK FOR SUFFICIENT STORAGE (PARAMETER MAX CORRECTLY SPECIFIED)
!     ----------------------------------------------------------------
      IF (NALPH .LT. (MMH+1)*(KKH+1)-(MMH*MMH+MMH)/2-1) THEN
         if (Wil_Lun_out.gt.0) WRITE (Wil_Lun_out,2) MAXH
    2        FORMAT(/,' STSWM: FATAL ERROR IN SUBROUTINE EVAL:',/, &
             ' PARAMETER MAXH TOO SMALL SPECIFIED FOR BELOUSOV', &
             ' RECURRENCE; MAXH = ', I10)
         call handle_error(-1,'wil_eval','STOP IN EVAL')
      ELSE
         IF ((MMH .NE. MMOLD) .OR. (NNH .NE. NNOLD) .OR. &
             (KKH .NE. KKOLD)) THEN
!
!           TRUNCATION-DEPENDENT COEFFICIENTS
!           ---------------------------------
            CALL WIL_DCEPS(MAXH,MMH,NNH,KKH,CMN,DMN,EMN,EPSIL,LROW,LDIAG)
!
!           FACTOR FOR ROUTINE UV
!           --------------------- 
            DO 10 N = 1,KKH
               ANNP1(N) = A/REAL(N*(N+1))
   10       CONTINUE
            MMOLD = MMH
            NNOLD = NNH
            KKOLD = KKH
         ENDIF
      ENDIF
!
!     ROTATED CORIOLIS TERMS
!     ----------------------
      IF (FIRST.and.Wil_Lun_out.gt.0)  &
          write(Wil_Lun_out,*) 'FIRST  ALPHA .NE. AOLD = ',ALPHA .NE. AOLD
!CC   AOLD = ALPHA
      IF (FIRST.and.Wil_Lun_out.gt.0) &
          write(Wil_Lun_out,*) 'MODIFY ALPHA .NE. AOLD = ',ALPHA .NE. AOLD
      FIRST = .FALSE.
      IF (ALPHA .NE. AOLD) THEN
!        WAVE M=0, N=1
!        -------------
         CORSC1 = SQRT(8.0/3.0)*OMEGA*COS(ALPHA)
!        WAVE M=1, N=1
!        -------------
         CORSC2 = - SQRT(4.0/3.0)*OMEGA*SIN(ALPHA)
         AOLD = ALPHA
      ENDIF
!
!     COMPUTE DISCRETE FOURIER COEFFICIENTS
!     FOR LONGITUDE LAMBDA
!     -------------------------------------
      IF (LAMBDA .NE. LAMOLD) THEN
         CALL WIL_DFTFAX(MAXH,NFCH,LAMBDA,TRIGS)
         LAMOLD = LAMBDA
      ENDIF
!
!     COMPUTE ASSOCIATED LEGENDRE POLYNOMIALS FOR LATITUTE THETA
!     ----------------------------------------------------------
      IF (THETA .NE. THEOLD) THEN
         CALL WIL_DCALP(MMH,NNH,KKH,CMN,DMN,EMN,EPSIL,LROW,LDIAG,ABS(THETA), &
                        ALP,DALP,MAXH,NALPH)
         THEOLD = THETA
      ENDIF
!
!     EVALUATE FIELD AT CHOSEN POINT BY 
!     INVERSE LEGENDRE TRANSFORM FOLLOWED BY INVERSE FOURIER TRANSFORM
!     ----------------------------------------------------------------
      CALL WIL_DTRNS(NNH,PHISC,LDIAG,TRIGS,ALP,THETA,PHI)
      CALL WIL_DTRNS(NNH,ZETASC,LDIAG,TRIGS,ALP,THETA,ZETA)
      CALL WIL_DTRNS(NNH,DIVSC,LDIAG,TRIGS,ALP,THETA,DIV)
      CALL WIL_DUV(NNH,DIVSC,ZETASC,LDIAG,TRIGS,ALP,DALP,ANNP1, &
                   CORSC1,CORSC2,THETA,U,V,MAXH,NALPH)
!
      RETURN
!
      END
