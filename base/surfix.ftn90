!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r surfix - force wind and temperature values at surface
!
#include "model_macros_f.h"
!
      subroutine surfix 
!
      implicit none
#include <arch_specific.hf>
!
!
!author
!         Sylvie Gravel, September 2004
!
!revision
! v3_20 - Gravel S. - initial MPI version
! v4_05 - Lepine M. - VMM replacement with GMM
!
!object
!	
!implicits
#include "gmm.hf"
#include "glb_ld.cdk"
#include "vt0.cdk"
#include "vt1.cdk"
!
!*

      type(gmm_metadata) :: mymeta
      integer i,j,istat
!
!     ---------------------------------------------------------------
!
      istat = gmm_get(gmmk_ut1_s,ut1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'surfix ERROR at gmm_get(ut1)'
      istat = gmm_get(gmmk_vt1_s,vt1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'surfix ERROR at gmm_get(vt1)'
      istat = gmm_get(gmmk_tt1_s,tt1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'surfix ERROR at gmm_get(tt1)'

      do j=1,l_nj
      do i=1,l_ni
        tt1(i,j,l_nk) = tt1(i,j,l_nk-1)
      enddo
      enddo
      do j=1,l_nj
      do i=1,l_niu
        ut1(i,j,l_nk) = ut1(i,j,l_nk-1)
      enddo
      enddo
      do j=1,l_njv
      do i=1,l_ni
        vt1(i,j,l_nk) = vt1(i,j,l_nk-1)
      enddo
      enddo
!
!     ---------------------------------------------------------------
!
      return
      end
