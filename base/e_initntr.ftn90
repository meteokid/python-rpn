!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r e_initntr
!
      subroutine e_initntr
      implicit none
!
!author   Michel Desgagne -- Fal 2008 --
!
!revision
! v3_31 - M. Desgagne       - Initial version
!
#include "path.cdk"
#include "version.cdk"
#include <clib_interface.cdk>
!
      integer  exdb
      external exdb, init_ndoms

      character*50 DSTP
      character(len=256) :: my_dir
      integer err,mydomain,ndomains
!
!--------------------------------------------------------------------
!
      call rpn_comm_mydomain (init_ndoms, mydomain, ndomains)

      write(my_dir,'(a,i4.4)') 'cfg_',mydomain

      err = clib_getenv ('TASK_WORK'  ,Path_work_S  )
      err = clib_getenv ('TASK_INPUT' ,Path_input_S )
      err = clib_getenv ('TASK_OUTPUT',Path_output_S)

      Path_work_S   = trim(Path_work_S  ) // '/' // trim(my_dir)
      Path_input_S  = trim(Path_input_S ) // '/' // trim(my_dir)
      Path_output_S = trim(Path_output_S) // '/' // trim(my_dir)

! Directory Path_work_S has been created by Um_runmod.ksh

      err = clib_chdir (trim(Path_work_S))
	
      err= clib_mkdir (Path_output_S)

      err = clib_getenv ('ATM_MODEL_DSTP',DSTP)
      err = clib_getenv ('GEMBNDL_VERSION',Version_number_S)
      Version_title_S = 'GEMNTR --- Release of: '//trim(DSTP)

      call  open_status_file2 (trim(Path_output_S)//'/status_ent.dot')
      call write_status_file2 ('_status=ABORT' )
      err = exdb(trim(Version_title_S),trim(Version_number_S),'NON')

      call gemtim3 (6)
!
!--------------------------------------------------------------------
!
      return
      end

