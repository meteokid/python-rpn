!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r e_initntr
!
#include "model_macros_f.h"
      subroutine e_initntr2(my_color)
      implicit none
!
      integer my_color
!
#include <arch_specific.hf>
!
!author   Michel Desgagne -- Fal 2008 --
!
!revision
! v3_31 - M. Desgagne       - Initial version
! v4_40 - Qaddouri/Desgagne - Yin-Yang setup
!
#include "grd.cdk"
#include "path.cdk"
#include "ptopo.cdk"
#include "version.cdk"
#include <clib_interface.cdk>
!
      integer,external :: rpn_comm_init_multigrid, fnom, exdb
      integer,external :: rpn_comm_init_multi_level
      external init_ndoms
!
      character(len=50) :: DSTP,dummy,name_S,arch_S,compil_S
      logical :: is_official_L
      character(len=256) :: my_dir
      integer :: err,f1,npex,mydomain,npey,ngrids,pe_tot,pe_me
!
!--------------------------------------------------------------------
!
      call rpn_comm_mydomain (init_ndoms, mydomain)
      call RPN_COMM_SIZE ('WORLD',pe_tot,err)
      call RPN_COMM_RANK ('WORLD',pe_me ,err)

      ngrids=1
      if (Grd_yinyang_L) ngrids=2

      npex=1
      npey=1

      Ptopo_couleur = rpn_comm_init_multi_level (dummy, Ptopo_myproc,Ptopo_numproc, &
                                                  npex,npey, pe_tot/ngrids, ngrids  )

      if (Grd_yinyang_L) then
         if (Ptopo_couleur.eq.0) Grd_yinyang_S = 'YIN'
         if (Ptopo_couleur.eq.1) Grd_yinyang_S = 'YAN'
      else
         Ptopo_couleur = 0
      endif
      if (pe_me.gt.(Grd_ndomains*ngrids-1)) Ptopo_couleur = -1
      my_color = Ptopo_couleur

      write(my_dir,'(a,i4.4)') 'cfg_',mydomain

      err = clib_getenv ('TASK_WORK'  ,Path_work_S  )
      err = clib_getenv ('TASK_INPUT' ,Path_input_S )
      err = clib_getenv ('TASK_OUTPUT',Path_output_S)

      Path_input_S  = trim(Path_input_S ) // '/' // trim(my_dir)
      Path_work_S   = trim(Path_work_S  ) // '/' // trim(my_dir)
      Path_output_S = trim(Path_output_S) // '/' // trim(my_dir)

! Directory Path_work_S has been created by Um_runent.ksh

      if (Ptopo_couleur.eq.0) err = clib_mkdir (trim(Path_output_S))
      err = clib_chdir (trim(Path_work_S))

      call atm_model_getversion(name_S,Version_number_S,DSTP,arch_S,compil_S,is_official_L)
      if (is_official_L) then
         Version_title_S = trim(name_S)//' --- Release of: '//trim(DSTP)
      else
         Version_title_S = trim(name_S)//' --- User Build: '//trim(DSTP)
      endif

      if (Ptopo_couleur.eq.0) then
         call  open_status_file3 (trim(Path_output_S)//'/status_ent.dot')
         call write_status_file3 ('_status=ABORT' )
         err = exdb(trim(Version_title_S),trim(Version_number_S),'NON')
      endif

      call gemtim4 ( 6, 'END OF e_initntr', .false. )
!
!--------------------------------------------------------------------
!
      return
      end

