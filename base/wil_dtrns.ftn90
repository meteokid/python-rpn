!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r wil_dtrns
!
#include "model_macros_f.h"
!
      SUBROUTINE WIL_DTRNS (NNH,SCOEF,LDIAG,TRIGS,ALP,RLAT,PHI)                
!
      implicit none
!
!implicits
#include "wil_williamson.cdk"
!
      INTEGER NNH
      COMPLEX SCOEF(Williamson_NALPH_Read)
      INTEGER LDIAG(0:Williamson_MAXH_Read,2)
      REAL TRIGS(Williamson_MAXH_Read+1,2)
      REAL ALP(Williamson_NALPH_Read)
      REAL RLAT
      REAL PHI
!                                                                              
!author Jacob et al. 1992 
!
!revision
! v4_04 - Jacob et al.     - initial version DTRNS 
! v4_04 - Tanguay M.       - Williamson's cases
!
!object
!     THIS SUBROUTINE PERFORMS INVERSE SPHERICAL HARMONIC TRANSFORMS   
!     INTO FOURIER SPACE USING THE ASSOCIATED LEGENDRE POLYNOMIALS.
!     IT IS A REDUCED VERSION OF THE SHTRNS ROUTINE 
!
!------------------------------------------------------------------
      COMPLEX   CEVEN(Williamson_MAXH_Read+1), CODD(Williamson_MAXH_Read+1)            
!
      INTEGER JM,JN,IS
!
      COMPLEX X(Williamson_MAXH_Read+1)
!------------------------------------------------------------------
!
!     DETERMINE FOURIER COEFFICIENTS BY INVERSE LEGENDRE TRANSFORM.          
!     VARY M AND N SO PROCEDURE MOVES ALONG DIAGONALS DENOTED BY             
!     INDEX JN.  M IS GIVEN BY (JM-1) WHILE N IS GIVEN BY (JN+M).            
!     FIRST ACCUMULATE EVEN WAVENUMBER CONTRIBUTION                          
!     ------------------------------------------------------------
      DO 180 JN=0,NNH,2 
         IS = LDIAG(JN,2)                                                    
!                                                                               
!        THIS DETOUR HELPS AVOID THE NEED TO SEPARATELY ZERO CEVEN           
!        ---------------------------------------------------------
         IF (JN .EQ. 0) THEN  
            DO 150 JM=1,LDIAG(0,1)                                           
               CEVEN(JM) = SCOEF(IS+JM)*ALP(IS+JM)               
  150       CONTINUE                                                         
!
         ELSE                                                               
!                                                                               
            DO 170 JM=1,LDIAG(JN,1)
               CEVEN(JM) = CEVEN(JM) + SCOEF(IS+JM)*ALP(IS+JM) 
  170       CONTINUE 
!
         ENDIF
  180 CONTINUE                                                               
!                                                                               
!     NEXT ACCUMULATE ODD WAVENUMBER CONTRIBUTION                            
!     -------------------------------------------
      DO 215 JN=1,NNH,2 
         IS = LDIAG(JN,2)                                                    
!                                                                               
!        THIS DETOUR HELPS AVOID THE NEED TO SEPARATELY ZERO CODD            
!        --------------------------------------------------------
         IF (JN .EQ. 1) THEN
            DO 190 JM=1,LDIAG(1,1)                                           
                  CODD (JM) = SCOEF(IS+JM)*ALP(IS+JM)               
  190       CONTINUE                                                         
!                                                                               
!        ACCOUNT FOR THE FACT THAT THE FIRST ODD DIAGONAL MAY BE             
!        SHORTER THAN THE FIRST EVEN DIAGONAL (PART OF THE GAME              
!        TO AVOID EXPLICITLY ZEROING THE ENTIRE CODD ARRAY)                  
!        -------------------------------------------------------
            IF (LDIAG(1,1) .LT. LDIAG(0,1)) THEN                             
               DO 200 JM=LDIAG(1,1)+1, LDIAG(0,1)                            
                     CODD (JM) =  (0.0,0.0)                               
  200          CONTINUE                                                      
!                                                                               
            ENDIF                                                            
         ELSE
!                                                                               
            DO 210 JM=1,LDIAG(JN,1) 
               CODD (JM) = CODD (JM) + SCOEF(IS+JM)*ALP(IS+JM) 
  210       CONTINUE  
!
         ENDIF
  215 CONTINUE                                                               
!                                                                               
!     COMBINE CONTRIBUTIONS OF EVEN AND ODD WAVENUMBERS TO OBTAIN            
!     COMPLEX FOURIER COEFFICIENTS, FOLLOWED BY INVERSE FFT                  
!     -----------------------------------------------------------
      DO 225 JM=1,LDIAG(0,1)                                              
         IF (RLAT .GE. 0.0) THEN
            X(JM) = CEVEN(JM) + CODD(JM) 
         ELSE
            X(JM) = CEVEN(JM) - CODD(JM)
         ENDIF
  225 CONTINUE                                                            
!                                                                               
!     INVERSE FOURIER TRANSFORMATION 
!     ------------------------------
      CALL WIL_DFT991(X,TRIGS,Williamson_MAXH_Read,LDIAG(0,1),PHI)
!
      RETURN                                                                 
!
      END                                                                       
