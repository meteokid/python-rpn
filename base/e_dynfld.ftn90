!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r e_dynfld - to write out dynamic fields
!
#include "model_macros_f.h"
      subroutine e_dynfld 
      implicit none
#include <arch_specific.hf>
!
!AUTHOR  M. Desgagne    April 2002
!
!revision 
! v3_21 - Desgagne M. - dayfrac calc displaced
! v3_30 - Desgagne/Lee - new LAM I/O interface
! v3_31 - Lee V.      - bugfix: eliminate save_bmf key
! v4_03 - Lee/Desgagne - ISST
! v4_05 - Desgagne M. - implement tailjob launcher
! v4_05 - Lee V. - bugfix: save Pil_bcs_hollow_L after e_specanal/ac_posi
!
!IMPLICIT
#include "e_fu.cdk"
#include "e_cdate.cdk"
#include "e_topo.cdk"
#include "e_grids.cdk"
#include "bmf.cdk"
#include "step.cdk"
#include "pilot.cdk"
#include "filename.cdk"
!
!object
!  Dynamic fields will be written from dates Pil_jobstrt to Pil_jobend
!  Pil_bmf_L= TRUE forces BMF files to be written
!*
      integer  fstfrm,newdate,fclos
      external fstfrm,newdate,fclos
!
      character*16 date1,date2
      integer err,yy,dd,dum,cnt
      real*8 dayfrac,sec_in_day
      parameter (sec_in_day=86400.0d0)
!
!---------------------------------------------------------------------
!
      bmf_dtyp = 41
      date1    = Pil_jobstrt_S
      dayfrac  = dble(Step_nesdt) / sec_in_day
!
      if (Pil_bmf_L) then
          allocate ( topo (nifi*njfi) )
          call e_gettopo (topo, nifi, njfi)
      endif
!
      cnt   = 0
      ipilf = 1
!
      do
!
         call datp2f   ( datev, date1 )
         err = newdate ( datev, bmf_time1, bmf_time2, -3 )
         write (6,105) date1
         call prsdate  (yy,month,day,Bmf_hh,Bmf_mm,Bmf_ss,dum,date1)
         call e_specanal
!
         call e_open_files
!
         call e_intthm
!
         call e_intwind 
!     
         err = fstfrm ( e_fu_anal )
         err = fclos  ( e_fu_anal )
!
         call incdatsd (date2,date1,dayfrac)
         date1 = date2
!
         cnt = cnt + 1
         if (cnt .eq. Pil_lancemodel) &
            call system ( &
           'tailjob=../../RUNENT_upload/input/tailjob_E ; '            //&
           'if [ -s \${tailjob} ] ; then echo LAUNCHING ${tailjob} ; ' //&
           'soumet_lajob ${tailjob} ; /bin/rm -f ${tailjob} ; fi'      )

         call gemtim3 (6)
!
         if (date1 .gt. Pil_jobend_S) return

      end do
!     
 105  format (/43('#'),/,1X,'PROCESSING DATASET VALID: ',a16,/43('#'))
!
!---------------------------------------------------------------------
      return
      end
