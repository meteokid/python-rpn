!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
!
      subroutine write_3df3 ( fa,lminx,lmaxx,lminy,lmaxy,nis,njs,nks, &
                              nomvar,gid, gif, gjd, gjf, unf, done )
      implicit none
#include <arch_specific.hf>

      character* (*) nomvar
      logical done
      integer lminx,lmaxx,lminy,lmaxy,nis,njs,nks, &
              gid, gif, gjd, gjf, unf
      real fa (lminx:lmaxx,lminy:lmaxy,nks)

!author 
!     Michel Desgagne   - Spring 2006
!
!revision
! v3_30 - Lee V.          - initial version

#include "grdc.cdk"
#include "ptopo.cdk"
#include "lun.cdk"

      integer i,j,k,n,nbits,nb,ind_o(nks)
      real tr1(nis,njs,nks),add,con
      real, dimension (:), allocatable :: wkc
!
!----------------------------------------------------------------------
!
!     Writing field 'nomvar' if fa to binary fortran file unit=unf
!
      add = 0. ; con = 1.
      do k= 1, nks
         ind_o(k) = k
      end do
      call blkcol ( tr1,nis,njs,gid,gif,gjd,gjf,con,add, &
                    fa,lminx,lmaxx,lminy,lmaxy,nks,ind_o,nks )
      nb = 0
      nbits = Grdc_nbits

      if (Ptopo_blocme.eq.0) then

         if ((.not.done).and.(Lun_out.gt.0)) write(Lun_out,3000) &
           'writing 3df record:',nomvar(1:4),nis,njs,nks,nbits

         write (unf) nomvar(1:4),nis,njs,nks,nbits
         if (nbits.ge.32) then
            do k=1,nks
               write (unf) tr1(:,:,k)
            end do
         else
            n = (nis*njs*nbits+120+32-1)/32
            allocate (wkc(n))
            do k=1,nks
               call xxpak (tr1(1,1,k), wkc, nis, njs, -nbits, nb, 1)
               write (unf) wkc
            end do
            deallocate (wkc)
         endif
      endif

 3000 format (3x,a,x,a,4i7)
!
!----------------------------------------------------------------------
!
      return
      end
