!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!opyright (C) 2001  MSC-RPN COMM  %%%MC2%%%
!**s/r write_3df
#include "model_macros_f.h"
!
      subroutine write_3df ( fa,lminx,lmaxx,lminy,lmaxy,nis,njs,nks, &
                             nomvar,gid, gif, gjd, gjf,con,ind_o,unf )
      implicit none
!
      character* (*) nomvar
      integer lminx,lmaxx,lminy,lmaxy,nis,njs,nks, &
              gid, gif, gjd, gjf, ind_o(*), unf
      real fa(*),con
!
!author 
!     Michel Desgagne   - Spring 2006
!
!revision
! v3_30 - Lee V.          - initial version
!
!*
#include "grdc.cdk"
#include "ptopo.cdk"
#include "lctl.cdk"
#include "lun.cdk"
!
      integer i,j,k,n,nbits,nb
      real tr1(nis,njs,nks),add
      real, dimension (:), allocatable :: wkc
      logical prout_L
!
!----------------------------------------------------------------------
!
!     Writing field 'nomvar' if fa to binary fortran file unit=unf
!
      prout_L=.false.
      if (Lun_debug_L.and.Ptopo_numproc.eq.1) prout_L=.true.  

      add = 0.
      call blkcol ( tr1,nis,njs,gid,gif,gjd,gjf,con,add, &
                    fa,lminx,lmaxx,lminy,lmaxy,nks,ind_o,nks )
      if (prout_L) call statfld2 (tr1,nomvar(1:4),Lctl_step, &
                "writ3",1,nis,1,njs,1,nks,1,1,1,nis,njs,nks)
!
      nb = 0
      nbits = Grdc_nbits
!
      if (Ptopo_blocme.eq.0) then
         write (unf) nomvar(1:4),nis,njs,nks,nbits
         if (nbits.ge.32) then
            write (unf) tr1
         else
            n = (nis*njs*nbits+120+32-1)/32
            allocate (wkc(n))
            do k=1,nks
               call xxpak (tr1(1,1,k), wkc, nis, njs, -nbits, nb, 1)
               write (unf) wkc
            end do
            deallocate (wkc)
         endif
      endif
!
!----------------------------------------------------------------------
      return
      end
