!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!** s/r caldiv_2 - Computes horizontal divergence of wind-like fields 
!
#include "model_macros_f.h"
!
      subroutine caldiv_2 ( F_div, F_uu, F_vv, DIST_DIM, Nk )
!
      implicit none
#include <arch_specific.hf>
!
      integer  DIST_DIM, Nk
      real     F_div(DIST_SHAPE,Nk), F_uu  (DIST_SHAPE,Nk), &
               F_vv (DIST_SHAPE,Nk)
!
!authors
!      Methot/Patoine - cmc - nov 95 
!
!revision
! v2_00 - Desgagne M.       - initial MPI version (from caldiv v1_03)
! v3_10 - Corbeil & Desgagne & Lee - AIXport+Opti+OpenMP
! v4.7  - Gaudreault S.     - removing wind images
!
!object
!     see id section 
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! F_div         O        the resulted divergence field on G-grid
! F_uu          I        wind-like field on U-grid
! F_vv          I        wind-like field on V-grid
!----------------------------------------------------------------
!
!implicits
#include "glb_ld.cdk"
#include "geomg.cdk"
!
      integer i, j, k, i0, in, j0, jn
!*
!     __________________________________________________________________
!
      i0 = 1
      in = l_niu
      j0 = 1
      jn = l_njv
      if ((G_lam).and.(l_west)) i0 = 2
      if (l_south) j0 = 2
!
      do k=1,Nk
         do j = j0, jn
         do i = i0, l_niu
            F_div(i,j,k) = geomg_invcy2_8(j) * ( &
                          (F_uu(i,j,k)-F_uu(i-1,j,k))*geomg_invDX_8(i,j) * geomg_cy_8(j) &
                         +(F_vv(i,j,k)-F_vv(i,j-1,k))*Geomg_invDY_8(j) * geomg_cy_8(j))
         end do
         end do
!
         if (.not.G_lam) then
            if (l_south) then
            do i = i0, in
               F_div(i,1,k) = geomg_invcy2_8(1) * ( &
                             (F_uu(i,1,k)-F_uu(i-1,1,k))*geomg_invDX_8(i,j) * geomg_cy_8(j)  &
                             +F_vv(i,1,k)               *Geomg_invDY_8(1) * geomg_cy_8(1))
            end do
            endif
            if (l_north) then
            do i = i0, in
               F_div(i,l_nj,k) = geomg_invcy2_8(l_nj) * ( &
                         (F_uu(i,l_nj,k)-F_uu(i-1,l_nj,k))*geomg_invDX_8(i,j) * geomg_cy_8(j)  &
                         -F_vv(i,l_nj-1,k)                *Geomg_invDY_8(l_nj) * geomg_cy_8(l_nj))
            end do
            endif
         endif
      end do
!
      return
      end
