!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r hzd_momentum - applies horizontal diffusion on zdt and possibly on u and v
!                     to smooth momentum components for trajectory calculations after 
!                     a Crank-Nicholson step avoiding pole problems
!
#include "model_macros_f.h"
!
      subroutine hzd_momentum
      implicit none
#include <arch_specific.hf>
!
!author
!     Claude Girard - spring 2012
!
!revision
! v4_40 - Girard C.      - initial version
!
!object
!	
!arguments
!     none
!
#include "gmm.hf"
#include "glb_ld.cdk"
#include "schm.cdk"
#include "vt0.cdk"
#include "nest.cdk"
#include "grd.cdk"

      logical, save :: switch_on_hzd= .true.
      type(gmm_metadata) :: mymeta
      integer istat,i,j,k
!     _________________________________________________________________
!
      if (Schm_hzdadw_L .and. switch_on_hzd) then

         istat= gmm_get(gmmk_zdt0_s,zdt0,mymeta)
         istat= gmm_get(gmmk_ut0_s ,ut0 ,mymeta)
         istat= gmm_get(gmmk_vt0_s ,vt0 ,mymeta)
         istat= gmm_get(gmmk_nest_zd_s,nest_zd,mymeta)

         call hzd_ctrl3(ut0 , 'U', G_nk)
         call hzd_ctrl3(vt0 , 'V', G_nk)
         call hzd_ctrl3(zdt0, 'S', G_nk)
         if (Grd_yinyang_L) then
             do k= 1,G_nk
                do j= 1, l_nj
                do i= 1, l_ni
                   nest_zd(i,j,k)=zdt0 (i,j,k)
                enddo
                enddo
             enddo
             call rpn_comm_xch_halo(nest_zd,LDIST_DIM,l_ni,l_nj,G_nk, &
                  G_halox,G_haloy,G_periodx,G_periody,l_ni,0 )
             call yyg_scalbc(zdt0,nest_zd,LDIST_DIM,G_nk)

             call yyg_nestuv(ut0,vt0,LDIST_DIM,G_nk)
         endif
      endif
!     _________________________________________________________________
!
      return
      end
