!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
!**s/r yyg_nestuv -for interpolating and nesting Yin-Yang UV boundary conditions
!
#include "model_macros_f.h"
!
      subroutine yyg_nestuv (F_u, F_v, DIST_DIM, Nk )
      implicit none
#include <arch_specific.hf>
      integer  DIST_DIM, Nk
!
      real     F_u  (DIST_SHAPE,  Nk)  ,  F_v (DIST_SHAPE,  Nk)
!
!author
!     Michel Desgagne   - Spring 2006
!
!revision
! v4_40 - Lee/Qaddouri  - adapt (nest_bcs) for Yin-yang (called every timestep)
! v4_60 - Lee V.        - routine to interpolate U,V, in pilot area
!
!object
!
!arguments
!       none
!
!implicits
#include "gmm.hf"
#include "glb_ld.cdk"
#include "schm.cdk"
#include "lun.cdk"
#include "geomg.cdk"
!
      type(gmm_metadata) :: mymeta
      character(len=GMM_MAXNAMELENGTH) :: tr_name
!     temp variables to manipulate winds for Yin-Yang
      real tempu   (DIST_SHAPE,  NK)
      real tempv   (DIST_SHAPE,  NK)
      integer err,i,j,k

!----------------------------------------------------------------------
!
      if (Lun_debug_L) write (Lun_out,1001)
!
      tempu = 0.
      tempv = 0.
!
!$omp parallel private(i,j)
!$omp do
       do k= 1, NK
        do j= 1, l_nj
          do i= 1, l_niu
         tempu (i,j,k)=F_u (i,j,k)
        enddo
       enddo
        do j= 1, l_njv
          do i= 1, l_ni
          tempv(i,j,k)=F_v (i,j,k)
          enddo
        enddo
       enddo
!$omp enddo
!$omp end parallel

      call rpn_comm_xch_halo(tempu,LDIST_DIM,l_niu,l_nj,Nk, &
                  G_halox,G_haloy,G_periodx,G_periody,l_ni,0 )
      call rpn_comm_xch_halo(tempv,LDIST_DIM,l_ni,l_njv,Nk, &
                  G_halox,G_haloy,G_periodx,G_periody,l_ni,0 )
      call  yyg_vecbc1(F_u,tempu,tempv,LDIST_DIM,Nk)
      call  yyg_vecbc2(F_v,tempv,tempu,LDIST_DIM,Nk)
!
!
!----------------------------------------------------------------------
 1001 format(3X,'NEST YY Boundary ConditionS: (S/R yyg_nestuv)')
!
      return
      end
