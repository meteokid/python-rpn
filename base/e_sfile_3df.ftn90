!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!** e_sfile_3df - to open a new 3DF file 
!
      subroutine e_sfile_3df (datev,msg,gid, gif, gjd, gjf, &
                                                   rootfn)
      implicit none
#include <arch_specific.hf>

      character* (*) datev, msg,rootfn
      integer  gid, gif, gjd, gjf

!author  M. Desgagne 2001 (MC2 out_sfile_3df)
!
!revision
! v3_30 - Lee. V - modified to open a 3DF file for data extracted
!                  from analysis input
! v4_03 - Lee/Desgagne - ISST
! v4_05 - Plante A.    - removed nvar from interface
!                        and put nvar into common block e_anal
! v4_40 - Lee, V.      - make path for 3df files for Yin-Yang
!
#include "e_anal.cdk"
#include "e_grids.cdk"
#include "grdc.cdk"
#include "tr3d.cdk"
#include "path.cdk"
#include "grd.cdk"

      character*15  startindx
      character*512 filen
      integer idg,jdg,ntr,i,ii,nis,njs
      real*8 pt5
      real*8, dimension(:), allocatable :: xxu,yyv
      parameter ( pt5    = 0.5d0 )
!
!------------------------------------------------------------------
!
!     Set the unit for cascade output
      unf_casc = 201
      idg = 1 ; jdg = 1
      nis = gif-gid+1
      njs = gjf-gjd+1
      ntr = Tr3d_ntr + 1 ! for HU
      allocate (xxu(nis),yyv(njs))

      write (startindx,'((i7.7),a1,(i7.7))') idg,'-',jdg
      filen= '3df'//'_'//trim(datev)//'_'//startindx
      if (Grd_yinyang_L) then
         filen= trim(rootfn)//'/'//trim(filen)
      else
         filen= trim(rootfn)//trim(filen)
      endif

      open (unf_casc,file=filen,access='SEQUENTIAL', &
                                 form='UNFORMATTED')
! don't know why filen was position='APPEND' before but it makes no sense

      do i=1,nis-1
         ii    = gid+i
         xxu(i) = pt5 * ( xg_8(ii-1) + xg_8(ii) )
      enddo
      xxu(nis) = xg_8(gif) + pt5 * ( xg_8(gif) - xg_8(gif-1) )

      do i=1,njs-1
         ii    = gjd+i
         yyv(i)= pt5 * ( yg_8(ii-1) + yg_8(ii) )
      enddo
      yyv(njs) = yg_8(gjf) + pt5 * ( yg_8(gjf) - yg_8(gjf-1) )

      write (unf_casc) nis,njs,lv_t,lv,Anal_hav(2),ntr,0
      write (unf_casc) Grd_xlon1,Grd_xlat1,Grd_xlon2,Grd_xlat2
      write (unf_casc) xg_8(gid:gid+nis-1),yg_8(gjd:gjd+njs-1),xxu, yyv
      write (unf_casc) za_8 (1:lv  +1),zb_8 (1:lv  +1), &
                       zat_8(1:lv_t+1),zbt_8(1:lv_t+1)
      
      deallocate (xxu,yyv)
!
!------------------------------------------------------------------
      return
      end
