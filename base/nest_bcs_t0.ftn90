!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r nest_bcs_t0 -
!
#include "model_macros_f.h"
!
      subroutine nest_bcs_t0 ()
      implicit none
!
!author 
!     Michel Desgagne   - Spring 2006
!
!revision
! v3_30 - Lee V.          - initial version
! v4_03 - Lee/Plante      - acid test
! v4_05 - Lepine M.       - VMM replacement with GMM
! v4_14 - PLante          - Top piloting (Lid nesting)
!
!object
!
!arguments
!       none
!
!implicits
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "bcsgrds.cdk"
#include "vt0.cdk"
#include "nest.cdk"
#include "tr3d.cdk"
#include "lam.cdk"
#include "schm.cdk"
#include "acid.cdk"
!
      character*16 tr_name
      integer err,i,j,k,nvar,n
      real, pointer, dimension(:,:,:) :: tr,tr0

!----------------------------------------------------------------------
!
      gmmstat = gmm_get(gmmk_nest_u_s ,nest_u ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs ERROR at gmm_get(nest_u)'
      gmmstat = gmm_get(gmmk_nest_v_s ,nest_v ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs ERROR at gmm_get(nest_v)'
      gmmstat = gmm_get(gmmk_nest_w_s ,nest_w ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs ERROR at gmm_get(nest_w)'
      gmmstat = gmm_get(gmmk_nest_t_s ,nest_t ,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs ERROR at gmm_get(nest_t)'
      gmmstat = gmm_get(gmmk_nest_zd_s,nest_zd,meta3d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs ERROR at gmm_get(nest_zd)'
      gmmstat = gmm_get(gmmk_nest_s_s ,nest_s ,meta2d)
      if (GMM_IS_ERROR(gmmstat)) print *,'nest_bcs ERROR at gmm_get(nest_s)'
!
      gmmstat = gmm_get(gmmk_ut0_s , ut0 ,meta3d)
      gmmstat = gmm_get(gmmk_vt0_s , vt0 ,meta3d)
      gmmstat = gmm_get(gmmk_wt0_s , wt0 ,meta3d)
      gmmstat = gmm_get(gmmk_tt0_s , tt0 ,meta3d)
      gmmstat = gmm_get(gmmk_zdt0_s,zdt0 ,meta3d)
      gmmstat = gmm_get(gmmk_st0_s , st0 ,meta2d)
      if (.not.Schm_hydro_L) then
         gmmstat = gmm_get(gmmk_nest_q_s,nest_q,meta3d)
         gmmstat = gmm_get(gmmk_qt0_s,qt0,meta3d)
      endif
!
      if (l_north) then
         do k=1,G_nk+1
            do j=l_nj-pil_n+1,l_nj
            do i=1,l_ni
               wt0  (i,j,k) = nest_w  (i,j,k)
               tt0  (i,j,k) = nest_t  (i,j,k)
               zdt0 (i,j,k) = nest_zd (i,j,k)
            end do
            end do
            do j=l_nj-pil_n+1,l_nj
            do i=1,l_niu
               ut0  (i,j,k) = nest_u (i,j,k)
            end do
            end do
            do j=l_nj-pil_n,l_njv
            do i=1,l_ni
               vt0  (i,j,k) = nest_v (i,j,k)
            end do
            end do
         end do
         do j=l_nj-pil_n+1,l_nj
         do i=1,l_ni
            st0  (i,j       ) = nest_s (i,j)
            tt0  (i,j,G_nk+2) = nest_t (i,j,G_nk+2)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=l_nj-pil_n+1,l_nj
            do i=1,l_ni
               qt0(i,j,k)  = nest_q(i,j,k)
            end do
            end do
            end do
         endif
      endif
!
      if (l_east) then
         do k=1,G_nk+1
            do j=1,l_nj
            do i=l_ni-pil_e+1,l_ni
               wt0  (i,j,k) = nest_w  (i,j,k)
               tt0  (i,j,k) = nest_t  (i,j,k)
               zdt0 (i,j,k) = nest_zd (i,j,k)
            end do
            end do
            do j=1,l_nj
            do i=l_ni-pil_e,l_niu
               ut0  (i,j,k) = nest_u  (i,j,k)
            end do
            end do
            do j=1,l_njv
            do i=l_ni-pil_e+1,l_ni
               vt0  (i,j,k) = nest_v  (i,j,k)
            end do
            end do
         end do
         do j=1,l_nj
         do i=l_ni-pil_e+1,l_ni
            st0  (i,j       ) = nest_s  (i,j)
            tt0  (i,j,G_nk+2) = nest_t  (i,j,G_nk+2)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=1,l_nj
            do i=l_ni-pil_e+1,l_ni
               qt0(i,j,k)  = nest_q(i,j,k)
            end do
            end do
            end do
         endif
      endif
!
      if (l_south) then
         do k=1,G_nk+1
            do j=1,pil_s
            do i=1,l_ni
               wt0  (i,j,k) = nest_w  (i,j,k)
               vt0  (i,j,k) = nest_v  (i,j,k)
               tt0  (i,j,k) = nest_t  (i,j,k)
               zdt0 (i,j,k) = nest_zd (i,j,k)
            end do
            end do
            do j=1,pil_s
            do i=1,l_niu
               ut0  (i,j,k) = nest_u  (i,j,k)
            end do
            end do
         end do
         do j=1,pil_s
         do i=1,l_ni
            st0  (i,j)        = nest_s  (i,j)
            tt0  (i,j,G_nk+2) = nest_t  (i,j,G_nk+2)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=1,pil_s
            do i=1,l_ni
               qt0(i,j,k)  = nest_q(i,j,k)
            end do
            end do
            end do
         endif
      endif
!
      if (l_west) then
         do k=1,G_nk+1
            do j=1,l_nj
            do i=1,pil_w
               wt0  (i,j,k) = nest_w  (i,j,k)
               ut0  (i,j,k) = nest_u  (i,j,k)
               tt0  (i,j,k) = nest_t  (i,j,k)
               zdt0 (i,j,k) = nest_zd (i,j,k)
            end do
            end do
            do j=1,l_njv
            do i=1,pil_w
               vt0  (i,j,k) = nest_v  (i,j,k)
            end do
            end do
         end do
         do j=1,l_nj
         do i=1,pil_w
            st0  (i,j)        = nest_s  (i,j)
            tt0  (i,j,G_nk+2) = nest_t  (i,j,G_nk+2)
         end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,G_nk+1
            do j=1,l_nj
            do i=1,pil_w
               qt0(i,j,k) = nest_q(i,j,k)
            end do
            end do
            end do
         endif
      endif
!
      if (Schm_opentop_L) then
         do k=1,Lam_gbpil_t
            do j=1,l_nj
            do i=1,l_ni
               wt0  (i,j,k) = nest_w  (i,j,k)
               tt0  (i,j,k) = nest_t  (i,j,k)
               zdt0 (i,j,k) = nest_zd (i,j,k)
            end do
            end do
            do j=1,l_nj
            do i=1,l_niu
               ut0  (i,j,k) = nest_u  (i,j,k)
            end do
            end do
            do j=1,l_njv
            do i=1,l_ni
               vt0  (i,j,k) = nest_v  (i,j,k)
            end do
            end do
         end do
         if (.not. Schm_hydro_L) then
            do k=0,Lam_gbpil_t-1
            do j=1,l_nj
            do i=1,l_ni
               qt0(i,j,k)  = nest_q(i,j,k)
            end do
            end do
            end do
         endif
      endif
!
      if (Lam_toptt_L) then
!        Pilot the temperature for the whole top level
         do j=1,l_nj
         do i=1,l_ni
            tt0(i,j,1) = nest_t(i,j,1)
         end do
         end do
      endif
!
      do n=1,Tr3d_ntr
         tr_name = 'NEST/'//trim(Tr3d_name_S(n))//':C'
      	 gmmstat = gmm_get(tr_name,tr,meta3d)
         tr_name = 'TR/'//trim(Tr3d_name_S(n))//':M'
      	 gmmstat = gmm_get(tr_name,tr0,meta3d)

         if (l_north) then
            do k=1,G_nk+2
            do j=l_nj-pil_n+1,l_nj
            do i=1,l_ni
               tr0  (i,j,k) = tr  (i,j,k)
            enddo
            enddo
            enddo
         endif
         if (l_east) then
            do k=1,G_nk+2
            do j=1,l_nj
            do i=l_ni-pil_e+1,l_ni
               tr0  (i,j,k) = tr  (i,j,k)
            enddo
            enddo
            enddo
         endif
         if (l_south) then
            do k=1,G_nk+2
            do j=1,pil_s
            do i=1,l_ni
               tr0  (i,j,k) = tr  (i,j,k)
            enddo
            enddo
            enddo
         endif
         if (l_west) then
            do k=1,G_nk+2
            do j=1,l_nj
            do i=1,pil_w
               tr0  (i,j,k) = tr  (i,j,k)
            enddo
            enddo
            enddo
         endif
         if (Schm_opentop_L) then
            do k=1,Lam_gbpil_t
               do j=1,l_nj
               do i=1,l_ni
                  tr0  (i,j,k) = tr  (i,j,k)
               end do
               end do
            end do
         endif
      enddo
!
!----------------------------------------------------------------------
 1000 format (/,19('#'),' NEST_BCS STAT ',i6,1X,19('#'))
 1001 format(3X,'NEST Boundary ConditionS: (S/R NEST_BCS)')
!
      return
      end
