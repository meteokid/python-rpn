!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**   s/r set_dync - initialize the dynamics model configuration
!
#include "model_macros_f.h"
!
      subroutine set_dync
      implicit none
#include <arch_specific.hf>
!
!author
!     M. Desgagne - V. Lee ( after version v1_03 of setdync )
!
!revision
! v2_00 - Desgagne/Lee       - initial MPI version
! v2_10 - Lee V.             - correction to call to pstune
! v2_20 - Desgagne M.        - fnom on Wafiles now in p_set
! v2_30 - Desgagne M.        - entry vertical interpolator in gemdm
! v3_00 - Desgagne & Lee     - Lam configuration
! v3_30 - Desgagne M.        - Add calls to: set_opr and adw_set
! v4_00 - Plante & Girard    - Log-hydro-pressure coord on Charney-Phillips grid
! v4_05 - Girard C.          - Open top
!
#include "glb_ld.cdk"
#include "lun.cdk"
#include "lam.cdk"
#include "cstv.cdk"
#include "grd.cdk"
#include "schm.cdk"
#include "pres.cdk"
#include "dcst.cdk"
#include "type.cdk"
#include "ver.cdk"
#include "ptopo.cdk"

      integer k,err,istat,k0
      real*8 one, aaa, xxx, yyy
      parameter( one = 1.d0 )
!
!     ---------------------------------------------------------------

      if (lun_out.gt.0) then
          write(Lun_out,*)'SETTING up OPR,ADW,...(S/R SET_DYNC)'
          write(Lun_out,*)'===================================='
      endif
!     
      k0=1+Lam_gbpil_T

      Cstv_tau_8   = Cstv_dt_8 * Cstv_bA_8
      Cstv_invT_8  = one/Cstv_tau_8
      Cstv_Beta_8  = (one-Cstv_bA_8)/Cstv_bA_8
!
      if(Schm_hydro_L) then
         Ver_epsilon_8=0.d0
      else
         Ver_epsilon_8=Cstv_RTstr_8/ &
              (Dcst_grav_8*Dcst_grav_8*Cstv_tau_8*Cstv_tau_8)
      endif
      Ver_gamma_8=Dcst_cappa_8/(Dcst_cappa_8+Ver_epsilon_8)
      Ver_gokt2RT_8= Ver_gamma_8/ &
              (Dcst_cappa_8*Cstv_tau_8*Cstv_tau_8*Cstv_RTstr_8)
!
      Cstv_hco0_8 = Dcst_rayt_8 * Dcst_rayt_8 * Ver_gokt2RT_8
      Cstv_hco1_8 = 0.d0

      Ver_alfat_8 = 1.d0
      Ver_cst_8   = 0.d0
      Ver_cstp_8  = 0.d0
      aaa = (one-Dcst_cappa_8)*Ver_epsilon_8

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!   PURELY FOR VALIDATION PURPOSES    !!!!!!!!!!!!!!!!!!
      if(.not.Schm_opentop_L) then
            yyy = one/(one/(Ver_z_8%m(1)-Cstv_Ztop_8))
         Ver_alfat_8 = one/(Ver_z_8%m(1)-Cstv_Ztop_8) * yyy
      endif
!!!!!!   PURELY FOR VALIDATION PURPOSES    !!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

      if(Schm_opentop_L) then
         xxx =   Ver_dz_8%m(k0)*Ver_wm_8%m(k0)* &
                     (Ver_idz_8%t(k0-1)+aaa*Ver_wm_8%t(k0-1))
         yyy =   one/(Ver_idz_8%t(k0-1)+Ver_epsilon_8*Ver_wm_8%t(k0-1))
         Ver_alfat_8 = (Ver_idz_8%t(k0-1) &
                     - Ver_epsilon_8*Ver_wp_8%t(k0-1)) * yyy
         Ver_cst_8   =             one / Ver_gokt2RT_8 * yyy
         Ver_cstp_8  =     ( Ver_idz_8%t(k0-1) - xxx ) * yyy
      endif
!
      xxx = Ver_dz_8%m(G_nk)*Ver_wp_8%m(G_nk)* &
                (Ver_idz_8%t(G_nk)-aaa*Ver_wp_8%t(G_nk))
      yyy = one/(Ver_idz_8%t(G_nk)+Dcst_cappa_8*Ver_wp_8%t(G_nk))
      Ver_alfas_8 = (Ver_idz_8%t(G_nk) &
                  - Dcst_cappa_8*Ver_wm_8%t(G_nk)) * yyy
      Ver_css_8   =            one / Ver_gokt2RT_8 * yyy
      Ver_cssp_8  =        (Ver_idz_8%t(G_nk)+xxx) * yyy
!
      if(Schm_autobar_L) then
         Schm_hydro_L = .true.
         Ver_alfas_8 = 1.d0
         Ver_css_8   = 0.d0
         Ver_cssp_8  = 0.d0
         Cstv_hco1_8 = Dcst_cappa_8/(Cstv_Zsrf_8-Ver_z_8%m(1))
      endif
!
      call set_opr()
      call itf_adx_set()
!
!     ---------------------------------------------------------------
!
      return
      end
