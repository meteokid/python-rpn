!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r nest_bcs -
!
#include "model_macros_f.h"
!
      subroutine nest_bcs
      implicit none
#include <arch_specific.hf>
!
!author 
!     Michel Desgagne   - Summer 2010
!
!revision
! v4_14 - Desgagne M.          - initial version
!
!object
!
!arguments
!       none
!
#include "glb_ld.cdk"
#include "lam.cdk"
#include "grd.cdk"
#include "schm.cdk"
#include "theo.cdk"
!
!----------------------------------------------------------------------
!
      if ( G_lam .and. .not. Grd_yinyang_L) then
         call timing_start ( 70, 'NEST_BCS')
         if (.not. Lam_ctebcs_L) call nest_intt
         if (Schm_theoc_L) then
             if (north+south+west+east.ge.1) then
                if ( Theo_case_S .eq. 'BUBBLE'   .or.    &
                     Theo_case_S .eq. 'BUBBLE_G' .or.    &
                     Theo_case_S .eq. '2_BUBBLES' ) then
                   call mirror ()
                else
                   call nest_bcs_t0 ()
                endif
                call slabsym ()
             endif
         else
             call nest_bcs_t0 ()
         endif
         call timing_stop ( 70 )
      endif

!
!----------------------------------------------------------------------
!
      return
      end
