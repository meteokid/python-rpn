!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r itf_cpl_pseudoR
!
      subroutine itf_cpl_pseudoR (datev, kstep, recv)
      implicit none
#include <arch_specific.hf>
!
      character*(*) datev
      INTEGER kstep, recv
!
!authors    Manon Faucher - Spring 2010
! 
!revision
! v4.13 - Faucher M.      - initial version
!*
#include "itf_cpl.cdk"
#include "path.cdk"
!
!*
      CHARACTER*1024 filename
      INTEGER i
!     ________________________________________________________________
!
      atm_busin = 0.
      recv      = 0

      filename  = trim(Path_input_S)//'/RT_FORCINGS'

      if ( cpl_comm_s(1:1) .eq. 'R' ) then

      write (6,1001) datev

      do i=1,n_fldin
         write(6,1002) i,trim(nv_read(i)),'RT_FORCINGS'
         CALL r_rawfstlis (datev,atm_busin(1,1,i),cpl_ni,cpl_nj, &
                                                filename,i,recv)
         IF (recv.lt.0) THEN
            atm_busin = 0.
            RETURN
         endif
      end DO

      endif

 1001 format (/'====> itf_cpl_pseudoR: TREATING DATA valid: ',a)
 1002 format (i7,' =====> READING variable: ',a,' from FILE: ',a)
!
!     ________________________________________________________________
!
      return
      end

      subroutine r_rawfstlis (datev,rs,nx,ny,in_FILE,ikey,errcode)
      implicit none
#include <arch_specific.hf>
!
      CHARACTER*(*) datev,in_file
      integer nx,ny,ikey,errcode
      real rs(nx,ny)
!
      LOGICAL done

      INTEGER  fnom,fstouv,fclos,fstinl,fstluk
      EXTERNAL fnom,fstouv,fclos,fstinl,fstluk

      integer lislon,nlis,err,key,IUN62,nk,datm
      parameter (nlis = 5000)
      integer liste (nlis)

      DATA done /.false./
      SAVE done,IUN62
!
!     ________________________________________________________________
!
      errcode = 0

      IF (.not.done) then
         IUN62 = 0
         if (FNOM(IUN62,in_file,'RND+OLD',0).lt.0) then
            print*, 'erreur affectation UNIT:', trim(in_FILE)
            errcode = -1
         endif

         if (FSTOUV(IUN62,'RND').lt.0) then
            print*, 'erreur ouverture UNIT62:', trim(in_FILE)
            errcode = -1
         ENDIF
      ENDIF

      IF (errcode.lt.0) RETURN

      call datp2f (datm,datev)
      liste = -99
      err = fstinl (IUN62,nx,ny,1,datm,' ',-1,-1,-1,' ',' ', &
                                          liste,lislon,nlis)
      IF (lislon.eq.0) THEN
         errcode = -1
         RETURN
      endif

      errcode = fstluk (rs,liste(ikey),nx,ny,nk)

      done = .true.
!
!     ________________________________________________________________
!
      return
      end
