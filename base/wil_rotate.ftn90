!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r wil_rotate 
!
#include "model_macros_f.h"
!
      SUBROUTINE WIL_ROTATE(RLON,RLAT,ALPHA,ROTLON,ROTLAT)
!
      implicit none
#include <arch_specific.hf>
!
      REAL RLON, RLAT, ALPHA, ROTLON, ROTLAT
!
!author Jacob et al. 1992 
!
!revision
! v4_04 - Jacob et al.     - initial version ROTATE 
! v4_04 - Tanguay M.       - Williamson's cases
!
!object
!     THIS SUBROUTINE COMPUTES THE ROTATED COORDINATES
!     ROTLON,ROTLAT FOR A ROTATION BY ANGLE ALPHA
!
!implicits
#include "wil_dcst.cdk"
!
      REAL TEST
!
      IF (ALPHA .EQ. 0.0) THEN
!
!        NO ROTATION
!        -----------
         ROTLON = RLON
         ROTLAT = RLAT
!
      ELSE
!
!        ROTATION BY ANGLE ALPHA
!        -----------------------
!
!        ROTATED LATITUDE
!        ----------------
         TEST = SIN(RLAT)*COS(ALPHA)-COS(RLAT)*COS(RLON)*SIN(ALPHA)
         IF (TEST .GT. 1.0) THEN
            ROTLAT = Wil_Dcst_pi_8/2.0
         ELSEIF (TEST .LT. -1.0) THEN
            ROTLAT = -Wil_Dcst_pi_8/2.0
         ELSE
            ROTLAT = ASIN(TEST)
         ENDIF
!
!        ROTATED LONGITUDE
!        -----------------
         TEST = COS(ROTLAT)
         IF (TEST .EQ. 0.0) THEN
            ROTLON = 0.0
         ELSE
            TEST = SIN(RLON)*COS(RLAT)/TEST
            IF (TEST .GT. 1.0) THEN
               ROTLON = Wil_Dcst_pi_8/2.0
            ELSEIF (TEST .LT. -1.0) THEN
               ROTLON = -Wil_Dcst_pi_8/2.0
            ELSE
               ROTLON = ASIN(TEST)
            ENDIF
         ENDIF
!
!        ADJUST FOR CORRECT BRANCH OF INVERSE SINE
!        -----------------------------------------
         TEST = COS(ALPHA)*COS(RLON)*COS(RLAT) &
                + SIN(ALPHA)*SIN(RLAT)
         IF (TEST .LT. 0.0) THEN
            ROTLON = Wil_Dcst_pi_8 - ROTLON
         ENDIF
!
      ENDIF
!
      RETURN
      END
