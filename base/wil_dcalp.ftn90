!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r wil_dcalp
!
#include "model_macros_f.h"
!
      SUBROUTINE WIL_DCALP(MMH,NNH,KKH,CMN,DMN,EMN,EPSIL,LROW,LDIAG,RLAT, &
                           ALP,DALP,MAXH,NALPH)
!
      implicit none
#include <arch_specific.hf>
!
      INTEGER MMH,NNH,KKH,MAXH,NALPH
      INTEGER LROW(0:MAXH,2), LDIAG(0:MAXH,2)
      REAL CMN(NALPH), DMN(NALPH), EMN(NALPH), EPSIL(NALPH)
      REAL RLAT, ALP(NALPH), DALP(NALPH)
!
!author Jacob et al. 1992 
!
!revision
! v4_04 - Jacob et al.     - initial version DCALP 
! v4_04 - Tanguay M.       - Williamson's cases
!
!object
!     CALCULATES THE ASSOCIATED LEGENDRE POLYNOMIALS USING A HIGHLY        
!     STABLE FOUR TERM RECURRENCE RELATION GIVEN BY BELOUSOV (1962).            
!     THE SPECTRAL TRUNCATION PARAMETERS ARE DEFINED BY 3 PARAMETERS:           
!     MMH, THE LARGEST FOURIER WAVENUMBER; KKH, THE HIGHEST DEGREE OF THE 
!     ASSOCIATED LEGENDRE POLYNOMIALS, AND NNH THE HIGHEST DEGREE OF THE 
!     ASSOCIATED LEGENDRE POLYNOMIALS FOR M=0.  THE LENGTH OF THE               
!     ASSOCIATED LEGENDRE POLYNOMIAL ARRAY ALP IS GIVEN BY THE RELATION         
!     LEN = ((MMH+1)*(NNH+1) - (LMN**2 + LMN)/2)  WHERE LMN = MMH + NNH - KKH 
!     VARIABLES ARE STORED ALONG DIAGONALS STARTING WITH DIAGONAL M=N.          
!     THE LENGTH OF EACH ROW IS STORED IN THE ARRAY LROW(0:MAXH,2).
!     THE LENGTH OF EACH DIAGONAL IS STORED IN THE ARRAY LDIAG(0:MAXH,1)
!     AND IS EVALUATED IN SUBROUTINE CEPS AS (MMH+1)-AMAX(MMH+N-KKH,0)  
!     WHERE 0>N>NNH.  CUMULATIVE DIAGONAL LENGTHS (CUMULATIVE  
!     DISPLACEMENTS) ARE ALSO STORED IN LDIAG(0:MAXH,2) SO THAT THE  
!     ASSOCIATED LEGENDRE POLYNOMIAL OF ORDER M, DEGREE N, AND ARGUMENT         
!     SNJ IS ADDRESSED AS ALP(1 + LDIAG(N-M,2)+M)), OR USING THE         
!     STATEMENT FUNCTION IDSP AS ALP(IDSP(M,N)).  THE SAME FORM              
!     APPLIES FOR ADDRESSING THE DERIVATIVES (DALP) AND RECURRENCE              
!     COEFFICIENTS DEFINED IN THE EPSIL MATRIX.                                 
!
!implicits
#include "wil_dcst.cdk"
!
!------------------------------------------------------------------
      REAL CN2N1N(MAXH+1,3)
      REAL COL1(MAXH), COL2(MAXH), SNPSUM(MAXH), CSPSUM(MAXH),  &
           SQNP(MAXH), AN(MAXH), CSFAC(MAXH), SNFAC(MAXH),  &
           COSTBL(MAXH), SINTBL(MAXH)            
!
      REAL RNORM,COS2P,SNJ,THTA
      INTEGER N,M,JK,JM,JN,MSTART,NSTART
      INTEGER MLIM,IS,ISM1
!
!     ADDRESS COMPUTATION OF ALP, DALP, EPSIL            
!     E.G., EPSIL(M,N) = EPSIL(IDSP(M,N))                                       
!     ---------------------------------------
      INTEGER MDUM,NDUM,IDSP,IDSPR
      IDSP(MDUM,NDUM) = 1 + LDIAG(NDUM-MDUM,2)+MDUM                             
!                                                                               
!     STATEMENT FUNCTION FOR ADDRESS COMPUTATION OF BELOUSOV RECURRENCE         
!     COEFFICIENT MATRICES.  E.G., CMN(M,N) = CMN(IDSPR(M,N))                   
!     -----------------------------------------------------------------
      IDSPR(MDUM,NDUM) = 1 + LROW(NDUM,2)+MDUM                                  
!------------------------------------------------------------------
!
!     COMPUTE ASSOCIATED LEGENDRE POLYNOMIALS AND THEIR DERIVATIVES FOR         
!     THE TRUNCATED WAVENUMBER SPACE DEFINED IN LDIAG(0:MAXH,2) WITH            
!     ARGUMENTS GIVEN BY PARAMETER RLAT USING BELOUSOV'S ALGORITHM.         
!     THE PROCEDURE INVOLVES EXTRA WORK FOR ANY TRUNCATION OTHER THAN           
!     TRIANGULAR BECAUSE BELOUSOV'S RECURRENCE REQUIRES POLYNOMIAL              
!     INFORMATION IN PART OF THE REGION BETWEEN KKH AND NNH.  MORE  
!     ELABORATE BOOKKEEPING COULD REDUCE THIS EXTRA COMPUTATION, BUT BY         
!     LESS THAN A FACTOR OF TWO (PROBABLY LESS THAN 10% OF TOTAL WORK).         
!
!     LATITUDE = RLAT
!     --------------- 
!     BEGIN BY COMPUTING 1ST TWO ELEMENTS IN EACH ROW (M=0:1;N=0:KKH)
!     EVALUATE THE SERIES EXPANSIONS (19) AND (21) IN BELOUSOV (1962)        
!     FINAL RESULTS ARE STORED IN WORK ARRAYS COL1 AND COL2                  
!     ---------------------------------------------------------------
      COS2P = COS(RLAT)
      SNJ   = SIN(RLAT)
      THTA  = Wil_Dcst_pi_8/2.0 - RLAT
      CN2N1N(1,1)  = SQRT(0.50)                                              
      ALP(1)  = CN2N1N(1,1)                                               
      DALP(1) = 0.0                                                       
!                                                                               
!        INITIALIZE WORKING SPACE                                               
!        ------------------------
      DO 205 N=1,KKH 
         SNPSUM(N) = 0.0                                                     
         CSPSUM(N) = 0.0                                                     
         SQNP(N)   = 1.0/SQRT(REAL(N*N + N))                                
         CSFAC(N)  = 1.0                                                     
         SNFAC(N)  = REAL(N)*SQNP(N)                                        
         COSTBL(N) = COS(REAL(N)*THTA)                                 
         SINTBL(N) = SIN(REAL(N)*THTA)                                 
  205 CONTINUE                                                               
!                                                                               
      AN(1) = SQRT(0.75)                                                     
      DO 210 N=2,KKH 
         AN(N) = AN(N-1)*SQRT(1.0-(1.0/REAL(4*N*N)))                        
  210 CONTINUE                                                               
!                                                                               
!     EACH INCREMENT IN JK EVALUATES AN ADDITIONAL TERM IN EXPANSIONS        
!     --------------------------------------------------------------- 
      JK=1                                                                   
      DO 215 N=1,KKH 
         CSPSUM(N) = CSPSUM(N)+COSTBL(N-JK+1)*CSFAC(N)                       
         SNPSUM(N) = SNPSUM(N)+SINTBL(N-JK+1)*SNFAC(N)                       
  215 CONTINUE                                                               
!                                                                               
      DO 225 JK=3,KKH+1,2  
!                                                                               
         NSTART = MAX0(JK-1,1)                                               
         N = NSTART                                                          
         CSFAC(N)  = REAL(JK-2)/REAL(JK-1)*REAL(2*N-JK+3)                  &
                     /REAL(2*N-JK+2)*CSFAC(N)                               
         CSPSUM(N) = CSPSUM(N) + CSFAC(N)*0.50                               
!                                                                               
         DO 220 N=NSTART+1,KKH 
            CSFAC(N)  = REAL(JK-2)/REAL(JK-1)*REAL(2*N-JK+3)               &
                        /REAL(2*N-JK+2)*CSFAC(N)                            
            SNFAC(N)  = CSFAC(N)*REAL(N-JK+1)*SQNP(N)                       
            CSPSUM(N) = CSPSUM(N)+COSTBL(N-JK+1)*CSFAC(N)                    
            SNPSUM(N) = SNPSUM(N)+SINTBL(N-JK+1)*SNFAC(N)                    
  220    CONTINUE                                                            
  225 CONTINUE                                                               
!                                                                               
      RNORM = 1.0/ALP(1)                                                  
      DO 230 N=1,KKH 
         COL1(N) = AN(N)*CSPSUM(N)*RNORM                                     
         COL2(N) = AN(N)*SNPSUM(N)*RNORM                                     
  230 CONTINUE                                                               
!                                                                               
      DO 260 N=1,KKH 
!                                                                            
!        EVALUATE REMAINING POLYNOMIALS BY SWEEPING THROUGH ROWS N=1:KKH 
!        FIRST TWO ELEMENTS OBTAINED FROM THE ABOVE SERIES EXPANSIONS           
!        --------------------------------------------------------------- 
         CN2N1N(1,3) = COL1(N)                                               
         CN2N1N(2,3) = COL2(N)                                               
!                                                                               
!        NECESSARY DETOUR TO "PRIME THE PIPELINE" (FIRST PASS)               
!        -----------------------------------------------------
         IF (N .EQ. 1) THEN                                                     
            CN2N1N(1,2) = CN2N1N(1,3)                                      
            CN2N1N(2,2) = CN2N1N(2,3)                                      
            ALP (MMH+2) = CN2N1N(1,2)                                      
            DALP(MMH+2) = SQRT(3.0)*CN2N1N(1,1)-SNJ*CN2N1N(1,2) 
            ALP (2)     = CN2N1N(2,2)                                      
            DALP(2)     = -SNJ*CN2N1N(2,2)                            
         ELSE                                                               
!                                                                               
!        EVALUATE THE REMAINDER OF THIS ROW (M = 2, 3, 4, ...)               
!        USING BELOUSOV'S RECURRENCE RELATION                                
!        -----------------------------------------------------
         MLIM = MIN0(MMH,N-1) 
         DO 235 M=2,MLIM                                                     
            JM = M+1                                                         
            CN2N1N(JM,3) = CMN(IDSPR(M,N))*CN2N1N(JM-2,1)                     &
                           -SNJ*(DMN(IDSPR(M,N))                         &
                           *CN2N1N(JM-2,2) - EMN(IDSPR(M,N))                  &
                           *CN2N1N(JM,2))                                    
  235    CONTINUE                                                            
!                                                                               
!        PUT VALUES OF THE POLYNOMIALS CONTAINED IN CN2N1N(0:MLIM,3)         
!        INTO THE ASSOCIATED LEGENDRE POLYNOMIAL ARRAY ALP                   
!        -----------------------------------------------------------
         MSTART = MAX0(N-NNH,0) 
         DO 240 M=MSTART,MLIM                                                
            JM = M+1                                                         
            ALP(IDSP(M,N)) = CN2N1N(JM,3)                                 
  240    CONTINUE                                                            
!                                                                               
!        SPECIAL EVALUATION REQUIRED FOR DIAGONAL ELEMENT M=N                
!        ----------------------------------------------------
         IF (N .LE. MMH) THEN
            CN2N1N(N+1,3)   = SQRT(1.0 + (1.0/REAL(2*N)))*COS2P           &
                              *CN2N1N(N,2)                              
            ALP (IDSP(N,N)) = CN2N1N(N+1,3)                               
            DALP(IDSP(N,N)) = -REAL(N)*SNJ*CN2N1N(N+1,3)            
         ENDIF
!                                                                               
!        MAKE ROOM FOR NEW POLYNOMIAL EVALUATION IN CN2N1N(0:MLIM,3)         
!        -----------------------------------------------------------
         DO 250 JM=1,N+1                                                     
            CN2N1N(JM,1) = CN2N1N(JM,2)                                      
            CN2N1N(JM,2) = CN2N1N(JM,3)                                      
  250    CONTINUE                                                            
         ENDIF
!                                                                               
  260 CONTINUE                                                               
!                                                                               
!     EFFICIENTLY EVALUATE DERIVATIVES SEPARATELY (ALONG DIAGONALS)          
!     -------------------------------------------------------------
      DO 280 JN = 1,NNH 
         IS   = LDIAG(JN,2)                                                  
         ISM1 = LDIAG(JN-1,2)                                                
         DO 270 M=0,LDIAG(JN,1)-1                                            
            JM = M+1                                                         
            N  = JN+M                                                        
            DALP(IS+JM) = REAL(2*N+1)*EPSIL(IS+JM)* &
                          ALP(ISM1+JM)-REAL(N)*SNJ*ALP(IS+JM)
  270    CONTINUE                                                            
  280 CONTINUE                                                               
!
      RETURN                                                                    
      END                                                                       
