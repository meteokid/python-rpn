!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r stat_ps - Evaluate average of wet/dry surface pressure (Based on psadj)
!
      subroutine stat_ps

      implicit none

!author M.Tanguay

!revision
! v4_XX - Tanguay M.        - initial MPI version 
 
#include "gmm.hf"
#include "glb_ld.cdk"
#include "cstv.cdk"
#include "geomg.cdk"
#include "lun.cdk"
#include "vt1.cdk"
#include "glb_pil.cdk"
#include "grd.cdk"
#include "dcst.cdk"
#include "tr3d.cdk"

      integer err, i, j, istat, n, k
      real, pointer, dimension(:,:,:)                      :: tr
      real, dimension(l_minx:l_maxx,l_miny:l_maxy,l_nk)    :: qw
      real, dimension(l_minx:l_maxx,l_miny:l_maxy)         :: pr_p0
      real, dimension(l_minx:l_maxx,l_miny:l_maxy,1:l_nk+1):: pr_m,pr_t
      real*8 :: l_avg_8(2),g_avg_8(2)
      real*8, parameter ::  ZERO_8 = 0.0, QUATRO_8 = 4.0
      character (len=12) type_S
!     _________________________________________________________________

      qw = 0. 

!     Calculate qw
!     ------------
      do n=1, Tr3d_ntr
         if (Tr3d_wload(n).or.Tr3d_name_S(n)(1:2).eq.'HU') then
            istat = gmm_get('TR/'//trim(Tr3d_name_S(n))//':P',tr)
            do k=1,l_nk
            do j=1+pil_s,l_nj-pil_n
            do i=1+pil_w,l_ni-pil_e
               qw(i,j,k) = tr(i,j,k) + qw(i,j,k)
            enddo
            enddo
            enddo
         endif
      end do

      istat= gmm_get(gmmk_st1_s,st1)

      call calc_pressure ( pr_m, pr_t, pr_p0, st1, l_minx,l_maxx, l_miny,l_maxy, l_nk )

      pr_m(:,:,l_nk+1) = pr_p0(:,:)

      l_avg_8(:) = ZERO_8
      g_avg_8(:) = ZERO_8

      do j=1+pil_s,l_nj-pil_n
      do i=1+pil_w,l_ni-pil_e
         do k=1,l_nk
            l_avg_8(1) = l_avg_8(1) + Geomg_area_8(i,j)*Geomg_mask_8(i,j)                  *(pr_m(i,j,k+1) - pr_m(i,j,k))
            l_avg_8(2) = l_avg_8(2) + Geomg_area_8(i,j)*Geomg_mask_8(i,j)*(1.0 - qw(i,j,k))*(pr_m(i,j,k+1) - pr_m(i,j,k))
         enddo
      enddo
      enddo

      type_S = "GRID"
      if (Grd_yinyang_L) type_S = "MULTIGRID"

      call RPN_COMM_allreduce(l_avg_8,g_avg_8,2,"MPI_DOUBLE_PRECISION","MPI_SUM",type_S,err)

      g_avg_8(:) = g_avg_8(:) / ( QUATRO_8 * Dcst_pi_8 )

      if (Lun_out>0) write(Lun_out,*) ''
      if (Lun_out>0) write(Lun_out,*) '--------------------------------------------------------------------------------'
      if (Lun_out>0) write(Lun_out,*) 'AVERAGE SURFACE PRESSURE WET = ', g_avg_8(1) - Cstv_pref_8 !To substract the mean
      if (Lun_out>0) write(Lun_out,*) 'AVERAGE SURFACE PRESSURE DRY = ', g_avg_8(2) - Cstv_pref_8 !To substract the mean
      if (Lun_out>0) write(Lun_out,*) '--------------------------------------------------------------------------------'
      if (Lun_out>0) write(Lun_out,*) ''

!     _________________________________________________________________
!
      return
      end
