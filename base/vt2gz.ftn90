!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r vt2gz - Compute hydrostatic GZ from P0 and VT
!
#include "model_macros_f.h"
!
      subroutine vt2gz (F_gz, F_pr, F_vt, n, Nk)
      implicit none
!
      integer n, Nk
      real   F_gz(n,Nk), F_vt(n,Nk), F_pr(n,Nk)
!
!author
!
!revision
! v4_02 - Desgagne M.       - initial version (from p0vt2gz v3.3.0)
!
!object
!       see id section
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! F_gz         O    - geopotential height
! F_at         I    -
! F_bt         I    -
! F_pr         I    - 
! F_vt         I    - virtual temperature
!
!implicits
#include "dcst.cdk"
#include "cstv.cdk"
!
!*
      integer i,k,ik
      real*8 invdet
      real   con,q1,q2,q3,x0,xm,xp,aa,bb,cc,dd, &
             zak,zbk,zck,ex,lnpis_8
      real  vma(n,Nk), vmb(n,Nk), vmc(n,Nk), expps(n)
!
!     ---------------------------------------------------------------
      con = -Dcst_rgasd_8
!
!$omp parallel private(q1,q2,q3,x0,xm,xp,aa,bb, &
!$omp                  cc,dd,invdet,zak,zbk,zck,ex,i) &
!$omp          shared (vma, vmb, vmc, con)
!$omp do
      do k=1,Nk            
      do i=1,n
         x0=F_pr(i,k)
         if (k.eq.1) then
            xm=F_pr(i,1)
            xp=F_pr(i,2)
            aa=F_pr(i,3)-x0
            bb=F_pr(i,2)-x0
         elseif (k.eq.nk) then
            xm=F_pr(i,Nk-1)
            xp=F_pr(i,Nk)
            aa=F_pr(i,Nk-1)-x0
            bb=F_pr(i,Nk-2)-x0
         else
            xm=F_pr(i,k-1)
            xp=F_pr(i,k+1)
            aa=xm-x0
            bb=xp-x0
         endif

         q1=alog(xp/xm)
         q2=xp-xm
         q3=(xp*xp - xm*xm)*0.5

         q3=q3-x0*(2.0*q2-x0*q1)
         q2=q2-x0*q1
         cc=aa*aa
         dd=bb*bb
         invdet=aa*dd-bb*cc
         invdet = 0.5/invdet
         vma(i,k)=(dd*q2-bb*q3)*invdet
         vmc(i,k)=(aa*q3-cc*q2)*invdet
         vmb(i,k)=q1*0.5-vma(i,k)-vmc(i,k)
      end do
      end do
!$omp enddo
!
!$omp do
      do i=1,n
         zak = -2.0*con*vma(i,nk)
         zbk = -2.0*con*vmb(i,nk)
         zck = -2.0*con*vmc(i,nk)
         F_gz(i,nk-1) = zak * F_vt(i,nk-1) + zbk * F_vt(i,nk) + &
                        zck * F_vt(i,nk-2) + F_gz(i,nk)
      end do
!$omp enddo
!$omp end parallel
!
      do k = 1, nk-2
         ik  = nk-1-k
         do i=1,n
            zak = -2.0*con*vma(i,ik+1)
            zbk = -2.0*con*vmb(i,ik+1)
            zck = -2.0*con*vmc(i,ik+1)
            F_gz(i,ik) = zak * F_vt(i,ik  ) + zbk * F_vt(i,ik+1) + &
                         zck * F_vt(i,ik+2) + F_gz(i,ik+2)
!
         end do
      end do
!
!     ---------------------------------------------------------------
!
      return
      end
