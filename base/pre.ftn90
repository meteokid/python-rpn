!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r pre - add metric corrections to r.h.s. of momentum equations
!            compute advective contributions on geopotential grid
!            interpolate adv. cont. from geopotential grid to wind grids
!            update r.h.s with advective contributions
!            add contribution of topography to rhs of momentum equations
!            compute rhs of divergence equation
!            compute rhs of combined horizontal equations
!            compute the linear rhs of Helmholtz equation
!            ( memory management and call to prep )
!
#include "model_macros_f.h"
!
      subroutine pre
!
      implicit none
#include <arch_specific.hf>
!
!author
!     Alain Patoine - Gabriel Lemay
!
!revision
! v2_00 - Desgagne M.       - initial MPI version
! v2_31 - Desgagne M.       - remove stkmemw
! v3_00 - Desgagne & Lee    - Lam configuration
! v4_05 - Girard C.         - Open top
! v4_05 - Lepine M.         - VMM replacement with GMM
!
!object
!
!arguments
!        None
!
!implicits
#include "gmm.hf"
#include "glb_ld.cdk"
#include "lun.cdk"
#include "geomg.cdk"
#include "rhsc.cdk"
#include "orh.cdk"
#include "vt1.cdk"
#include "p_geof.cdk"
#include "schm.cdk"
#include "lctl.cdk"
#include "nest.cdk"

!
!modules
!
      type(gmm_metadata) :: mymeta
      integer i, j, istat
!*
!     __________________________________________________________________
!
      if (Lun_debug_L) write (Lun_out,1000)
!
      istat = gmm_get(gmmk_rhsu_s,rhsu,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhsu)'
      istat = gmm_get(gmmk_rhsv_s,rhsv,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhsv)'
      istat = gmm_get(gmmk_rhst_s,rhst,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhst)'
      istat = gmm_get(gmmk_rhsc_s,rhsc,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhsc)'
      istat = gmm_get(gmmk_rhsf_s,rhsf,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhsf)'
      istat = gmm_get(gmmk_rhsb_s,rhsb,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhsb)'
      istat = gmm_get(gmmk_ruw1_s,ruw1,mymeta)
      If (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(ruw1)'
      istat = gmm_get(gmmk_rvw1_s,rvw1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(rvw1)'
      istat = gmm_get(gmmk_ruw2_s,ruw2,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(ruw2)'
      istat = gmm_get(gmmk_rvw2_s,rvw2,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(rvw2)'
      istat = gmm_get(gmmk_xct1_s,xct1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(xct1)'
      istat = gmm_get(gmmk_yct1_s,yct1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(yct1)'
      istat = gmm_get(gmmk_zct1_s,zct1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(zct1)'
      istat = gmm_get(gmmk_orhsu_s,orhsu,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(orhsu)'
      istat = gmm_get(gmmk_orhsv_s,orhsv,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(orhsv)'
      if (.not. Schm_hydro_L) then
         istat = gmm_get(gmmk_rhsw_s,rhsw,mymeta)
         if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(rhsw)'
      endif
      if (Schm_opentop_L) then
         istat = gmm_get(gmmk_nest_t_s,nest_t,mymeta)
         if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(nest_t)'
      endif

      istat = gmm_get(gmmk_fis0_s,fis0,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(fis0)'
!
!     if (Acid_test_L)then
!     if (Lun_out.gt.0) write(Lun_out,*) 'Before prep_2'
!     call glbstat (xct1,'Xct1',1,l_ni,1,l_nj,G_nk,6+acid_i0,G_ni-5-acid_in,
!    %                                             6+acid_j0,G_nj-5-acid_jn,1,1)
!     call glbstat (fis0,'FIS',LDIST_DIM,1,1+acid_i0,G_ni-acid_in,
!    %                                     1+acid_j0,G_nj-acid_jn,1,1)
!     call glbstat (rhsu,'RU0',LDIST_DIM,G_nk,7+acid_i0,G_ni-7-acid_in,
!    %                                      7+acid_j0,G_nj-7-acid_jn,1,G_nk)
!     call glbstat (ruw1,'RUW1',LDIST_DIM,G_nk,6+acid_i0,G_ni-5-acid_in,
!    %                                         5+acid_j0,G_nj-4-acid_jn,1,G_nk)
!     call glbstat (ruw2,'RUW2',LDIST_DIM,G_nk,6+acid_i0,G_ni-5-acid_in,
!    %                                         5+acid_j0,G_nj-4-acid_jn,1,G_nk)
!     call glbstat (rhsc,'RC',LDIST_DIM,G_nk,8+acid_i0,G_ni-7-acid_in,
!    %                                       8+acid_j0,G_nj-7-acid_jn,1,G_nk)
!     endif
!
      call prep_2 ( rhsu ,rhsv ,ruw1  ,ruw2 ,rvw1 ,rvw2 , &
                    xct1 ,yct1 ,zct1  ,fis0 ,rhsc ,rhst , &
                    rhsw ,rhsf ,orhsu ,orhsv,rhsb ,nest_t, &
                    LDIST_DIM, l_ni, l_nj, l_nk )

!
! The following 5 glbstats will not match piloting run because they
! contain the future Ru,Rv inserted in RHS, Ru,Rv
! But glbstats should match for Rc,Rt
!     if (Acid_test_L)then
!     if (Lun_out.gt.0) then
!         write(Lun_out,*) 'After prep_2'
!         write(Lun_out,*) 'STATS will not match, contains future RU,RV'
!     endif
!     call glbstat (rhsu,'RU',LDIST_DIM,G_nk,8+acid_i0,G_ni-7-acid_in,
!    %                                     8+acid_j0,G_nj-7-acid_jn,1,G_nk)
!
!
1000  format(3X,'PRE-COMPUTATION FOR THE HELMHOLTZ PROBLEM: (S/R PRE)')
!     __________________________________________________________________
!
      return
      end

