!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r pre - add metric corrections to r.h.s. of momentum equations
!            compute advective contributions on geopotential grid
!            interpolate adv. cont. from geopotential grid to wind grids
!            update r.h.s with advective contributions
!            add contribution of topography to rhs of momentum equations
!            compute rhs of divergence equation
!            compute rhs of combined horizontal equations
!            compute the linear rhs of Helmholtz equation
!            ( memory management and call to prep )
!
#include "model_macros_f.h"
!
      subroutine pre
!
      implicit none
#include <arch_specific.hf>
!
!author
!     Alain Patoine - Gabriel Lemay
!
!revision
! v2_00 - Desgagne M.       - initial MPI version
! v2_31 - Desgagne M.       - remove stkmemw
! v3_00 - Desgagne & Lee    - Lam configuration
! v4_05 - Girard C.         - Open top
! v4_05 - Lepine M.         - VMM replacement with GMM
!
#include "gmm.hf"
#include "glb_ld.cdk"
#include "lun.cdk"
#include "rhsc.cdk"
#include "orh.cdk"
#include "vt1.cdk"
#include "p_geof.cdk"
#include "schm.cdk"
#include "nest.cdk"
!
      type(gmm_metadata) :: mymeta
      integer istat
      real, dimension(:,:,:), pointer :: nestt
!     __________________________________________________________________
!
      if (Lun_debug_L) write (Lun_out,1000)
!
      istat = gmm_get(gmmk_rhsu_s,rhsu,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhsu)'
      istat = gmm_get(gmmk_rhsv_s,rhsv,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhsv)'
      istat = gmm_get(gmmk_rhst_s,rhst,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhst)'
      istat = gmm_get(gmmk_rhsc_s,rhsc,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhsc)'
      istat = gmm_get(gmmk_rhsf_s,rhsf,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhsf)'
      istat = gmm_get(gmmk_rhsb_s,rhsb,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre  ERROR at gmm_get(rhsb)'
      istat = gmm_get(gmmk_ruw1_s,ruw1,mymeta)
      If (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(ruw1)'
      istat = gmm_get(gmmk_rvw1_s,rvw1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(rvw1)'
      istat = gmm_get(gmmk_ruw2_s,ruw2,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(ruw2)'
      istat = gmm_get(gmmk_rvw2_s,rvw2,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(rvw2)'
      istat = gmm_get(gmmk_xct1_s,xct1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(xct1)'
      istat = gmm_get(gmmk_yct1_s,yct1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(yct1)'
      istat = gmm_get(gmmk_zct1_s,zct1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(zct1)'
      istat = gmm_get(gmmk_orhsu_s,orhsu,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(orhsu)'
      istat = gmm_get(gmmk_orhsv_s,orhsv,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(orhsv)'
      istat = gmm_get(gmmk_rhsw_s,rhsw,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(rhsw)'
      istat = gmm_get(gmmk_fis0_s,fis0,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'pre ERROR at gmm_get(fis0)'

      if (G_lam) then
         istat = gmm_get(gmmk_nest_t_s,nestt)
      else
         allocate (nestt(l_minx:l_minx,l_miny:l_miny,2:2))
      endif

      call prep_2 ( rhsu, rhsv, ruw1 , ruw2 , rvw1, rvw2 , &
           xct1, yct1, zct1 , fis0 , rhsc, rhst , &
           rhsw, rhsf, orhsu, orhsv, rhsb,        &
           nestt(l_minx,l_miny,2), LDIST_DIM, l_ni, l_nj, l_nk )

1000  format(3X,'PRE-COMPUTATION FOR THE HELMHOLTZ PROBLEM: (S/R PRE)')
!     __________________________________________________________________
!
      return
      end

