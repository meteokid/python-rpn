!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!** s/r ens_uvgdw - Computes |u*du +v*dv| of wind-like fields 
!
#include "model_macros_f.h"
!
      subroutine ens_uvgwd ( F_duv, F_uu, F_vv, DIST_DIM, Nk )
!
      implicit none
!
      integer  DIST_DIM, Nk
      real     F_duv(DIST_SHAPE,Nk), F_uu  (DIST_SHAPE,Nk), &
               F_vv (DIST_SHAPE,Nk)
!
!authors
!      Lubos Spacek - apr 2005
!
!revision
!
!object
!     see id section 
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! F_duv         O        the resulted |u*du +v*dv|
! F_uu          I        wind-like field on U-grid
! F_vv          I        wind-like field on V-grid
!----------------------------------------------------------------
!
!implicits
#include "glb_ld.cdk"
#include "geomg.cdk"
#include "dcst.cdk"
      integer i, j, k, i0, in, j0, jn
      real coni, coni1, conj
!*
!     __________________________________________________________________
!
      i0 = 1
      in = l_niu
      j0 = 1
      jn = l_njv
      if ((G_lam).and.(l_west)) i0 = 2
      if (l_south) j0 = 2
!
      do k=1,Nk
         do j = j0, jn
         coni  = (( 1.0/geomg_cy_8(j))  * Dcst_rayt_8)**2
         coni1 = (( 1.0/geomg_cy_8(j-1)) * Dcst_rayt_8)**2
         conj  = (( 1.0/geomg_cyv_8(j-1)) * Dcst_rayt_8)**2
         do i = i0, in

!
            F_duv(i,j,k) = 0.5*abs( ( F_uu(i,j,k)*coni + &
                                       F_uu(i,j-1,k)*coni1 ) &
                       + (conj*(F_vv(i,j-1,k)+F_vv(i-1,j-1,k))))
         end do
         end do
!
         if (.not.G_lam) then
            if (l_south) then
            do i = i0, in
               F_duv(i,1,k) = 0.0
            end do
            endif
            if (l_north) then
            do i = i0, in
               F_duv(i,l_nj,k) = 0.0
            end do
            endif
         endif
      end do
!
      return
      end
