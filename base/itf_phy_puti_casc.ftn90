!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r itf_phy_geti - "get information" the call back function
!
#include "model_macros_f.h"
Subroutine itf_phy_puti_casc (vd,opt,istat)
  !
  Use phy_input_types
  !
  Implicit None
  Integer                 :: ier,istat(*)
  Type(variable), Pointer :: vd, temp
  Type(input_options)     :: opt
  !
  !Author
  !     Lubos Spacek - Spring 2010
  !
  !Revision
  ! v4_13 - Spacek, L.     - First revision
  !
  !Object
  !     Reads cascades
  !
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
#include "itf_phy_buses.cdk"
#include "lun.cdk"
!
  Character(len=16)                :: var
  Integer                          :: k
  Real, Pointer, Dimension (:,:,:) :: dst
!
!----------------------------------------------------------------------
!
If (vd%casc_L) Then
   Write(var,'(2a)')'CASC_',trim(vd%nomvar)
   nullify (dst)
   gmmstat = gmm_get(var,dst,meta2d)
   If ( .not. GMM_IS_ERROR(gmmstat) ) Then
      if (Lun_out.gt.-1) Write(Lun_out,6000) trim(vd%phyvar)
      Do k=1,vd%p_nu
         istat(k) = 1
         call itf_phy_fold_sfc (vd%values(1,1,k), dst, l_ni, l_nj)
      Enddo
   endif
Endif
!
 6000 format ('VARIABLE: ',a,' OBTAINED from 3DF initial conditions file')
!
!----------------------------------------------------------------------
!
End Subroutine itf_phy_puti_casc
      
