!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r hzd_exhrdif - applies horizontal explicit diffusion
!
#include "model_macros_f.h"
      subroutine hzd_exhrdif (F_f2hzd, F_grd_S, NK)
      implicit none
!
      character*(*) F_grd_S
      integer       DIST_DIM, Nk
      real          F_f2hzd (*)
!
!AUTHORs    C. Girard & M. Desgagne
!
!revision
! v3_21 - Desgagne M.    - initial MPI version
! v3_30 - Desgagne M.    - openMP precision in shared variables
! v4_15 - Desgagne M.    - refonte majeure
!
#include "glb_ld.cdk"
#include "hzd.cdk"
!
      integer i,j,k, nn, mm, nij, i0,in,j0,jn, stag_x,stag_y
      real wk1(LDIST_SHAPE,Nk),rnr,pwr
      real*8 pt25,nu_dif,epsilon,lnr,visco

      parameter (epsilon = 1.0d-12, pt25=0.25d0)
!     __________________________________________________________________
!
      rnr = Hzd_lnr
      pwr = Hzd_pwr
      if (F_grd_S.eq.'S_TR') then
         rnr = Hzd_lnr_tr
         pwr = Hzd_pwr_tr
      endif

      lnr = 1.0d0 - exp(rnr)

      nu_dif = 0.d0
      if (pwr.gt.0) nu_dif = pt25*lnr**(2.d0/pwr)
      nu_dif = min ( nu_dif, pt25-epsilon)
      visco  = min ( nu_dif, pt25 )

      if (nu_dif.lt.1.0e-10) return

      i0 = Minx
      in = Maxx
      j0 = Miny
      jn = Maxy
      nij= (in-i0+1)*(jn-j0+1)
      nn = pwr/2
      
      stag_x = 0
      stag_y = 0
      if (F_grd_S.eq.'U') stag_x = 1
      if (F_grd_S.eq.'V') stag_y = 1

      call rpn_comm_xch_halo ( F_f2hzd, LDIST_DIM, l_ni,l_nj, Nk, &
                       G_halox,G_haloy,G_periodx,G_periody,l_ni,0 )

      do mm=1,nn

         call hzd_nudeln (F_f2hzd, wk1, LDIST_DIM, Nk, visco, stag_x,stag_y, mm,nn)

         if (mm.ne.nn) call rpn_comm_xch_halo( wk1, LDIST_DIM, l_ni,l_nj,G_nk, &
                                    G_halox,G_haloy,G_periodx,G_periody,l_ni,0 )

      end do

!     __________________________________________________________________
!
      return
      end
