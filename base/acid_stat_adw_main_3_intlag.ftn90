!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r acid_stat_adw_main_3_intlag - gblstat for acid test

#include "model_macros_f.h"
!
      subroutine acid_stat_adw_main_3_intlag (F_ruw1,F_ruw2,F_rvw2,F_flag)
      implicit none
      real    F_ruw1(LDIST_SHAPE,G_nk),F_ruw2(LDIST_SHAPE,G_nk), &
           F_rvw2(LDIST_SHAPE,G_nk)     
      integer F_flag
      character(len=80) :: flag_S
!
!author
!     Andre Plante
!     
!revision
!
!language
!     fortran 77
!
!object
!     glbstat for LAM acid test
!     Note : the acid test is conducted with one CPU.
!
!implicits
#include "lun.cdk"
#include "glb_ld.cdk"
#include "acid.cdk"
!     
      if(F_flag.eq.1)then
         if (Lun_debug_L) write (Lun_out,*)'Before adw_interp'
         call glbstat (F_ruw1,'RUW1',LDIST_DIM,G_nk, &
              4+acid_i0,G_ni-3-acid_in, &
              4+acid_j0,G_nj-3-acid_jn, &
              1,G_nk)
      elseif(F_flag.eq.2)then         
         write (Lun_out,*)'After adw_interp2'
         call glbstat (F_ruw2,'RUW2',LDIST_DIM,G_nk, &
              7+acid_i0,G_ni-6-acid_in, &
              7+acid_j0,G_nj-6-acid_jn, &
              1,G_nk)
         call glbstat (F_rvw2,'RVW2',LDIST_DIM,G_nk, &
              7+acid_i0,G_ni-6-acid_in, &
              7+acid_j0,G_nj-6-acid_jn, &
              1,G_nk)
      else
         write(flag_S,'(I)') F_flag
         call handle_error(-1,'acid_stat_adw_main_3_intlag','error with flag='//flag_S)
      endif

      return
      
      end
