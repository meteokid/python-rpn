!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r itf_ens_init - initialize ensemble prevision system
!
#include "model_macros_f.h"
!
      subroutine itf_ens_init
      implicit none
!
!     author   
!     Lubos Spacek - December 2009
!     
!     revision
! v4_12 - Spacek L.        - Initial version
!
!object
!	See above ID.
!
!arguments
!	none
!
#include "glb_ld.cdk"
#include "lun.cdk"
#include "path.cdk"
#include "grd.cdk"
!
      integer, external :: ens_nml
      integer           :: ierr(5), imrkv2
      real              :: ptp_env_u, ptp_env_b
      logical           :: ens_conf,stochphy, prout
!
!-------------------------------------------------------------------
!
! Read the namelist
!
      if (Lun_out.gt.0) write(Lun_out,1000)
!
      ierr=0

      ierr(1) = ens_nml (Path_nml_S,Grd_typ_S,ens_conf,stochphy,imrkv2,ptp_env_u,ptp_env_b,Lun_out)
      call handle_error(ierr(1),'itf_ens_init','Problem with ens_nml')
      if (ens_conf) then
         prout = Lun_out.gt.0
         call phy_opti('IMRKV2'   , imrkv2    ,1,'SET',prout,ierr(2))
         call phy_optl('STOCHPHY' , stochphy  ,1,'SET',prout,ierr(3))
         call phy_optr('PTPENVU'  , ptp_env_u ,1,'SET',prout,ierr(4))
         call phy_optr('PTPENVB'  , ptp_env_b ,1,'SET',prout,ierr(5))
         ierr(2) = min(ierr(2),ierr(3), ierr(4), ierr(5))
         call handle_error(ierr(2),'itf_ens_init','physics initialization')
         call ens_set_mem (LXDIST_DIM,G_halox,l_ni, &
                           LYDIST_DIM,G_haloy,l_nj,l_nk,Lun_out)

      endif
!
 1000 format(/,'INITIALIZATION OF ENSEMBLES (S/R ITF_ENS_INIT)'/(46('=')))
!
!-------------------------------------------------------------------
!
      return
      end
