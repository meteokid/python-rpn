!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r diag_fip - Builds model (non-) hydrostatic perturbation and 
!     total geopotential from temperature and "surface pressure" for
!     vertically staggered variables as in Girard formulation 1.
!
#include "model_macros_f.h"
!
      subroutine diag_fip(F_fip,F_s,F_t,F_q,F_fis,DIST_DIM,nk)
!     
      implicit none
#include <arch_specific.hf>
!     
      integer DIST_DIM,nk
      real F_fip(DIST_SHAPE,0:Nk+1),F_q(DIST_SHAPE,0:Nk+1)
      real F_s  (DIST_SHAPE)       ,F_t(DIST_SHAPE,Nk+2)
      real F_fis(DIST_SHAPE)
!
!author
!
! Andre Plante july 2006.
!
!revision
!
! v4_00 - Plante & Girard   - Log-hydro-pressure coord on Charney-Phillips grid
!
!object
!       see id section
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! F_fip        O    - perturbation hydrostatic geopotential height
!                     Note the virtual levels!
! F_s          I    - log(pis/pistars)
! F_t          I    - temperature
! F_fis        I    - surface geopotential height
!
!implicits
#include "glb_ld.cdk"
#include "cstv.cdk"
#include "ver.cdk"
#include "schm.cdk"
!     
!*
      integer i,j,k
      real*8  one,yyy,qbar
      real*8, dimension(l_ni,l_nj):: xtmp_8, ytmp_8
!
      parameter( one = 1.d0 )
!     ---------------------------------------------------------------
!
!$omp parallel private (qbar,yyy,xtmp_8,ytmp_8)
!
!$omp do 
      do j=1,l_nj
      do i=1,l_ni
         F_fip(i,j,G_nk+1)=F_fis(i,j)
      end do
      end do
!$omp enddo
!
!     Note that index on F_fip goes to zero.
      do k= G_nk+1,1,-1
         if(.not.Schm_hydro_L) then
!$omp do
            do j=1,l_nj
            do i=1,l_ni
               qbar=(Ver_wp_8%t(k)*F_q(i,j,k)+Ver_wm_8%t(k)*F_q(i,j,k-1))
               xtmp_8(i,j)=-qbar
            end do
            end do
!$omp enddo
            call vexp(ytmp_8,xtmp_8,l_ni*l_nj)
!$omp do
            do j=1,l_nj
            do i=1,l_ni
               xtmp_8(i,j)=ytmp_8(i,j)*(one+Ver_dbdz_8%t(k)*F_s(i,j))
            end do
            end do
!$omp enddo
         else
!$omp do
            do j=1,l_nj
            do i=1,l_ni
               xtmp_8(i,j)=one+Ver_dbdz_8%t(k)*F_s(i,j)
            end do
            end do
!$omp enddo
         endif
         yyy=Cstv_RTstr_8*Ver_dz_8%t(k)/Cstv_Tstr_8
!$omp do
         do j=1,l_nj
         do i=1,l_ni
            F_fip(i,j,k-1)=F_fip(i,j,k)+yyy*(F_t(i,j,k)*xtmp_8(i,j)-Cstv_Tstr_8)
         end do
         end do
!$omp enddo
      end do
!
!$omp end parallel
!
!     ---------------------------------------------------------------
!
      return
      end
