!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!opyright (C) 2001  MSC-RPN COMM  %%%MC2%%%
!**s/r e_pilotf
!
      integer function e_pilotf2 (datev,nomvar,etk,typvar,ip1,ip2,ip3, &
                                                     F_pilot_S,F_unit)
      implicit none
#include <arch_specific.hf>
!
      character* (*) nomvar,etk,typvar,F_pilot_S
      integer datev,ip1,ip2,ip3,F_unit
!
!AUTHOR  M. Desgagne    November 2001
!
!revision
! v3_30 - Desgagne M - to search the list again if a record is not found
! v4_03 - Lee/Desgagne - ISST
!
!IMPLICIT
#include "filename.cdk"
!
      integer  fnom,fstouv,fstinf,fstfrm,fclos
      external fnom,fstouv,fstinf,fstfrm,fclos
      character*16 date
      character*512 fn
      logical done
      integer i,ier,ni1,nj1,nk1
      data done /.false./
      save done
!
!---------------------------------------------------------------------
!
      e_pilotf2 = -1
      F_unit    = 0

 55   do i = max(1,ipilf), npilf
         fn= trim(F_pilot_S)//'/'//trim(pilot_f(i))
         ier = fnom (F_unit,fn,'RND+OLD+R/O',0)
         if (ier.ge.0) ier = fstouv (F_unit,'RND')
         if (ier.ge.0) e_pilotf2= fstinf (F_unit,ni1,nj1,nk1,datev, &
                                          etk,ip1,ip2,ip3,typvar,nomvar)
         if ( e_pilotf2.ge.0 ) then
            ipilf = i
            goto 879
         endif
         ier = fstfrm (F_unit)
         ier = fclos  (F_unit)
      end do
      if (e_pilotf2.lt.0 .and. .not.done) then
         ipilf = 1
         done  = .true.
         goto 55
      endif

 879  call datf2p (date,datev)
      if (e_pilotf2.ge.0) then
         print*, "(E_PILOTF): FOUND ",nomvar,' valid at ',date, ' in ', &
              trim(pilot_f(i))
      else
         F_unit = -1
         print*, "(E_PILOTF): COULD NOT FIND: ",nomvar,' valid at ',date, &
              ' in pilot directory'
      endif
      print*
!
!---------------------------------------------------------------------
!
      return
      end
