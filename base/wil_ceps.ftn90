!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r wil_ceps
!
#include "model_macros_f.h"
!
      SUBROUTINE WIL_CEPS(CMN,DMN,EMN,EPSIL,LROW,LDIAG)
!
      implicit none
#include <arch_specific.hf>
!
!implicits
#include "wil_glb_ld.cdk"
!
      REAL CMN(G_LRM), DMN(G_LRM), EMN(G_LRM)
      REAL EPSIL(G_NALP)
      INTEGER LROW(0:G_KK,2), LDIAG(0:G_NN,2)
!
!author Jacob et al. 1992 
!
!revision
! v4_04 - Jacob et al.     - initial version CEPS 
! v4_04 - Tanguay M.       - Williamson's cases
!
!object
!     CALCULATES THE STRUCTURE OF THE RECURRENCE COEFFICIENT MATRICES           
!     USED IN THE BELOUSOV PROCEDURE, STORES THIS INFORMATION IN                
!     LROW(0:KK,2), AND EVALUATES THE COEFFICIENT MATRICES                    
!     THE SPECTRAL TRUNCATION PARAMETERS ARE DEFINED BY 3 PARAMETERS:           
!     MM, THE LARGEST FOURIER WAVENUMBER; KK, THE HIGHEST DEGREE OF THE         
!     ASSOCIATED LEGENDRE POLYNOMIALS, AND NN THE HIGHEST DEGREE OF THE         
!     ASSOCIATED LEGENDRE POLYNOMIALS FOR M=0.  THE LENGTH OF THE EPSIL         
!     RECURRENCE ARRAY (AS WITH THE ASSOC. LEGENDRE POLYNOMIAL ARRAY)           
!     IS GIVEN BY THE RELATION LEN = ((MM+1)*(NN+1) - (LMN**2 + LMN)/2)         
!     WHERE LMN = MM + NN - KK.  VARIABLES ARE STORED ALONG DIAGONALS           
!     STARTING WITH THE DIAGONAL DEFINED BY M=N.  THE LENGTH OF EACH            
!     DIAGONAL IS STORED IN THE ARRAY LDIAG(0:NN,1) AND IS EVALUATED            
!     USING THE EXPRESSION (MM+1) - AMAX(MM + N - KK, 0) WHERE 0>N>NN.          
!     CUMULATIVE DIAGONAL LENGTHS (CUMULATIVE DISPLACEMENTS) ARE STORED         
!     IN LDIAG(0:NN,2) SO THAT EPSIL OF ORDER M AND DEGREE N IS                 
!     ADDRESSED AS EPSIL(1 + LDIAG(N-M,2)+M)).                                  
!
!------------------------------------------------------------------
      INTEGER K,M,N,JM,JN,IS
      INTEGER NSQD,MSQD
!------------------------------------------------------------------
!
!     FIRST DETERMINE LDIAG(0:NN,1:2), DIAGONAL LENGTHS AND CUMULATIVE          
!     DISPLACEMENTS FOR ALP, DALP, AND EPSIL ARRAYS                             
!     -------------------------------------------------------------
      LDIAG(0,1) = G_MM+1
      LDIAG(0,2) = 0                                                            
!                                                                               
      DO 10 N=1,G_NN                                                              
         LDIAG(N,1) = (G_MM+1) - MAX0(G_MM+N-G_KK, 0)                                
         LDIAG(N,2) = LDIAG(N-1,1) + LDIAG(N-1,2)                               
   10 CONTINUE                                                                  
!                                                                               
!     OTHER STRUCTURE INFORMATION (ROWS)                            
!     BEGIN BY CALCULATING ROW LENGTHS AND CUMULATIVE DISPLACEMENTS             
!     AND STORE THE INFORMATION IN LROW(0:KK,1:2)                               
!     ROW INFO IS FROM M=0 TO M=MM FOR EACH 0 <= N <= KK (I.E., IT DOES        
!     NOT EXCLUDE THE EMPTY AREA BETWEEN (NN+M) AND KK WHEN KK > NN)            
!     -------------------------------------------------------------
      LROW(0,1) = 1                                                             
      LROW(0,2) = 0                                                             
!                                                                               
      DO 15 K=1,G_KK                                                              
         LROW(K,1) = MIN0(K+1,G_MM+1)                                             
         LROW(K,2) = LROW(K-1,1) + LROW(K-1,2)                                  
   15 CONTINUE                                                                  
!                                                                               
!     COMPUTE EPSIL MATRIX                                                      
!     BEGIN WITH FIRST TWO DIAGONALS                                            
!     ------------------------------
      DO 25 M=0,G_MM                                                              
         JM = M+1                                                               
         IS = LDIAG(1,2)                                                        
         EPSIL(JM)    = 0.0                                                     
         EPSIL(IS+JM) = 1.0/SQRT(REAL(2*M+3))                                  
   25 CONTINUE                                                                  
!                                                                               
!     REMAINING DIAGONALS (JN = 2 THROUGH NN)                                   
!     ---------------------------------------
      DO 40 JN = 2,G_NN                                                           
         IS   = LDIAG(JN,2)                                                     
         DO 30 M=0,LDIAG(JN,1)-1                                                
            JM   = M+1                                                          
            N    = JN+M                                                         
            NSQD = N*N                                                          
            MSQD = M*M                                                          
            EPSIL(IS+JM) = SQRT(REAL(NSQD-MSQD)/REAL(4*NSQD-1))               
   30    CONTINUE                                                               
   40 CONTINUE                                                                  
!                                                                               
!     COMPUTE RECURRENCE COEFFICIENT MATRICES CMN, DMN, EMN                     
!     REASON FOR STORING BY ROW IS TO AVOID BANK CONFLICTS WHEN                 
!     EVALUATING THE POLYNOMIALS IN SUBROUTINE CALP                             
!     ---------------------------------------------------------     
!                                                                               
!     CHECK FOR SUFFICIENT STORAGE (PARAMETER G_LRM CORRECTLY SPECIFIED)          
!     ------------------------------------------------------------------
      IF (G_LRM .LT. ((G_MM+1)*(G_KK+1)-(G_MM*G_MM+G_MM)/2)) THEN                         
         WRITE (0,2) G_LRM                                                        
    2    FORMAT(/,' STSWM: FATAL ERROR IN SUBROUTINE WIL_CEPS ',/,         &
           ' G_LRM INCORRECTLY SPECIFIED FOR BELOUSOV RECURRENCE',         &
           ', G_LRM = ', I10)                                                
         STOP                                                                  
      ENDIF                                                                     
!                                                                               
      DO 130 N = 2,G_KK                                                           
         IS   = LROW(N,2)                                                       
         DO 120 M=2,LROW(N,1)-1                                                 
            JM = M+1                                                            
            CMN(IS+JM) = SQRT(REAL((2*N+1)*(M+N-1)*(M+N-3))                     &
                            /(REAL((2*N-3)*(M+N)*(M+N-2))))                    
            DMN(IS+JM) = SQRT(REAL((2*N+1)*(M+N-1)*(N-M+1))                     &
                            /(REAL((2*N-1)*(M+N)*(M+N-2))))                    
            EMN(IS+JM) = SQRT(REAL((2*N+1)*(N-M))                               &
                            /(REAL((2*N-1)*(M+N))))                            
  120    CONTINUE                                                               
  130 CONTINUE                                                                  
!                                                                               
      RETURN                                                                    
      END                                                                       
