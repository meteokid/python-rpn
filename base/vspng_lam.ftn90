!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r vspng_lam
!
#include "model_macros_f.h"
!
      subroutine vspng_lam ( F_champ, DIST_DIM, pni, pnj )

      implicit none
#include <arch_specific.hf>
!
      integer DIST_DIM,pni,pnj
      real F_champ(DIST_SHAPE,*)
!
!author   Claude Girard                         Sept  2002
!
!revision
! v3_02 - Lee V.          - initial version (from MC2 topspng2+smth2d)
!
!object
!     This routine iterates around a 9 points horizontal filter
!*
!implicit
#include "glb_ld.cdk"
#include "glb_pil.cdk"
#include "vspng.cdk"
!
      integer i,j,k,iter,i0,in,j0,jn
      real*8 c1,c2,c3,one,two,four
      parameter(one=1.d0,two=2.d0,four=4.d0)
      real wk(l_ni,l_nj)
! 
!---------------------------------------------------------------------
!
      i0=1
      in=l_niu
      j0=1
      jn=l_njv
      if (l_south) j0=2
      if (l_north) jn=l_njv-1
      if (l_west)  i0=2
      if (l_east)  in=l_niu-1
      do iter = 1, Vspng_niter
!
         call timing_start ( 46, 'VSPNG_COMM' )
         call rpn_comm_xch_halo (F_champ,LDIST_DIM,pni,pnj, &
                Vspng_nk,G_halox,G_haloy,G_periodx,G_periody,l_ni,0)
         call timing_stop (46)
!
         call timing_start ( 47, 'VSPNG_CALC' )
         do k=1,Vspng_nk
            c1= (one-two*Vspng_nu_8(k))*Vspng_nu_8(k)
            c2= Vspng_nu_8(k)**two
            c3= four*(Vspng_nu_8(k)-one)*Vspng_nu_8(k)
            do j=j0,jn
            do i=i0,in
               wk(i,j)= c1*(F_champ(i  ,j+1,k)+F_champ(i+1,j  ,k) + &
                              F_champ(i  ,j-1,k)+F_champ(i-1,j  ,k))+ &
                          c2*(F_champ(i-1,j+1,k)+F_champ(i+1,j+1,k) + &
                              F_champ(i-1,j-1,k)+F_champ(i+1,j-1,k))+ &
                          c3* F_champ(i  ,j  ,k)
            end do
            end do
            do j=1+pil_s, l_nj-pil_n
            do i=1+pil_w, l_ni-pil_e
               F_champ(i,j,k)= F_champ(i,j,k) + wk(i,j)
            end do
            end do
         end do
         call timing_stop (47)
!
      end do
!
!----------------------------------------------------------------------
      return
      end

