!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r set_transpose - Establish layout for the 2 level-transpose used
!                      in the solver and the horizontal diffusion
!
#include "model_macros_f.h"
!
      subroutine set_transpose ()
!
      implicit none
#include <arch_specific.hf>
!
!author
!     M. Desgagne - rpn - 1999
!
!revision
! v2_00 - Desgagne M.       - initial MPI version
! v2_10 - Desgagne M.       - add partitioning checks
! v2_11 - Desgagne M.       - vertical sponge layer (vsl)
! v2_21 - Corbeil  L.       - ldnh_maxx and ldnh_maxy for vsl
!
!object 
!
!arguments
!     None
!
!implicits
#include "glb_ld.cdk"
#include "ldnh.cdk"
#include "lun.cdk"
#include "schm.cdk"
#include "trp.cdk"
#include "vspng.cdk"
#include "ptopo.cdk"
! 
!modules
      logical check_parti
      integer rpn_comm_topo
      external rpn_comm_topo,check_parti
!
      integer istat, minx, maxx, n, npartiel, n0, n1, dim, ierr
!
!     ---------------------------------------------------------------
!
      if (Lun_out.gt.0) write (Lun_out,1000)
      ierr=0
!
! Establishing local dimensions and computing arena (data topology) for:
!          G_ni distributed on Ptopo_npex PEs and 
!          G_nj distributed on Ptopo_npey PEs both without halo
!
      if (Lun_out.gt.0) write(Lun_out,1002) ' Transpose 1===>2 for SOLVER (no halo):', &
       ' G_ni distributed on Ptopo_npex PEs', G_ni,Ptopo_npex

      istat = rpn_comm_topo( G_ni, ldnh_minx, ldnh_maxx, ldnh_ni,  &
                               npartiel, 0, n0, .true. , .true. )
      if (.not.check_parti (n0,G_ni,Ptopo_npex)) ierr=-1

      if (Lun_out.gt.0) write(Lun_out,1002) ' Transpose 1===>2 for SOLVER (no halo):', &
       ' G_nj distributed on Ptopo_npey PEs', G_nj,Ptopo_npey

      istat = rpn_comm_topo( G_nj, ldnh_miny, ldnh_maxy, ldnh_nj,  &
                               npartiel, 0, n1, .false., .true. )
      if (.not.check_parti (n1,G_nj,Ptopo_npey)) ierr=-1
!
! Transpose 1===>2:G_nk distributed on Ptopo_npex PEs (no halo)
!                  G_nj distributed on Ptopo_npey PEs (original layout)
!                  G_ni NOT distributed
!         initial layout  : (l_minx:l_maxx,    l_miny:l_maxy    ,G_nk)
!         transpose layout: (l_miny:l_maxy,trp_12dmin:trp_12dmax,G_ni)
!
      if (Lun_out.gt.0) write(Lun_out,1002) ' Transpose 1===>2 for HZD (no halo):', &
      ' G_nk   distributed on Ptopo_npex PEs', G_nk,Ptopo_npex

      istat = rpn_comm_topo ( G_nk, minx, maxx, n, npartiel , &
                                     0, n0, .true. , .true. )
      if (.not.check_parti (n0,G_nk  ,Ptopo_npex)) ierr=-1
!
      trp_12dmin = minx ! most likely = 1 since no halo
      trp_12dmax = maxx
      trp_12dn   = n
      trp_12dn0  = n0
!
! Transpose 1===>2:G_nk+1 distributed on Ptopo_npex PEs (no halo)
!                  G_nj distributed on Ptopo_npey PEs (original layout)
!                  G_ni NOT distributed
!         initial layout  : (l_minx:l_maxx,     l_miny:l_maxy     ,G_nk+1)
!         transpose layout: (l_miny:l_maxy,trp_p12dmin:trp_p12dmax,G_ni  )
!
      if (Lun_out.gt.0) write(Lun_out,1002) ' Transpose 1===>2 for HZD (no halo):', &
      ' G_nk+1 distributed on Ptopo_npex PEs', G_nk+1,Ptopo_npex

      istat = rpn_comm_topo ( G_nk+1, minx, maxx, n, npartiel , &
                                     0, n0, .true. , .true. )
      if (.not.check_parti (n0,G_nk+1,Ptopo_npex)) ierr=-1
!
      trp_p12dmin = minx ! most likely = 1 since no halo
      trp_p12dmax = maxx
      trp_p12dn   = n
      trp_p12dn0  = n0
!
!    The elliptic solver distributes only Schm_nith vertical levels
!
!    Vertical sponge near model lid:
!                  Vspng_n_spng top layers NOT distributed
!                  ldnh_maxy distributed on Ptopo_npex PEs
!                  G_ni NOT distributed

      if (Lun_out.gt.0) write(Lun_out,1002) ' Transpose 1===>2 for SOLVER (no halo):', &
      ' Schm_nith distributed on Ptopo_npex PEs', Schm_nith,Ptopo_npex

      istat = rpn_comm_topo ( Schm_nith, minx, maxx, n, npartiel , &
                                         0, n0, .true. , .true. )
      if (.not.check_parti (n0,Schm_nith,Ptopo_npex)) ierr=-1
!
      trp_12smin = minx ! most likely = 1 since no halo
      trp_12smax = maxx
      trp_12sn   = n
      trp_12sn0  = n0
!
      if ((.not.G_lam).and.(Vspng_nk.gt.0)) then
         if (Lun_out.gt.0) write(Lun_out,1002) ' Transpose 1===>2 for VSPNG (no halo):', &
         ' ldnh_maxy distributed on Ptopo_npex PEs', ldnh_maxy,Ptopo_npex

         istat = rpn_comm_topo ( ldnh_maxy, minx, maxx, n, npartiel , &
                                           0, n0, .true. , .true. )
         if (.not.check_parti (n0,ldnh_maxy,Ptopo_npex)) ierr=-1

         trp_12emin = 1
         trp_12emax = maxx
         trp_12en   = n
         trp_12en0  = n0
      endif
!
! Transpose 2===>2:G_nk distributed on Ptopo_npex PEs (no halo)
!                  G_nj NOT distributed
!                  G_ni distributed on Ptopo_npey PEs (no Halo)
!  initial layout  : (    l_miny:l_maxy    ,trp_12dmin:trp_12dmax,G_ni)
!  transpose layout: (trp_12dmin:trp_12dmax,trp_22min:trp_22max,G_nj)
!
      if (Lun_out.gt.0) write(Lun_out,1002) ' Transpose 2===>2 for HZD&SOL (no halo):', &
      ' G_ni distributed on Ptopo_npey PEs', G_ni,Ptopo_npey

      istat = rpn_comm_topo ( G_ni, minx, maxx, n, npartiel , &
                                     0, n0, .false. , .true. )
      if (.not.check_parti (n0,G_ni,Ptopo_npey)) ierr=-1
!
      trp_22min = minx ! most likely = 1 since no halo
      trp_22max = maxx
      trp_22n   = n
      trp_22n0  = n0
!
!    Vertical sponge near model lid:
!                  Vspng_n_spng top layers NOT distributed
!                  ldnh_maxx distributed on Ptopo_npey PEs
!                  G_nj NOT distributed
!
      if ((.not.G_lam).and.(Vspng_nk.gt.0)) then
         if (Lun_out.gt.0) write(Lun_out,1002) ' Transpose 2===>2 for VSPNG (no halo):', &
         ' ldnh_maxx distributed on Ptopo_npey', ldnh_maxx,Ptopo_npey

         istat = rpn_comm_topo ( ldnh_maxx, minx, maxx, n, npartiel , &
                                          0, n0, .false. , .true. )
         if (.not.check_parti (n0,ldnh_maxx,Ptopo_npey)) ierr=-1
!
         trp_22emin = 1
         trp_22emax = maxx
         trp_22en   = n
         trp_22en0  = n0
      endif
!
      call handle_error(ierr,'SET_TRANSPOSE','ILLEGAL DOMAIN PARTITIONING -- ABORTING')
!
 1000 format (/' SET_TRANSPOSE: checking various dimension partitionning:')
 1002 format (a/a45,i6,' /',i5)
!     ---------------------------------------------------------------
!
      return
      end


