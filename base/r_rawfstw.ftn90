!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
      subroutine r_rawfstw2 (rs,minx,maxx,miny,maxy,mink,maxk,varname,i0,in,j0,jn,k0,kn, &
                                                      stepno,dt,date0,ig1,ig2,out_file)
      implicit none
!
      integer minx,maxx,miny,maxy,mink,maxk,stepno,dt,date0,i0,in,j0,jn,k0,kn,ig1,ig2
      real rs(minx:maxx,miny:maxy,mink:maxk)
      character* (*) varname,out_file
!
      integer fnom,fclos
      integer id_unit,err,ip1,ip2,i,j,nx,ny
      real wk(in-i0+1,jn-j0+1)
!
      id_unit=0
      err = fnom (id_unit, out_file, 'rnd', 0)
      call fstouv (id_unit,'rnd')
!
      nx = in-i0+1
      ny = jn-j0+1
      ip2 =(stepno*dt)/3600
      do ip1=k0,kn
         do j=j0,jn
         do i=i0,in
            wk(i,j) = rs(i,j,ip1)
         end do
         end do
         if ((ig1.gt.-1) .and. (ig2.gt.-1) ) then
            call fstecr (wk,wk,-32,id_unit, date0, int(dt), stepno, nx,ny,1, &
                    ip1,ip2,stepno,'P',varname,'rslt2','Z',ig1,ig2,0,0,1,.false.)
         else
            call fstecr (wk,wk,-32,id_unit, date0, int(dt), stepno, nx,ny,1, &
                    ip1,ip2,stepno,'P',varname,'rslt2','X',1,1,1,1,1,.false.)
         endif
      end do

      call fstfrm (id_unit)
      err = fclos (id_unit)
!
      return
      end

      subroutine r_rawfst_pos (xp,yp,ni,nj,ip1,ip2,ig1,ig2,ig3,ig4,out_file)
      implicit none
!
      integer ni,nj,ip1,ip2,ig1,ig2,ig3,ig4
      real xp(ni),yp(nj)
      character* (*) out_file
!
      integer fnom,fclos
      integer id_unit,err
!
      id_unit=0
      err = fnom (id_unit, out_file, 'rnd', 0)
      call fstouv (id_unit,'rnd')
!
      call fstecr (xp,xp,-32,id_unit, 0, 0, 0, ni,1,1, &
                   ip1,ip2,0,'X','>>','POS_X','E', &
                   ig1,ig2,ig3,ig4,1,.false.)
      call fstecr (yp,yp,-32,id_unit, 0, 0, 0, 1,nj,1, &
                   ip1,ip2,0,'X','^^','POS_Y','E', &
                   ig1,ig2,ig3,ig4,1,.false.)

      call fstfrm (id_unit)
      err = fclos (id_unit)
!
      return
      end

