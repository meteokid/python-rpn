!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

#if defined (DOC)
!
!**comdeck vtx.cdk
!
!______________________________________________________________________
!                                                                      |
!  GMM variables at no specific time                                   |
!______________________________________________________________________|
!                    |                                                 |
! NAME               | DESCRIPTION                                     |
!--------------------|-------------------------------------------------|
! mutx               | mu                                              |
! bspqtx             | Bs+q                                            |
! fiptx              | big p & phi'                                    |
!----------------------------------------------------------------------
!
#endif

      real, pointer, dimension (:,:,:) :: mutx  => null() ! effective dimensions are (LDIST_SHAPE,  l_nk+1)
      real, pointer, dimension (:,:,:) :: bspqtx=> null() ! effective dimensions are (LDIST_SHAPE,0:l_nk+1)
      real, pointer, dimension (:,:,:) :: fiptx => null() ! effective dimensions are (LDIST_SHAPE,0:l_nk+1)

      character(len=8) :: gmmk_bspqtx_s, gmmk_mutx_s, gmmk_fiptx_s
      common /vtx_n_gmm/ gmmk_bspqtx_s, gmmk_mutx_s, gmmk_fiptx_s

