!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
!**s/r step_close
!
!
      subroutine step_close ( F_step, F_bkup_L, F_dgtflt_L, F_finalstep )
      implicit none
!
      logical F_bkup_L, F_dgtflt_L
      integer F_step, F_finalstep
!
!author
!     Michel Desgagne  -  Spring 2013
!
!revision
! v4_50 - Desgagne M.       - Initial version
!
#include "step.cdk"
#include "lun.cdk"
#include "init.cdk"

      logical flag
!
!     ---------------------------------------------------------------
!
      if (Lun_out.gt.0) write(Lun_out,3000) F_step
!
!     * Must we write a restart file?
!
      F_bkup_L = mod( Step_kount, Step_bkup ).eq.0

      if ( F_step.eq.Step_spinphy ) call wrrstrt_phy (.true.)

      flag= F_dgtflt_L .and. F_step.ge.(Init_dfnp-1)/2
      if ( (F_step.ne.F_finalstep) .and. (.not.flag) ) &
           call out_launchpost2 (.false.,.false.)
      
      call gemtim4 ( Lun_out, 'CURRENT TIMESTEP', .false. )

 3000 format(/,'THE TIME STEP ',I8,' IS COMPLETED')
!
!     ---------------------------------------------------------------
!
      return
      end
