!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

#include "model_macros_f.h"
      subroutine itf_ens_hzd ( F_ut1, F_vt1, F_tt1, DIST_DIM, Nk )
      implicit none
#include <arch_specific.hf>
!
      integer DIST_DIM, Nk
      real    F_ut1(DIST_SHAPE,Nk), F_vt1(DIST_SHAPE,Nk), F_tt1(DIST_SHAPE,Nk+1)
!
!author  Lubos Spacek - February 2010
!     
!revision
! v4_12 - Spacek L.            - initial version 
! v4_20 - Spacek L./Gagnon N.  - Modify the logic of the main switches (Ens_conf, 
!                                Ens_skeb_conf and Ens_ptp_conf) to not impact 
!                                non-ensemble users.
!	
#include "gmm.hf"
#include "glb_ld.cdk"
#include "geomg.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "ens_gmm_var.cdk"
!
      type(gmm_metadata) :: mymeta
      character*4 mode
      logical done,ens_skeb_conf,ens_ptp_conf,ens_conf
      integer n,cnt,i,j,k,istat
      real dummy
      real con(YDIST_SHAPE)
      data mode,done /"SAVE",.false./
      save mode,done,ens_skeb_conf,ens_ptp_conf,ens_conf
      logical, external :: ens_get
!     _________________________________________________________________
      ens_conf = ens_get('Ens_conf')
      if (.not.ens_conf) return

      if (.not.done) then
         ens_skeb_conf = ens_get('Ens_skeb_conf').And.ens_conf
         ens_ptp_conf  = ens_get('Ens_ptp_conf') .And.ens_conf
      endif
!
! Case I: ens_skeb_conf = .true.
!
      if (ens_skeb_conf) then

         istat = gmm_get(gmmk_difut1_s,difut1,mymeta)
         if (GMM_IS_ERROR(istat))write(*,6000)'difut1'
         istat = gmm_get(gmmk_difvt1_s,difvt1,mymeta)
         if (GMM_IS_ERROR(istat))write(*,6000)'difvt1'
         istat = gmm_get(gmmk_ugwdt1_s,ugwdt1,mymeta)
         if (GMM_IS_ERROR(istat))write(*,6000)'ugwdt1'
         istat = gmm_get(gmmk_vgwdt1_s,vgwdt1,mymeta)
         if (GMM_IS_ERROR(istat))write(*,6000)'vgwdt1'

         if (mode == "SAVE") then
            difut1 = F_ut1
            difvt1 = F_vt1
            goto 999
         endif

         !TODO: re-code to use getindx2 instead of p_bvol_top/volnm
         if (mode == "CENS") then
            print*, 'MUST FIX phy_tend - ABORT in itf_ens_hzd'
            stop
!!$            con(:)  = cos(geomg_y_8(:)) / Dcst_rayt_8
!!$            cnt=0
!!$            do n=1,p_bvol_top
!!$               if (volnm(n)(1:5) .eq. 'PHYTD') then
!!$                  cnt = cnt + 1
!!$                  if (trim(volnm(n)(7:)).eq.'UGWD') then
!!$                     do k= 1, l_nk
!!$                     do j= 1, l_nj
!!$                     do i= 1, l_ni
!!$!                        ugwdt1(i,j,k) = Cstv_dt_8*phy_tend(i,j,k,cnt)*con(j)
!!$                     end do
!!$                     end do
!!$                     end do
!!$                  endif
!!$                  if (trim(volnm(n)(7:)).eq.'VGWD') then
!!$                     do k= 1, l_nk
!!$                     do j= 1, l_nj
!!$                     do i= 1, l_ni
!!$!                        vgwdt1(i,j,k) = Cstv_dt_8*phy_tend(i,j,k,cnt)*con(j)
!!$                     end do
!!$                     end do
!!$                     end do
!!$                  endif
!!$               endif
!!$            end do
!!$            call itf_phy_uvgridscal (ugwdt1,vgwdt1,LDIST_DIM, l_nk, .false. )
!!$            difut1 = F_ut1 - difut1
!!$            difvt1 = F_vt1 - difvt1
!!$            call ens_filter (ugwdt1,vgwdt1,difut1,difvt1, F_ut1,F_vt1,F_tt1, DIST_DIM, Nk)
         endif
!
! Case II: ens_skeb_conf = .false. however, in the same time
!          ens_ptp_conf  = .true.
!
      elseif(ens_ptp_conf.and..not.ens_skeb_conf)then
         if (mode == "SAVE") then
            goto 999
         elseif (mode == "CENS") then
            call ens_filter (dummy,dummy,dummy,dummy, F_ut1,F_vt1,F_tt1, DIST_DIM, Nk)
         endif
      endif
!
! Case III: default (no action)
!
 999  if (mode == "SAVE") then
         mode = "CENS"
      else
         mode = "SAVE"
      endif
!
      done = .true.
!     _________________________________________________________________
!
 6000 format('itf_ens_hzd at gmm_get(',A,')')

      return
      end
