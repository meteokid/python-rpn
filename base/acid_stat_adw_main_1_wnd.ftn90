!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r acid_stat_adw_main_1_wnd - gblstat for acid test for s/r adw_main_1_wnd

#include "model_macros_f.h"
!
      subroutine acid_stat_adw_main_1_wnd (F_uth,F_flag)
      implicit none
      real    F_uth(LDIST_SHAPE,G_nk)
      integer F_flag
      character(len=80) :: flag_S
!
!author
!     Andre Plante
!     
!revision
!
!language
!     fortran 77
!
!object
!     glbstat for LAM acid test
!     Note : the acid test is conducted with one CPU.
!
!implicits
#include "glb_ld.cdk"
#include "acid.cdk"
!     
      if(F_flag.eq.1)then
         call glbstat (F_uth,'Uth',LDIST_DIM,G_nk, &
              1+acid_i0,G_ni-acid_in-1, &
              1+acid_j0,G_nj-acid_jn, &
              1,G_nk)
      elseif(F_flag.eq.2)then         
         call glbstat (F_uth,'Uth',LDIST_DIM,G_nk, &
              3+acid_i0,G_ni-acid_in-2, &
              1+acid_j0,G_nj-acid_jn, &
              1,G_nk)
      else
         write(flag_S,'(I)') F_flag
         call handle_error(-1,'acid_stat_adw_main_1_wnd','error with flag='//flag_S)
      endif

      return
      
      end
