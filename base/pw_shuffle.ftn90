!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r pw_update - Update physical quantities
!
!
      subroutine pw_shuffle
      implicit none
#include <arch_specific.hf>
!
!author
!     Michel Desgagne - May 2010
!
!revision
! v4_14 - Desgagne, M.     - Initial revision
!
#include "gmm.hf"
#include "pw.cdk"
#include "tr3d.cdk"
#include "step.cdk"
!
      integer istat,fld,i
      real, dimension(:,:,:), pointer :: plus,minus
      character(len=GMM_MAXNAMELENGTH), dimension(6,2) :: pw_list
      type(gmm_metadata) :: mymeta
!
!     Set list of fields to shuffle
      pw_list = transpose(reshape( (/ &
           gmmk_pw_uu_moins_s,gmmk_pw_uu_plus_s, &
           gmmk_pw_vv_moins_s,gmmk_pw_vv_plus_s, &
           gmmk_pw_ww_moins_s,gmmk_pw_ww_plus_s, &
           gmmk_pw_tt_moins_s,gmmk_pw_tt_plus_s, &
           gmmk_pw_pm_moins_s,gmmk_pw_pm_plus_s, &
           gmmk_pw_gz_moins_s,gmmk_pw_gz_plus_s/), (/size(pw_list,dim=2),size(pw_list,dim=1)/)))
!
!     Reset physical world dynamics tendencies for the new timestep
      nullify(pw_uu_dyn,pw_vv_dyn,pw_ww_dyn,pw_tt_dyn)
      istat = gmm_get (gmmk_pw_uu_dyn_s, pw_uu_dyn, mymeta)
      istat = gmm_get (gmmk_pw_vv_dyn_s, pw_vv_dyn, mymeta)
      istat = gmm_get (gmmk_pw_ww_dyn_s, pw_ww_dyn, mymeta)
      istat = gmm_get (gmmk_pw_tt_dyn_s, pw_tt_dyn, mymeta)
      pw_uu_dyn = 0.
      pw_vv_dyn = 0.
      pw_ww_dyn = 0.
      pw_tt_dyn = 0.
!     ________________________________________________________________
!     Assign time-plus values to time-minus  Do not gmm_shuffle() because
!     time-plus value also need to be valid at the start of the step for
!     computing the dynamics-component tendencies.
      do fld=1,size(pw_list,dim=1)
         nullify(plus,minus)
         istat = gmm_get(pw_list(fld,1),minus,mymeta)
         istat = gmm_get(pw_list(fld,2),plus,mymeta)
         minus = plus
      enddo
!     ________________________________________________________________
!
!     Copy initial tracer values from time-plus to time-minus

      if (Step_kount == 0) then
         do i=1,Tr3d_ntr
            nullify(plus,minus)
            istat = gmm_get('TR/'//trim(Tr3d_name_S(i))//':M',minus,mymeta)
            istat = gmm_get('TR/'//trim(Tr3d_name_S(i))//':P',plus,mymeta)
            minus = plus
         enddo
      endif

      return
      end
