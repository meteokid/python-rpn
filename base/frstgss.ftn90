!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r frstgss - Copy data from time level t1 that will be used as a
!                first guess at time level t0
!
      subroutine frstgss ()
      implicit none
#include <arch_specific.hf>
!
!author 
!     Michel Roch - rpn - nov 1993
!
!revision
! v2_00 - Desgagne M.       - initial MPI version
! v3_21 - Tanguay M.        - Revision Openmp
! v4_05 - Lepine M.         - VMM replacement with GMM
!
#include "gmm.hf"
#include "vt0.cdk"
#include "vt1.cdk"

      type(gmm_metadata) :: mymeta
      integer :: istat
      real, pointer, dimension(:,:,:) :: tr0,tr1
!
!     ---------------------------------------------------------------
!
      istat = gmm_get('TR/HU:M',tr0,mymeta)
      istat = gmm_get('TR/HU:P',tr1,mymeta)
      tr0   = tr1

      istat = gmm_get(gmmk_tt0_s,tt0,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(tt0)'
      istat = gmm_get(gmmk_st0_s,st0,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(st0)'
      istat = gmm_get(gmmk_zdt0_s,zdt0,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(zdt0)'
      istat = gmm_get(gmmk_tt1_s,tt1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(tt1)'
      istat = gmm_get(gmmk_st1_s,st1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(st1)'
      istat = gmm_get(gmmk_zdt1_s,zdt1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(zdt1)'
      istat = gmm_get(gmmk_wt0_s,wt0,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(wt0)'
      istat = gmm_get(gmmk_wt1_s,wt1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(wt1)'
      istat = gmm_get(gmmk_ut0_s,ut0,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(ut0)'
      istat = gmm_get(gmmk_ut1_s,ut1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(ut1)'
      istat = gmm_get(gmmk_vt0_s,vt0,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(vt0)'
      istat = gmm_get(gmmk_vt1_s,vt1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(vt1)'
      istat = gmm_get(gmmk_qt0_s,qt0,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(qt0)'
      istat = gmm_get(gmmk_qt1_s,qt1,mymeta)
      if (GMM_IS_ERROR(istat)) print *,'frstgss ERROR at gmm_get(qt1)'

      tt0 = tt1 ; zdt0 = zdt1 ; wt0 = wt1
      ut0 = ut1 ; vt0  = vt1  ; qt0 = qt1
      st0 = st1
!
!     ---------------------------------------------------------------
!
      return
      end


