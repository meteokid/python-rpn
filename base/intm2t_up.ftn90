!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r intm2t - upward vertical integration of variable ne momentum level.
!
#include "model_macros_f.h"
!
      subroutine intm2t_up (F_gg_t, F_ff_m, F_con, F_hz_m_8, DIST_DIM,Nk, &
                            F_i0,F_in,F_j0,F_jn,F_k0)
!
      implicit none
!
      integer DIST_DIM, Nk,F_i0,F_in,F_j0,F_jn,F_k0
      real F_gg_t(DIST_SHAPE,Nk+1),F_ff_m(DIST_SHAPE,Nk),F_con
      real*8  F_hz_m_8(Nk)
!
!author
!     A. Plante - cmc - aug 2005 (based on hatoprg.ftn from J. Cote)
!
!revision
!     R. McTaggart-Cowan - apply upwards integration
!
!object  UPWARD vertical integration for momentum variable. The output is on
!        the thermodynamic levels.
!
!                 / z(k)
!        G   =  C |        F dz 
!         k       / z(sfc)
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
!  F_gg_t      O          resulting vertical integration (on thermo levels)
!  F_ff_m      I          input field to be integrated   (on momentum levels)
!  F_con       I          mutiplication coefficient 
!  F_hz_m_8    I          intervals in z-direction (on momentum levels)
!----------------------------------------------------------------
!
!implicits 
#include "glb_ld.cdk"
!
      integer i, j, k
      real w1(DIST_SHAPE,2)
      real*8  ccc 
!
!notes
!     The computation is done by horizontal slices.  The layer depth
!     must be negative because the differences are computed from the 
!     top (k=1) and are applied here in the opposite direction.
!*
!     __________________________________________________________________
!
      do j=F_j0,F_jn
      do i=F_i0,F_in
         w1(i,j,1) = 0.0
      end do
      end do

      do k=G_nk,1,-1
         ccc = F_con*(-F_hz_m_8(k))
         do j=F_j0,F_jn
         do i=F_i0,F_in
            w1(i,j,2) = ccc*F_ff_m(i,j,k)
            F_gg_t(i,j,k+1) = w1(i,j,1)
            w1(i,j,1) = w1(i,j,1) + w1(i,j,2)
         end do
         end do
      end do

      do j=F_j0,F_jn
      do i=F_i0,F_in
         F_gg_t(i,j,1) = w1(i,j,1)
      end do
      end do


      return
      end
