!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r yyg_bacwinds - YY exchange for variables u,v,zd
!
#include "model_macros_f.h"
!
      subroutine yyg_bacwinds ( F_u, F_v, F_zd, DIST_DIM, Nk )
      implicit none
#include <arch_specific.hf>
!
      integer  DIST_DIM, Nk 
! 
      real     F_u  (DIST_SHAPE,  Nk)  ,  F_v (DIST_SHAPE,  Nk), &
               F_zd (DIST_SHAPE,  Nk+1)
!
!author
!     Lee/Qaddouri  - Nov 2009
!
!revision
! v4_40 - Lee/Qaddouri      - initial MPI version 
!
!object
!     Exchange the Yin-Yang boundary conditions for U,V,Zd after bacp_2
!
!arguments: F_u (ut0), F_v (vt0), F_zd (zdt0)
!
!implicits
#include "glb_ld.cdk"
#include "geomg.cdk"
#include "lun.cdk"
!
      integer i, j, k
!     temp variables to manipulate winds for Yin-Yang
      real tempu   (DIST_SHAPE,  l_nk)
      real tempu0  (DIST_SHAPE,  l_nk)
      real tempv   (DIST_SHAPE,  l_nk)
      real tempv0  (DIST_SHAPE,  l_nk)
      real tempzd  (DIST_SHAPE,  l_nk)
!
!     __________________________________________________________________
!
      if (Lun_debug_L) write(Lun_out,1000)

!$omp parallel private(i,j)
!$omp do
      do k= 1,l_nk
         do j= 1, l_nj
         do i= 1, l_ni
            tempzd(i,j,k)=F_zd (i,j,k)
         enddo
         enddo

         do j= 1, l_nj
         do i= 1, l_niu
            tempu(i,j,k)=F_u (i,j,k)*Geomg_invcy_8(j)
            tempu0(i,j,k)=tempu (i,j,k)
         enddo
         enddo
         do j= 1, l_njv
         do i= 1, l_ni
            tempv(i,j,k)=F_v (i,j,k)*Geomg_invcyv_8(j)
            tempv0(i,j,k)=tempv (i,j,k)
         enddo
         enddo
      enddo
!$omp enddo
!$omp end parallel

      call rpn_comm_xch_halo(tempzd,LDIST_DIM,l_ni,l_nj,l_nk, &
                  G_halox,G_haloy,G_periodx,G_periody,l_ni,0 )
      call yyg_scalbc(F_zd,tempzd,LDIST_DIM,l_nk)

      call rpn_comm_xch_halo(tempu,LDIST_DIM,l_niu,l_nj,l_nk, &
                  G_halox,G_haloy,G_periodx,G_periody,l_ni,0 )
      call rpn_comm_xch_halo(tempv,LDIST_DIM,l_ni,l_njv,l_nk, &
                  G_halox,G_haloy,G_periodx,G_periody,l_ni,0 )
      call  yyg_vecbc1(tempu0,tempu,tempv,LDIST_DIM,l_nk)
      call  yyg_vecbc2(tempv0,tempv,tempu,LDIST_DIM,l_nk)

!$omp parallel private(i,j)
!$omp do
      do k= 1,l_nk
         do j= 1, l_nj
         do i= 1, l_niu
            F_u   (i,j,k) =  tempu0(i,j,k)*Geomg_cy_8(j)
         enddo
         enddo

         do j= 1, l_njv
         do i= 1, l_ni
            F_v(i,j,k)   =  tempv0(i,j,k)*Geomg_cyv_8(j)
         enddo
         enddo
      enddo
!$omp enddo
!$omp end parallel
!     __________________________________________________________________
!
1000  format (5X,'BACK SUBSTITUTION: (S/R BAC_YYWINDZD)')
!
      return
      end


