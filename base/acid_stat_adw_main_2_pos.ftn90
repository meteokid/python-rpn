!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r acid_stat_adw_main_2_pos - gblstat for acid test

#include "model_macros_f.h"
!
      subroutine acid_stat_adw_main_2_pos (F_xth,F_xcth,F_wrkx1, &
           F_i0,F_in,F_j0,F_jn,F_nk,F_flag)
      implicit none
#include <arch_specific.hf>
!implicits
#include "glb_ld.cdk"
#include "acid.cdk"
      integer F_i0,F_in,F_j0,F_jn,F_flag,F_nk
      character(len=80) :: flag_S
      real F_xth(LDIST_SHAPE,F_nk),F_xcth(LDIST_SHAPE,F_nk), &
           F_wrkx1(G_ni*G_nj*F_nk)
!
!author
!     Andre Plante
!     
!revision
!
!language
!     fortran 77
!
!object
!     glbstat for LAM acid test
!     Note : the acid test is conducted with one CPU. 
!
!     
      if(F_flag.eq.1)then
         call glbstat (F_xth,'Xth',1,l_ni,1,l_nj,F_nk, &
              7+acid_i0,G_ni-6-acid_in, &
              7+acid_j0,G_nj-6-acid_jn, &
              1,1)
         call glbstat (F_xcth,'Xcth',1,l_ni,1,l_nj,F_nk, &
              7+acid_i0,G_ni-6-acid_in, &
              7+acid_j0,G_nj-6-acid_jn, &
              1,1)
      elseif(F_flag.eq.2)then         
         call glbstat (F_wrkx1,'wrkX',1,l_ni,1,l_nj,F_nk, &
              7+acid_i0,G_ni-6-acid_in, &
              7+acid_j0,G_nj-6-acid_jn, &
              1,F_nk)
      elseif(F_flag.eq.3)then
         call glbstat (F_xth,'Xth3',1,l_ni,1,l_nj,F_nk, &
              7+acid_i0,G_ni-6-acid_in, &
              7+acid_j0,G_nj-6-acid_jn, &
              1,1)
         call glbstat (F_xcth,'Xcth',1,l_ni,1,l_nj,F_nk, &
              7+acid_i0,G_ni-6-acid_in, &
              7+acid_j0,G_nj-6-acid_jn, &
              1,1)         
      elseif(F_flag.eq.4)then
         call glbstat (F_wrkx1 ,'x1',1,G_ni,1,G_nj,F_nk, &
              F_i0+acid_i0,F_in-acid_in, &
              F_j0+acid_j0,F_jn-acid_jn, &
              1,F_nk)
      else
         write(flag_S,'(I7)') F_flag
         call handle_error(-1,'acid_stat_adw_main_2_pos','error with flag='//flag_S)
      endif

      return
      
      end
