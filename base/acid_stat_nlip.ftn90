!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r acid_stat_nlip_2 - gblstat for acid test

#include "model_macros_f.h"
!
      subroutine acid_stat_nlip_2(F_t,F_BsPq,F_nu,F_k,F_flag)
!
      implicit none
#include <arch_specific.hf>
!
      real F_t(LDIST_SHAPE,G_nk+1),F_BsPq(LDIST_SHAPE,0:G_nk+1), &
           F_nu(LDIST_SHAPE,G_nk)
!     
      integer F_flag,F_k
!
!author
!     Andre Plante
!     
!revision
!
!language
!     fortran 77
!
!object
!     glbstat for LAM acid test
!     Note : the acid test is conducted with one CPU.
!
!implicits
#include "lun.cdk"
#include "schm.cdk"
#include "glb_ld.cdk"
#include "acid.cdk"
!     
      if(F_flag.eq.1)then
         print *,'nlip_2:bef coriolis: acid k=',F_k
         call glbstat (F_t,'T',LDIST_DIM,G_nk+1, &
              8+acid_i0,G_ni-7-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              F_k,F_k+1)
         call glbstat (F_BsPq,'BS',LDIST_DIM,G_nk+2, &
              8+acid_i0,G_ni-7-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              F_k+1,F_k+1)
         call glbstat (F_nu,'NU',LDIST_DIM,G_nk, &
              8+acid_i0,G_ni-8-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              F_k,F_k)
      elseif(F_flag.eq.2)then
         print *,'nlip_2:aft coriolis'
         call glbstat (F_nu,'NU',LDIST_DIM,G_nk, &
              8+acid_i0,G_ni-8-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              F_k,F_k)
      elseif(F_flag.eq.3)then
         print *,'nlip_2:add nonhydro k= ',F_k
         call glbstat (F_nu,'NU',LDIST_DIM,G_nk, &
              8+acid_i0,G_ni-8-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              F_k,F_k)
      elseif(F_flag.eq.4)then
         print *,'after filling zeros'
         call glbstat (F_nu,'NU',LDIST_DIM,G_nk, &
              8+acid_i0,G_ni-8-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              1,G_nk)
      else
         print*,'flag=',F_flag
         call handle_error(-1,'acid_stat_nlip_2','acid_stat_nlip_2 : error with flag')
      endif

      return
      
      end
