!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r acid_stat_nli - gblstat for acid test

#include "model_macros_f.h"
!
      subroutine acid_stat_nli(F_qt0,F_st0,F_bspqtx,F_nl_u,F_nl_v, &
           F_nl_t,F_nl_c,F_nl_f,F_flag)
!
      implicit none
!
      real F_qt0(LDIST_SHAPE,0:G_nk+1),F_st0(LDIST_SHAPE), &
           F_bspqtx(LDIST_SHAPE,0:G_nk+1), &
           F_nl_u(LDIST_SHAPE,G_nk),F_nl_v(LDIST_SHAPE,G_nk), &
           F_nl_t(LDIST_SHAPE,G_nk+1),F_nl_c(LDIST_SHAPE,G_nk), &
           F_nl_f(LDIST_SHAPE,G_nk+1)
!     
      integer F_flag
!
!author
!     Andre Plante
!     
!revision
!
!language
!     fortran 77
!
!object
!     glbstat for LAM acid test
!     Note : the acid test is conducted with one CPU.
!
!implicits
#include "lun.cdk"
#include "schm.cdk"
#include "glb_ld.cdk"
#include "acid.cdk"
!     
      if(F_flag.eq.1)then
         if(.not. Schm_hydro_L)then
            call glbstat (F_qt0,'qt0',LDIST_DIM,G_nk+2, &
                 8+acid_i0,G_ni-8-acid_in, &
                 8+acid_j0,G_nj-8-acid_jn, &
                 1,G_nk+2)
         endif
         call glbstat (F_st0,'st0',LDIST_DIM,1, &
              8+acid_i0,G_ni-8-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              1,1)
      elseif(F_flag.eq.2)then
         call glbstat (F_nl_u,'NU',LDIST_DIM,G_nk, &
              8+acid_i0,G_ni-8-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              1,G_nk)
         call glbstat (F_nl_v,'NV',LDIST_DIM,G_nk, &
              8+acid_i0,G_ni-8-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              1,G_nk)
         call glbstat (F_nl_t,'NT',LDIST_DIM,G_nk, &
              8+acid_i0,G_ni-8-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              1,G_nk)
         print *,'nl_c  range at i=8 to G_ni-8, j=8 to G_nj-8 will not match due to hor div wind'         
         call glbstat (F_nl_c,'NC',LDIST_DIM,G_nk, &
              8+acid_i0,G_ni-8-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              1,G_nk)
         print *,'nl_c smaller range at i=9 to G_ni-8, j=9 to G_nj-8 does match'
         call glbstat (F_nl_c,'NC1',LDIST_DIM,G_nk, &
              9+acid_i0,G_ni-8-acid_in, &
              9+acid_j0,G_nj-8-acid_jn, &
              1,G_nk)
         call glbstat (F_nl_f,'NF',LDIST_DIM,G_nk, &
              8+acid_i0,G_ni-8-acid_in, &
              8+acid_j0,G_nj-8-acid_jn, &
              1,G_nk)
      else
         print*,'flag=',F_flag
         call handle_error(-1,'acid_stat_nli','acid_stat_nli : error with flag')
      endif

      return
      
      end
