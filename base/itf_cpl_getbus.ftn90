!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r itf_cpl_getbus -
!
#include "model_macros_f.h"
!
      subroutine itf_cpl_getbus ( F_busper, F_busvol, F_jdo)
      implicit none
!
      integer F_jdo
      real F_busper(*), F_busvol(*)
!
!authors    Michel Desgagne - Spring 2008
! 
!revision
! v3_31 - Desgagne M.       - initial MPI version
!*
!
!implicits
#include "glb_ld.cdk"
#include "itf_phy_buses.cdk"
#include "itf_cpl.cdk"
!
      integer soit,lght,cpl_flusolis,cpl_fdsi,cpl_rt
!*
!     ---------------------------------------------------------------
!
      call getindx ('FLUSOLIS',  'P', cpl_flusolis, lght, soit)
      call getindx ('FDSI'    ,  'P', cpl_fdsi,     lght, soit)
      call getindx ('RT'      ,  'V', cpl_rt,       lght, soit)
!
      call itf_phy_unfold ( atm_local_busou(1,1,5), &
                            f_busper(cpl_flusolis), &
                            F_jdo, 1, 1, 1,l_ni,1,l_nj )
      call itf_phy_unfold ( atm_local_busou(1,1,6), &
                            F_busper(cpl_fdsi    ), &
                            F_jdo, 1, 1, 1,l_ni,1,l_nj )
      call itf_phy_unfold ( atm_local_busou(1,1,7), &
                            F_busvol(cpl_rt      ), &
                            F_jdo, 1, 1, 1,l_ni,1,l_nj )
!
!     ---------------------------------------------------------------
!
      return
      end

      
      
