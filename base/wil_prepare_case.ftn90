!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer, 
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms 
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer 
!version 3 or (at your option) any later version that should be found at: 
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html 
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software; 
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec), 
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**s/r wil_prepare_case - Set initial conditions for the given Williamson's case
!
#include "model_macros_f.h"
!
      subroutine wil_prepare_case 
!
      implicit none
!
!author M.Tanguay 
!
!revision
! v4_04 - Tanguay M.        - initial MPI version
! v4_04 - Tanguay M.        - Williamson's cases   
!
!object
!     see id section
!
!implicits
#include "lun.cdk"
#include "grd.cdk"
#include "glb_ld.cdk"
#include "ptopo.cdk"
#include "dcst.cdk"
#include "wil_williamson.cdk"
!
!     ---------------------------------------------------------------
!
      integer err
      real, pointer, dimension (:,:) :: UIC12,VIC12,PIC12,DIC12,EIC12,MOUNT
      real, pointer, dimension (:,:) :: WS1,WS2,WS3,WS4,WS5
!
!     ---------------------------------------------------------------
      if (.NOT.Grd_gauss_L) then
          if (Lun_out.gt.0)  &
              write (Lun_out,*) 'Set GAUSSIAN grid for WILLIAMSONs cases (See WIL_GLON,WIL_GLAT)' 
              call handle_error(-1,'wil_prepare_case','Set GAUSSIAN grid for WILLIAMSONs cases')
      endif
!
!     NOTE: All PE set Williamson's case. There is a glbdist in wil_gem_init
!     ---------------------------------------------------------------------- 
!
      if (Lun_out.gt.0) write (Lun_out,1000)
!
          call wil_comdecks (G_ni,G_nj,Lun_out,Dcst_grav_8,Dcst_rayt_8,Dcst_pi_8,Dcst_omega_8)
!
          call wil_settings
!
          allocate( UIC12(G_ni+2,G_nj), VIC12(G_ni+2,G_nj), PIC12(G_ni+2,G_nj), &
                    DIC12(G_ni+2,G_nj), EIC12(G_ni+2,G_nj), MOUNT(G_ni+2,G_nj),  &
                    WS1  (G_ni+2,G_nj), WS2  (G_ni+2,G_nj), WS3  (G_ni+2,G_nj), &
                    WS4  (G_ni+2,G_nj), WS5  (G_ni+2,G_nj), STAT=err) 
!
          MOUNT = 0.
!
!         Routine to initialize Williamson's cases
!         ----------------------------------------
          call wil_case_init (UIC12,VIC12,PIC12,DIC12,EIC12,MOUNT)
!
!         Routine to initialize variables at t=0
!         --------------------------------------
          call wil_anlytc (0.0,WS1,WS2,WS3,WS4,WS5, &
                           UIC12,VIC12,PIC12,DIC12,EIC12,MOUNT, &
                           Williamson_case,Williamson_alpha,G_ni,G_nj, &
                           Williamson_MAXH_Read,Williamson_NALPH_Read)
!
          call wil_gem_init (WS1,WS2,WS3,MOUNT)
!
          deallocate (UIC12,VIC12,PIC12,DIC12,EIC12,MOUNT,WS1,WS2,WS3,WS4,WS5)
!
!     ---------------------------------------------------------------
!
 1000 format(/,'INITIAL CONDITIONS FOR THE GIVEN WILLIAMSONs CASE (S/R WIL_PREPARE_CASE)',/,72('='))
!
      return
      end
