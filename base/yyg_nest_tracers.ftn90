!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------
!**s/r yyg_nest_tracers - for interpolating and nesting Yin-Yang boundary conditions
!
#include "model_macros_f.h"
!
      subroutine yyg_nest_tracers ()
      implicit none
#include <arch_specific.hf>
!
!author 
!     Michel Desgagne   - Spring 2006
!
!revision
! v4_40 - Lee/Qaddouri  - adapt (nest_bcs) for Yin-yang (called every timestep)
! v4_50 - Lee V.        - use cubic mono interp for tracers
!
!object
!
!arguments
!       none
!
!implicits
#include "gmm.hf"
#include "glb_ld.cdk"
#include "nest.cdk"
#include "tr3d.cdk"
#include "lun.cdk"
!
      type(gmm_metadata) :: mymeta
      character(len=GMM_MAXNAMELENGTH) :: tr_name
      integer err,i,j,k,nvar,n,istat
      real, pointer, dimension(:,:,:) :: tr,tr1

!----------------------------------------------------------------------
!
      if (Lun_debug_L) write (Lun_out,1001)
!
      do n=1,Tr3d_ntr
         tr_name = 'NEST/'//trim(Tr3d_name_S(n))//':C'
         istat = gmm_get(tr_name,tr,mymeta)
         tr_name = 'TR/'//trim(Tr3d_name_S(n))//':M'
         istat = gmm_get(tr_name,tr1,mymeta)

         do k= 1, G_nk+2
         do j= 1, l_nj
         do i= 1, l_ni
            tr (i,j,k) = tr1(i,j,k)
         enddo
         enddo
         enddo
         call rpn_comm_xch_halo(tr, LDIST_DIM,l_ni,l_nj,G_nk+2, &
                  G_halox,G_haloy,G_periodx,G_periody,l_ni,0 )
         call yyg_scalbc_mono(tr1,tr,LDIST_DIM,G_nk+2)
      enddo

!
!----------------------------------------------------------------------
 1001 format(3X,'NEST YY Boundary ConditionS: (S/R yyg_nest_tracers)')
!
      return
      end
