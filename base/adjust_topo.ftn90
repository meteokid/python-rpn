!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!** s/r adjust_topo -
!
#include "model_macros_f.h"
!
      subroutine adjust_topo (F_topo, F_dtopo, F_target, F_lowres, F_blend_L, &
                                                           DIST_DIM, ni, nj )
      use nest_blending, only: nest_blend
      implicit none
#include <arch_specific.hf>
!
      logical F_blend_L
      integer DIST_DIM, ni, nj
      real    F_topo(DIST_SHAPE), F_dtopo (DIST_SHAPE)
      real    F_target(ni,nj), F_lowres(ni,nj)
!
!authors
!      M.Desgagne   -  Spring 2010
!
!revision
! v4_13 - Plante A.         - initial version 

#include "glb_ld.cdk"
#include "schm.cdk"
#include "vtopo.cdk"
!
      integer i,j

!     ________________________________________________________________
!
      if (.not. Schm_topo_L) F_target = 0.
!
      if (G_lam .and. F_blend_L) then
         do j=1,pil_s
         do i=1,l_ni
            F_target(i,j) = F_lowres(i,j)
         end do
         end do
         do j=l_nj-pil_n+1,l_nj
         do i=1,l_ni
            F_target(i,j) = F_lowres(i,j)
         end do
         end do
         do i=1,pil_w
         do j=pil_s+1,l_nj-pil_n
            F_target(i,j) = F_lowres(i,j)
         end do
         end do
         do i=l_ni-pil_e+1,l_ni
         do j=pil_s+1,l_nj-pil_n
            F_target(i,j) = F_lowres(i,j)
         end do
         end do
!
         call nest_blend (F_target, F_lowres, 1,l_ni,1,l_nj,'M',level=G_nk+1)
!
      endif
!
      F_topo (1:l_ni,1:l_nj) = F_target(1:l_ni,1:l_nj)

      if (Vtopo_L) then
         F_target (1:l_ni,1:l_nj) = F_lowres (1:l_ni,1:l_nj)
         F_dtopo  (1:l_ni,1:l_nj) = F_topo  (1:l_ni,1:l_nj) - F_target(1:l_ni,1:l_nj)
         F_topo   (1:l_ni,1:l_nj) = F_target(1:l_ni,1:l_nj)
      endif
!     ________________________________________________________________
!
      return
      end

