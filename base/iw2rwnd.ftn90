!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r iw2rwnd - Image winds to real winds and vice versa
!
#include "model_macros_f.h"
!
      subroutine iw2rwnd ( F_u,  F_v, DIST_DIM, Nk, mode )
      implicit none
!
      integer DIST_DIM, Nk, mode
      real F_u(DIST_SHAPE,Nk), F_v (DIST_SHAPE,Nk)
!
!author
!     Michel Desgagne  - Spring 2008
!
!revision
! v3_31 - Desgagne M.       - initial version 
! v4_04 - Plante A.         - copy from v3_31
! v4_11 - Lee V.            - l_niu for U, l_njv for V
!
!implicits
#include "glb_ld.cdk"
#include "dcst.cdk"
#include "geomg.cdk"
!
      integer i, j, k
      real*8 c1
!
!     __________________________________________________________________
!
      if (mode.eq.1) then

!$omp parallel private(c1)
!$omp do
      do k=1,G_nk
         do j=1,l_nj
            c1 = Dcst_rayt_8 / geomg_cy_8(j)
            do i=1,l_niu
               F_u(i,j,k) = F_u(i,j,k) * c1
            end do
         end do
         do j=1,l_njv
            c1 = Dcst_rayt_8 / geomg_cy_8(j)
            do i=1,l_ni
               F_v(i,j,k) = F_v(i,j,k) * c1
            end do
         end do
      end do
!$omp enddo
!$omp end parallel

      else

!$omp parallel private(c1)
!$omp do
      do k=1,G_nk
         do j=1,l_nj
            c1 = geomg_cy_8(j) / Dcst_rayt_8
            do i=1,l_niu
               F_u(i,j,k) = F_u(i,j,k) * c1
            end do
         end do
         do j=1,l_njv
            c1 = geomg_cy_8(j) / Dcst_rayt_8
            do i=1,l_ni
               F_v(i,j,k) = F_v(i,j,k) * c1
            end do
         end do
      end do
!$omp enddo
!$omp end parallel
!
      endif
!
!     __________________________________________________________________
!
      return
      end
