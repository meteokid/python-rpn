!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r e_specanal2 - extraction of analysis levels
!
#include "model_macros_f.h"
!
      subroutine e_specanal2 (current_date)
      implicit none
#include <arch_specific.hf>
!
      integer current_date
!author 
!    Michel Desgagne - Fall 2012
!
!revision
! v4_50 - Desgagne M.         - initial version
!
#include "e_anal.cdk"
#include "e_fu.cdk"
#include "e_grids.cdk"
#include "grd.cdk"
#include "filename.cdk"
#include "pilot.cdk"

      integer,parameter :: PRESVAR_MAX = 6, nlist = 2000
      character*4 var_uu,names(10)
      character*6 presvar_S(PRESVAR_MAX)
      character*8 vcode_S
      logical,save     :: done = .false.
      integer,external :: px_param
      integer err, vcode, list(nlist), istat, k, nka, ni1
      real*8  presvar_8(PRESVAR_MAX)
      real*8, dimension(:), allocatable:: hyb_8,hyb_t_8
!
! ---------------------------------------------------------------------
!
      write (6, 1001)

      call e_fstouv ('P0', current_date, Grd_typ_S(1:1), &
                                  pilot_dir, e_fu_anal)

      names(1)= 'UU' ; names(2)= 'UT1'
      call e_whichvar (names,2,e_fu_anal,current_date,var_uu)
      names(1)= 'VT' ; names(2)= 'TT'
      call e_whichvar (names,2,e_fu_anal,current_date,vt)
      names(1)= 'HU' ; names(2)= 'ES'; names(3)= 'TD' ; names(4)= 'HR'
      call e_whichvar (names,4,e_fu_anal,current_date,vh)

      nia = -1 ; nka = -1
      call e_hvgrid (vt,     current_date, e_fu_anal, nia,nja,nka, &
                             grda, ig1a,ig2a,ig3a,ig4a,list,nlist)

      allocate ( hyb_t_8(nka) ) ; hyb_t_8=-1.
      err = px_param( e_fu_anal,list,na_t,nka,lv_t,hyb_t_8, 'T',&
                      presvar_8,presvar_S,PRESVAR_MAX,          &
                      zat_8,zbt_8,vcode_S,vcode )
      call handle_error(err,'e_specanal','px_param on TT')

      ni1 = nia ; nka = -1
      if (trim(var_uu)=='UT1') ni1=0
      call e_hvgrid (var_uu, current_date, e_fu_anal, ni1,nja,nka, &
                             grda, ig1a,ig2a,ig3a,ig4a,list,nlist)

      allocate ( hyb_8(nka) ) ; hyb_8 = -1.
      err = px_param( e_fu_anal,list,na,nka,lv,hyb_8,  'M',&
                      presvar_8,presvar_S,PRESVAR_MAX,     &
                      za_8,zb_8,vcode_S,vcode )
      call handle_error(err,'e_specanal','px_param on UU')

      Anal_sigma_L   = .false.
      Anal_eta_L     = .false. 
      Anal_hyb_L     = .false.
      Anal_pres_L    = .false.
      Anal_ecmwf_L   = .false.
      anal_hav(2)    = vcode

      if (vcode_S.eq."HYBLG")   Anal_hyb_L    = .true.
      if (vcode_S.eq."SIGPT")   Anal_eta_L    = .true.
      if (vcode_S.eq."SIGMA")   Anal_sigma_L  = .true.
      if (vcode_S.eq."PRESS")   Anal_pres_L   = .true.
      if (vcode_S.eq."HYBSTAG") Anal_hyb_L    = .true.

      prefa    = presvar_8(1)
      ptopa    = presvar_8(2)
      rcoefa(1)= presvar_8(4)
      rcoefa(2)= presvar_8(5)

      print *,'===> Analysis on ',vcode_S,' vertical coordinates'

      istat = 0
      if ( (Anal_sigma_L.or.Anal_eta_L.or.Anal_hyb_L.or.Anal_ecmwf_L) &
            .and. ( VH .ne. 'HU' ) ) then
         write(6,*) 'ERROR: Moisture variable(VH) must be HU '
         write(6,*) 'when analysis is on sigma/eta/hybrid.'
         istat = -1
      endif
      call handle_error(istat,'e_specanal','')

      if (LV.eq.1) then
         print*," A SHALLOW WATER model is now to be ASSUMED "
         print*," VERIFY if SET Schm_autobar_L=.true.        "
         LV_T=1
         rna_t(1)=rna(1)
         na_t(1)=na(1)
      endif

      print*, var_uu,lv,'ANALYSIS LEVELS FOUND ARE:'
      do k=1,lv
         rna(k)=hyb_8(k)
         write(6,801) rna(k),k,na(k)
      end do 

      print*, vt,lv_t,'ANALYSIS LEVELS FOUND ARE:'
      do k=1,lv_t
         rna_t(k)=hyb_t_8(k)
         write(6,801) rna_t(k),k,na_t(k)
      end do 

      deallocate (hyb_8,hyb_t_8)

!     Check for vertical consistency when (vcode.ne.6)
      istat = 0
      if (vcode.ne.6) then 
         if (lv.ne.lv_t) then
            print *,'Levels found for TT/VT is',LV_t,': should be ',LV
            istat = -1
         endif
         do k=1,lv
            if (rna(k).ne.rna_t(k)) then
               print *,'Level',k,'for UU is',rna(k),' which is not the same for TT/VT ',rna_t(k)
               istat = -1
            endif
         enddo
      endif
      call handle_error(istat,'e_specanal','')

!     Check presence of ZDT1, WT1 and QT1

      nka = lv ; list(1) = -1
      nvar = 5
      call e_hvgrid ('ZDT1',current_date, e_fu_anal, nia,nja,nka, &
                            grda, ig1a,ig2a,ig3a,ig4a,list,nlist)
      if (list(1).ge.0) nvar=nvar+1

      list(1) = -1
      call e_hvgrid ('WT1',current_date, e_fu_anal, nia,nja,nka, &
                            grda, ig1a,ig2a,ig3a,ig4a,list,nlist)
      if (list(1).ge.0) nvar=nvar+1

      list(1) = -1
      call e_hvgrid ('QT1',current_date, e_fu_anal, nia,nja,nka, &
                            grda, ig1a,ig2a,ig3a,ig4a,list,nlist)
      if (list(1).ge.0) nvar=nvar+1

      istat = 0
      if (Anal_pres_L.and.lv.gt.1.and.lv.lt.16) then           !     Pressure Analysis
         write(6,*) ': NEED 16 OR MORE PRESSURE LEVELS. ', &
                    lv, ' levels found'
         istat = -1
      else if (vcode.gt.0.and.vcode.le.5) then                 !     Eta/HYB/SIG/ECMWF
         if (rna(lv).ne.1.0) then
            write(6,*)'**************************************'
            write(6,*)'rna(',lv,') is not equal to 1.0'
            write(6,*)'WARNING: NO topography level found!!!!'
            write(6,*)'**************************************'
         endif
      endif
      call handle_error(istat,'e_specanal','')

      call e_target3df (grda, nia, nja, ig1a, ig2a, ig3a, ig4a)

 801  format (' LEVEL anal = ',d15.8,2X,' k = ',i4,' IP1= ',I8)
 1001 format(/,'OBTAIN INPUT DATA LEVEL STRUCTURE (S/R E_SPECANAL)',/50('-'))
!
! ---------------------------------------------------------------------
!
      return
      end
