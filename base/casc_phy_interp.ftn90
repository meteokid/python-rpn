!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r casc_phy_interp
!
#include "model_macros_f.h"
      subroutine casc_phy_interp ( src,xpxext,ypxext,xpaq,ypaq,phynm,&
                                              nis,njs,nks,nfphy,hint )
      implicit none
!
      character(len=*):: hint, phynm(nfphy)
      integer nis,njs,nfphy,nks(nfphy)
      real src(nis,njs,nfphy)
      real*8 xpxext(*),ypxext(*),xpaq(nis),ypaq(njs)
!
!Author
!     Lubos Spacek - Spring 2010
!
!Revision
! v4_13 - Spacek, L.     - First revision
!
#include "gmm.hf"
#include "var_gmm.cdk"
#include "glb_ld.cdk"
!
      character(len=16) :: var
      integer i,ivar,nkphy
      integer, dimension (:  ), pointer :: idx,idy
      real, pointer, dimension (:,:,:) :: dst
      real*8, dimension (:  ), pointer ::  &
                    cxa,cxb,cxc,cxd,cya,cyb,cyc,cyd
      type(gmm_metadata) :: meta3d_phy
!
!-----------------------------------------------------------------------
!
      allocate (idx(l_ni), idy(l_nj),                       &
                cxa(l_ni), cxb(l_ni), cxc(l_ni) ,cxd(l_ni), &
                cya(l_nj), cyb(l_nj), cyc(l_nj), cyd(l_nj) )

      call grid_to_grid_coef (xpxext,l_ni,xpaq,nis,idx,cxa,cxb,cxc,cxd,hint)
      call grid_to_grid_coef (ypxext,l_nj,ypaq,njs,idy,cya,cyb,cyc,cyd,hint)

      nkphy=0
      do ivar = 1,nfphy
         call gmm_build_meta3D(meta3d_phy,                &
                               1,l_ni,0,0,l_ni,           &
                               1,l_nj,0,0,l_nj,           &
                               1,nks(ivar),0,0,nks(ivar), &
                               0,GMM_NULL_FLAGS) 
         write(var,'(2a)')'CASC_',trim(phynm(ivar))
         nullify (dst)
         gmmstat = gmm_create(var,dst,meta3d_phy,GMM_FLAG_INAN)
         if (GMM_IS_ERROR(gmmstat)) then
            write(6000,var)
            cycle
         endif
         gmmstat = gmm_get(var,dst,meta3d)
         if (GMM_IS_ERROR(gmmstat)) then
            write(6010,var)
            cycle
         endif

         do i=1,nks(ivar)
            nkphy=nkphy+1
            call hinterpo ( dst(1,1,i),l_ni,l_nj, src(1,1,nkphy), nis,njs,1, &
                                idx,idy,cxa,cxb,cxc,cxd,cya,cyb,cyc,cyd,hint )
         enddo
      enddo
!
 6000 format('phinterpo at gmm_create(',A,')')
 6010 format('phinterpo at gmm_get(',A,')')
!-----------------------------------------------------------------------
      return
      end
!
