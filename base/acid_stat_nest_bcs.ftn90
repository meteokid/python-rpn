!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r acid_stat_nest_bcs - gblstat for acid test

#include "model_macros_f.h"
!
      subroutine acid_stat_nest_bcs(F_tr0,F_tr,F_n,F_flag)
!
      implicit none
#include <arch_specific.hf>
!
      real F_tr0(LDIST_SHAPE,G_nk+2),F_tr(LDIST_SHAPE,G_nk+2)
!     
      integer F_flag,F_n
!
!author
!     Andre Plante
!     
!revision
!
!language
!     fortran 77
!
!object
!     glbstat for LAM acid test
!     Note : the acid test is conducted with one CPU.
!
!implicits
#include "lun.cdk"
#include "glb_ld.cdk"
#include "tr3d.cdk"
#include "acid.cdk"
!     
      if(F_flag.eq.1)then
         if (acid_i0.gt.0) then
            print *,'tr0(1+acid_i0,1+acid_j0,2)=', &
                 F_tr0(1+acid_in,1+acid_j0,2)
         else
            print *,'nest_tr(1+acid_i0,1+acid_j0,2)=', &
                 F_tr(1+acid_i0,1+acid_j0,2)
         endif
         call glbstat (F_tr0, Tr3d_name_S(F_n),LDIST_DIM,G_nk+2, &
              1+acid_i0,G_ni-acid_in, &
              1+acid_j0,G_nj-acid_jn, &
              1,G_nk+2)
      else
         print*,'flag=',F_flag
         call handle_error(-1,'acid_stat_nest_bcs','acid_stat_nest_bcs : error with flag')
      endif
      
      return
      
      end
