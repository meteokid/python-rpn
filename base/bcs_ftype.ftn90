!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!opyright (C) 2001  MSC-RPN COMM  %%%MC2%%%
!**s/r bcs_ftype - to determine whether pilot file is BMF,BCS or 3DF
!
      integer function bcs_ftype ( ft, datev, unf )
      implicit none
#include <arch_specific.hf>
!
      character* (*) ft
      character*15 datev
      integer unf
!author
!        Michel Desgagne - 2001 (from MC2 bcs_ftype)
!revision
! v3_30 - Desgagne M.  - initial version for GEMDM
! v4_03 - Lee/Desgagne - ISST
!
!ARGUMENTS
!    NAMES     I/O  TYPE  A/S        DESCRIPTION
!     ft       I/O   C    S       Input file type
!
!IMPLICIT
#include "bcsgrds.cdk"
#include "ifd.cdk"
#include "path.cdk"
!
      integer  nav_3df
      external nav_3df
      character*3 ft_pref
      character*256 fn
      logical mustnav
      integer err
!
!-----------------------------------------------------------------------
!
      ft_pref = 'NON'
!
      fn  = trim(Path_ind_S)//'/3df_filemap.txt'
      open (unf,file=fn,access='SEQUENTIAL',status='OLD', &
                             iostat=err,form='FORMATTED')
      ft_pref = 'BMF'
      if ( err.eq.0 ) ft_pref = '3DF'
!
      bcs_ftype = -2
!
      mustnav = .false.
      if (ft.ne.ft_pref) mustnav = .true.

      ft = ft_pref
!
      if (ft.eq.'BMF') mustnav = .false.
!
      if (mustnav) then
         bcs_ftype = nav_3df (unf,1.2,1.0d0)
         bcs_nia = ifd_niaf - ifd_niad + 1
         bcs_nja = ifd_njaf - ifd_njad + 1
         close (unf)
      else
         bcs_ftype = 0
      endif
!
      call handle_error (bcs_ftype,'bcs_ftype','bcs_ftype ')
!
!-----------------------------------------------------------------------
      return
      end

