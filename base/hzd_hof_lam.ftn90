!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it 
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r hzd_hof_lam - applies horizontal diffusion on a given set of fields
!
#include "model_macros_f.h"
      subroutine hzd_hof_lam ( F_u, F_v, F_zd, F_w, F_t, F_s, DIST_DIM, Nk)
!
      implicit none
!
      integer DIST_DIM, Nk
!
      real     F_u(DIST_SHAPE,Nk  ) , F_v(DIST_SHAPE,Nk  ), &
               F_zd(DIST_SHAPE,Nk+1), F_w(DIST_SHAPE,Nk+1), &
               F_t(DIST_SHAPE,Nk+1) , F_s(DIST_SHAPE)
!
!author
!     Abdessamad Qaddouri
!
!revision
! v2_10 - Qaddouri A.       - initial version
! v2_21 - Desgagne M.       - control for diffusion on momentum only
! v3_00 - Desgagne & Lee    - Lam configuration
! v3_10 - Corbeil & Desgagne & Lee - AIXport+Opti+OpenMP
! v4    - Gravel-Girard-Plante - staggered version
! v4_04 - Girard-Plante     - Diffuse only real winds and zdot.
! v4_05 - Plante A.         - Diffuse w.
!
!object
! The diffusion includes: second order(Hzd_pwr=1), 
! fourth order(Hzd_pwr=2),
! sixth (Hzd_pwr=3) and eightth order (Hzd_pwr=4) diffusion
!
!arguments
!  Name        I/O        Description
!----------------------------------------------------------------
!  F_u         I/0        see subroutine
!  F_v         I/0            "
!  F_t         I/0            "
!  F_w         I/0            "
!----------------------------------------------------------------
! 
!implicits
#include "fft.cdk"
#include "glb_ld.cdk"
#include "ldnh.cdk"
#include "dcst.cdk"
#include "cstv.cdk"
#include "trp.cdk"
#include "hzd.cdk"
#include "opr.cdk"
#include "schm.cdk"
#include "lun.cdk"
#include "ptopo.cdk"
#include "type.cdk"
#include "ver.cdk"
!
      integer dpwr
      real*8 wk1_8(LDIST_SHAPE,(Nk+1))
!*
!     __________________________________________________________________
!
      dpwr = Hzd_pwr / 2
      if (Lun_debug_L) write(Lun_out,1000) Hzd_pwr
!
      if ( Hzd_cdiff .le. 0.0 ) then
           if (Lun_debug_L) write(Lun_out,1001) Hzd_cdiff
           return
      endif
!
!
!     Momentum
!     ~~~~~~~~
!     print *,'hzd_areal on F_u'
!     call hzd_areal(F_u,Hzd_xp0_8,Opr_opsyp0_8,
!    $        l_minx,l_maxx,l_miny,l_maxy,G_ni,G_nj,Nk)
!     do i=1,10
      call hzd_solfft_lam(F_u, wk1_8, Fft_pri_8,  &
           Hzd_au_8,Hzd_cu_8,Hzd_deltau_8, &
           trp_12dmin,trp_12dmax,trp_22min,trp_22max, &
           trp_12dn,trp_22n,G_nj, dpwr,l_minx,  &
           l_maxx,l_miny,l_maxy,Nk,G_ni,l_ni,l_nj, &
           trp_12dn,Hzd_xp0_8,Opr_opsyp0_8, Hzd_cdiff, &
           Ptopo_npex,Ptopo_npey)
!     enddo
!     call hzd_areal(F_u,Hzd_xp0_8,Opr_opsyp0_8,
!    $        l_minx,l_maxx,l_miny,l_maxy,G_ni,G_nj,Nk)
!
!     print *,'hzd_areal on F_v'
!     call hzd_areal(F_v,Opr_opsxp0_8,Hzd_yp0_8,
!    $        l_minx,l_maxx,l_miny,l_maxy,G_ni,G_nj,Nk)
!     do i=1,10
      call hzd_solfft_lam(F_v, wk1_8, Fft_pri_8 , &
           Hzd_av_8,Hzd_cv_8,Hzd_deltav_8, &
           trp_12dmin,trp_12dmax,trp_22min,trp_22max, &
           trp_12dn,trp_22n,G_nj, dpwr,l_minx, &
           l_maxx,l_miny,l_maxy,Nk,G_ni,l_ni,l_nj,  &
           trp_12dn,Opr_opsxp0_8,Hzd_yp0_8, Hzd_cdiff, &
           Ptopo_npex,Ptopo_npey)
!     enddo
!     call hzd_areal(F_v,Opr_opsxp0_8,Hzd_yp0_8,
!    $        l_minx,l_maxx,l_miny,l_maxy,G_ni,G_nj,Nk)
!
!        Vertical motion
!        ~~~~~~~~~~~~~~~
!********not physical, done nevertheless*******
      call hzd_solfft_lam(F_zd, wk1_8, Fft_pri_8 , &
           Hzd_as_8,Hzd_cs_8,Hzd_deltas_8, &
           trp_p12dmin,trp_p12dmax,trp_22min,trp_22max, &
           trp_p12dn,trp_22n,G_nj, dpwr,l_minx, &
           l_maxx, l_miny, l_maxy,Nk+1,G_ni,l_ni,l_nj, &
           trp_p12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff, &
           Ptopo_npex,Ptopo_npey)
!
      call hzd_solfft_lam(F_w, wk1_8, Fft_pri_8 , &
           Hzd_as_8,Hzd_cs_8,Hzd_deltas_8, &
           trp_p12dmin,trp_p12dmax,trp_22min,trp_22max, &
           trp_p12dn,trp_22n,G_nj, dpwr,l_minx, &
           l_maxx, l_miny, l_maxy,Nk+1,G_ni,l_ni,l_nj, &
           trp_p12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff, &
           Ptopo_npex,Ptopo_npey)
!     
      if(.false.)then
         call handle_error(-1,'hzd_hof_lam','hzd_hof_lam : do not diffuse t but theta')
!
!        Theta
!        ~~~~~
         call hzd_solfft_lam(F_t, wk1_8, Fft_pri_8 , &
                         Hzd_as_8,Hzd_cs_8,Hzd_deltas_8, &
                         trp_p12dmin,trp_p12dmax,trp_22min,trp_22max, &
                         trp_p12dn,trp_22n,G_nj, dpwr,l_minx, &
                         l_maxx, l_miny, l_maxy,Nk+1,G_ni,l_ni,l_nj, &
                         trp_p12dn,Opr_opsxp0_8,Opr_opsyp0_8, Hzd_cdiff, &
                         Ptopo_npex,Ptopo_npey)

      endif
!
 1000 format(/, &
        3X,'PERFORM DEL-',i1,' FFT HORIZONTAL DIFFUSION: (S/R HZD_HOF_LAM)')
 1001 format(/, &
           3X,'HZD_CDIFF=',F20.8,' NO HORIZONTAL DIFFUSION: (S/R HZD_HOF_LAM)')
!     __________________________________________________________________
!
      return
      end
