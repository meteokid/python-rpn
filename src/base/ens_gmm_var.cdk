
#if defined (DOC)
!
!**comdeck ens_chains.cdk
!
!______________________________________________________________________
!                                                                      |
!  GMM variables for Markov chains                                     |
!______________________________________________________________________|
!                    |                                                 |
! NAME               | DESCRIPTION                                     |
!--------------------|-------------------------------------------------|
! mcsph1             | 3D Markov chain                                 |
! difut1             | horizontal diffusion u-tendency                 |
! difvt1             | horizontal diffusion v-tendency                 |
! ugwdt1             | gravity wave         u-tendency                 |
! vgwdt1             | gravity wave         v-tendency                 |
!----------------------------------------------------------------------
!
#endif
!
! dimension (l_ni, l_nj ,(l_nk+2))
      real, pointer, dimension (:,:,:)     :: mcsph1  => null()
! dimension LDIST_SHAPE,  l_nk+1)
      real,    pointer, dimension (:,:,:)     :: difut1  => null()
      real,    pointer, dimension (:,:,:)     :: difvt1  => null()
      real,    pointer, dimension (:,:,:)     :: diout1  => null()
      real,    pointer, dimension (:,:,:)     :: diovt1  => null()
      real,    pointer, dimension (:,:,:)     :: ugwdt1  => null()
      real,    pointer, dimension (:,:,:)     :: vgwdt1  => null()
      real,    pointer, dimension (:,:,:)     :: ensdiv  => null()
      real,    pointer, dimension (:,:,:)     :: ensvor  => null()
! special shapes for spectral coefficients
      real, pointer, dimension (:,:,:)       :: ar_p     => null()
      real, pointer, dimension (:,:,:)       :: ai_p     => null()
      real, pointer, dimension (:,:)         :: ar_s     => null()
      real, pointer, dimension (:,:)         :: ai_s     => null()
      real, pointer, dimension (:,:,:)       :: br_p     => null()
      real, pointer, dimension (:,:,:)       :: bi_p     => null()
      real, pointer, dimension (:,:)         :: br_s     => null()
      real, pointer, dimension (:,:)         :: bi_s     => null()

! special shape for random number generator
      integer, pointer, dimension (:,:)       :: dumdum  => null()

! Legendre polynomial for SKEB Markov chain
      real*8, pointer, dimension (:,:,:)       ::   plg     => null()



#if !defined(GMM_IS_OK)
#define GMM_IS_OK(errcode) (errcode >= 0)
      integer, parameter :: GMM_MAXNAMELENGTH    =  32
#endif

      character(len=GMM_MAXNAMELENGTH) :: gmmk_mcsph1_s
      character(len=GMM_MAXNAMELENGTH) :: gmmk_difut1_s,gmmk_difvt1_s
      character(len=GMM_MAXNAMELENGTH) :: gmmk_diout1_s,gmmk_diovt1_s
      character(len=GMM_MAXNAMELENGTH) :: gmmk_ugwdt1_s,gmmk_vgwdt1_s
      character(len=GMM_MAXNAMELENGTH) :: gmmk_ensdiv_s,gmmk_ensvor_s
      character(len=GMM_MAXNAMELENGTH) :: gmmk_ar_s,gmmk_ai_s,gmmk_br_s,gmmk_bi_s
      character(len=GMM_MAXNAMELENGTH) :: gmmk_ar_p,gmmk_ai_p,gmmk_br_p,gmmk_bi_p
      character(len=GMM_MAXNAMELENGTH) :: gmmk_dumdum_s,gmmk_plg_s
      common /ens_n_gmm/ gmmk_mcsph1_s, gmmk_plg_s
      common /ens_n_gmm/ gmmk_difut1_s,gmmk_difvt1_s
      common /ens_n_gmm/ gmmk_diout1_s,gmmk_diovt1_s
      common /ens_n_gmm/ gmmk_ugwdt1_s,gmmk_vgwdt1_s
      common /ens_n_gmm/ gmmk_ensdiv_s,gmmk_ensvor_s
      common /ens_n_gmm/ gmmk_ar_s,gmmk_ai_s,gmmk_br_s,gmmk_bi_s
      common /ens_n_gmm/ gmmk_ar_p,gmmk_ai_p,gmmk_br_p,gmmk_bi_p
      common /ens_n_gmm/ gmmk_dumdum_s 
