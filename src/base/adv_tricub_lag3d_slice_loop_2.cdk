
   call timing_start2 (73, 'MASS', 86)

   !---------------------
   !Compute mass for ECVs
   !---------------------
   do k=k0,F_nk
      idxk = (k-1)*l_ni*l_nj
      do j=1,l_nj
         idxjk = idxk + ((j-1)*l_ni)
         do i=1,l_ni

            n = idxjk + i

            ii = i + Adv_halox + offi_ !TO BE REVISED
            jj = j + Adv_haloy + offj_
            kk = k

            o2 = (kk-1)*adv_nijag + (jj-adv_int_j_off-1)*adv_nit + (ii-adv_int_i_off)

         !!!m_ijk_8(i,j,k) = F_in_rho(o2) * (Geomg_area_8(i,j) * Ver_dz_8%t(k) * Geomg_mask_8(i,j))
            m_ijk_8(i,j,k) = F_in_rho(o2) * (Geomg_area_8(i,j) * Ver_dz_8%t(k))

         enddo
      enddo
   enddo

   call timing_stop (73)

   call timing_start2 (74, ' RUN V', 86)

   !-----------
   !3D Forecast
   !-----------
   if (.NOT.Schm_autobar_L) then

   !TO BE REVISED

   !-----------
   !2D Forecast
   !-----------
   else

   do k=k0,F_nk
      do j=1,l_nj
         do i=1,l_ni

            m_ecv_8(i,j,k) = m_ijk_8(i,j,k) 

         enddo
      enddo
   enddo

   endif

   call timing_stop (74)

   call timing_start2 (75, ' MAP E', 86)

   !--------------------------------------------
   !Compute mass for IECVs (EW-Remapping)
   !--------------------------------------------
   ! rho_LEFT_ecv = rho at LEFT boundary of ECV
   !slope_rho_ecv = slope at the center of ECV
   !iecv_location = location of IECV amongst ECV
   !       m_iecv = mass of IECV
   !--------------------------------------------
   do k=k0,F_nk

      do j=j_ps,j_pn

      !!!L1=c1_w(j,k) 
      !!!R1=c1_e(j,k) 
         L1=i_bw(j) 
         R1=i_be(j) 

         L2=i0_e 
         R2=in_e 
 
         m_ecv_X_8(L1:R1) = m_ecv_8(L1:R1,j,k)

         s_LEFT_ecv_8 (L1-1:R1) = dist_LEFT_ecv_8 (L1-1:R1,j,k)

         s_LEFT_iecv_8(L2-1:R2) = dist_LEFT_iecv_8(L2-1:R2,j,k)

         if (.NOT.slice_old_L) then

         ds_ecv_8(L1:R1) = s_LEFT_ecv_8(L1:R1)-s_LEFT_ecv_8(L1-1:R1-1) 

         !Compute values of RHO at LEFT boundary of ECV  
         !---------------------------------------------
         call adv_compute_cv_LEFT_boundary_values (m_ecv_X_8(L1:R1), slope_rho_X_8(L1:R1), s_LEFT_ecv_8(L1-1:R1), &
                                                   rho_LEFT_ecv_8(L1-1:R1), R1-L1+1, Tr_SLICE_rebuild)

         !Compute location of IECVs amongst ECVs
         !----------------------------------------------------------------------------
         !CAUTION: SHIFT=1 is used since BOUNDARY AND CENTER INDEXES DIFFERED FROM GEM
         !         X_LEFT(I) < X_CENTER(I) < X_RIGHT(I+1)
         !----------------------------------------------------------------------------
         call adv_Fast_Loc_1D (s_LEFT_iecv_8(L2-1:R2),s_LEFT_ecv_8(L1-1:R1),R2-(L2-1),R1-(L1-1),iecv_location(L2-1:R2),1)

      !!!do i=L2,R2
      !!! 
      !!!   s_iecv_start_8     = s_LEFT_iecv_8(i-1)
      !!!   s_iecv_finish_8    = s_LEFT_iecv_8(i)
      !!!   ecv_at_iecv_start  = iecv_location(i-1)
      !!!   ecv_at_iecv_finish = iecv_location(i)
      !!!
      !!!   m_iecv_8(i,j,k) = mass_of_area_8 (      s_iecv_start_8,         s_iecv_finish_8,    &
      !!!                                      ecv_at_iecv_start  ,    ecv_at_iecv_finish,      &
      !!!                                       s_LEFT_ecv_8(L1-1:R1), rho_LEFT_ecv_8(L1-1:R1), &
      !!!                                          m_ecv_X_8(L1  :R1),       ds_ecv_8(L1  :R1), &
      !!!                                      slope_rho_X_8(L1  :R1), R1-L1+1)
      !!!enddo
      !!!
      !!!m_iecv_X_8(L2:R2) = m_iecv_8(L2:R2,j,k)

         call adv_mass_of_area_1D (R2-L2+1,R1-L1+1,m_ecv_X_8(L1:R1),ds_ecv_8(L1:R1),slope_rho_X_8(L1:R1),R1-(L1-1)+1, &
                               iecv_Location(L2-1:R2),s_LEFT_iecv_8(L2-1:R2),s_LEFT_ecv_8(L1-1:R1), &
                               rho_LEFT_ecv_8(L1-1:R1),m_iecv_X_8(L2:R2))

         m_iecv_8(L2:R2,j,k) = m_iecv_X_8(L2:R2)

         else

         call adv_remapping (m_iecv_X_8(L2:R2),s_LEFT_iecv_8(L2-1:R2),R2-L2+1, &
                             m_ecv_X_8 (L1:R1),s_LEFT_ecv_8 (L1-1:R1),R1-L1+1)

         m_iecv_8(L2:R2,j,k) = m_iecv_X_8(L2:R2)

         endif

      enddo
   enddo

   call timing_stop (75)

   call timing_start2 (76, ' MAP N', 86)

   !--------------------------------------------------
   !Compute mass for LCVs
   !--------------------------------------------------
   !    rho_LEFT_ilcv   = rho at LEFT boundary of ILCV
   !   slope_rho_ilcv   = slope at the center of ILCV  
   !       lcv_location = location of LCV amongst ILCV 
   !              m_lcv = mass of ILCV 
   !--------------------------------------------------
   do k=k0,F_nk

      do i=(i0_c-ext),(in_c+ext)

         L1=c1_s(i,k)
         R1=c1_n(i,k)

         L2=j0_c-ext
         R2=jn_c+ext

         m_ilcv_Y_8(L1:R1) = m_iecv_8(i,L1:R1,k)

         s_LEFT_ilcv_8(L1-1:R1) = dist_LEFT_ilcv_8(i,L1-1:R1,k)
         s_LEFT_lcv_8 (L2-1:R2) = dist_LEFT_lcv_8 (i,L2-1:R2,k) 

         if (.NOT.slice_old_L) then

         ds_ilcv_8(L1:R1) = s_LEFT_ilcv_8(L1:R1)-s_LEFT_ilcv_8(L1-1:R1-1) 

         !Compute values of RHO at LEFT boundary of ILCV
         !----------------------------------------------
         call adv_compute_cv_LEFT_boundary_values (m_ilcv_Y_8(L1:R1), slope_rho_Y_8(L1:R1), s_LEFT_ilcv_8(L1-1:R1), &
                                                   rho_LEFT_ilcv_8(L1-1:R1), R1-L1+1, Tr_SLICE_rebuild)

         !Compute location of LCVs amongst ILCVs
         !----------------------------------------------------------------------------
         !CAUTION: SHIFT=1 is used since BOUNDARY AND CENTER INDEXES DIFFERED FROM GEM
         !         X_LEFT(I) < X_CENTER(I) < X_RIGHT(I+1)
         !----------------------------------------------------------------------------
         call adv_Fast_Loc_1D (s_LEFT_lcv_8(L2-1:R2),s_LEFT_ilcv_8(L1-1:R1),R2-(L2-1),R1-(L1-1),lcv_location(L2-1:R2),1)

      !!!do j=L2,R2
      !!!
      !!!   s_lcv_start_8      = s_LEFT_lcv_8(j-1)
      !!!   s_lcv_finish_8     = s_LEFT_lcv_8(j)
      !!!   ilcv_at_lcv_start  = lcv_location(j-1)
      !!!   ilcv_at_lcv_finish = lcv_location(j)
      !!!
      !!!   m_lcv_8(i,j,k) = mass_of_area_8 (       s_lcv_start_8     ,       s_lcv_finish_8,     &
      !!!                                     ilcv_at_lcv_start       , ilcv_at_lcv_finish,       &
      !!!                                       s_LEFT_ilcv_8(L1-1:R1), rho_LEFT_ilcv_8(L1-1:R1), &
      !!!                                          m_ilcv_Y_8(L1  :R1),       ds_ilcv_8(L1  :R1), &
      !!!                                       slope_rho_Y_8(L1  :R1), R1-L1+1)
      !!!
      !!!enddo
      !!!
      !!!m_lcv_Y_8(L2:R2) = m_lcv_8(i,L2:R2,k)

         call adv_mass_of_area_1D (R2-L2+1,R1-L1+1,m_ilcv_Y_8(L1:R1),ds_ilcv_8(L1:R1),slope_rho_Y_8(L1:R1),R1-(L1-1)+1, &
                               lcv_Location(L2-1:R2),s_LEFT_lcv_8(L2-1:R2),s_LEFT_ilcv_8(L1-1:R1), &
                               rho_LEFT_ilcv_8(L1-1:R1),m_lcv_Y_8(L2:R2))

         m_lcv_8(i,L2:R2,k) = m_lcv_Y_8(L2:R2)

         else

         call adv_remapping (m_lcv_Y_8 (L2:R2),s_LEFT_lcv_8 (L2-1:R2),R2-L2+1, &
                             m_ilcv_Y_8(L1:R1),s_LEFT_ilcv_8(L1-1:R1),R1-L1+1)

         m_lcv_8(i,L2:R2,k) = m_lcv_Y_8(L2:R2) 

         endif

      enddo
   enddo

   call timing_stop (76)

   call timing_start2 (73, 'MASS', 86)

   !--------
   !Finalize 
   !--------
   do k=k0,F_nk
      idxk = (k-1)*l_ni*l_nj
      do j=j0_c,jn_c
         idxjk = idxk + ((j-1)*l_ni)
         do i=i0_c,in_c

            n = idxjk + i

         !!!F_cub_rho(n) = m_lcv_8(i,j,k) / (Geomg_area_8(i,j) * Ver_dz_8%t(k) *  Geomg_mask_8(i,j)) !TO BE REVISED
            F_cub_rho(n) = m_lcv_8(i,j,k) / (Geomg_area_8(i,j) * Ver_dz_8%t(k))                      !TO BE REVISED

         enddo
      enddo
   enddo

   call timing_stop (73)
