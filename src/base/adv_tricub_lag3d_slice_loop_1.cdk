   !---------------------------------
   !Find departure points (x,y,z)_usm
   !---------------------------------

   do k=k0,F_nk+1
      idxk = (k-1)*l_ni*l_nj
      do j=j0_e,jn_e
         idxjk = idxk + ((j-1)*l_ni)
         do i=i0_e-1,in_e
            n = idxjk + i

            if (k/=F_nk+1) then

               x_usm_8(i,j,k) = F_x_usm(n)
               y_usm_8(i,j,k) = F_y_usm(n) 
               z_usm_8(i,j,k) = F_z_usm(n) 

            else

               n_F_nk = (F_nk-1)*l_ni*l_nj + ((j-1)*l_ni) + i

               x_usm_8(i,j,F_nk+1) = x_usm_8(i,j,F_nk) !TO BE REVISED 
               y_usm_8(i,j,F_nk+1) = y_usm_8(i,j,F_nk) !TO BE REVISED 
               z_usm_8(i,j,F_nk+1) = z_usm_8(i,j,F_nk) !TO BE REVISED 

            endif

         enddo 
      enddo 
   enddo 

   !---------------------------------
   !Find departure points (x,y,z)_svm
   !---------------------------------

   do k=k0,F_nk+1
      idxk = (k-1)*l_ni*l_nj
      do j=j0_e-1,jn_e
         idxjk = idxk + ((j-1)*l_ni)
         do i=i0_e,in_e
            n = idxjk + i

            if (k/=F_nk+1) then

               x_svm_8(i,j,k) = F_x_svm(n)
               y_svm_8(i,j,k) = F_y_svm(n)
               z_svm_8(i,j,k) = F_z_svm(n)

            else

               n_F_nk = (F_nk-1)*l_ni*l_nj + ((j-1)*l_ni) + i

               x_svm_8(i,j,F_nk+1) = x_svm_8(i,j,F_nk) !TO BE REVISED
               y_svm_8(i,j,F_nk+1) = y_svm_8(i,j,F_nk) !TO BE REVISED
               z_svm_8(i,j,F_nk+1) = z_svm_8(i,j,F_nk) !TO BE REVISED

            endif

         enddo
      enddo
   enddo

   !############################################ 
   !Prepare Intermediate Eulerian Control Volume
   !############################################ 

   !-----------------------
   !Find South/North limits
   !-----------------------
   j_pn = 1        
   j_ps = l_nj 

   do k=k0,F_nk+1

      !Find SOUTH limits for y_usm_8(j0_c): Interval [yv_(j-1),yv(j)]
      !--------------------------------------------------------------
      do i=i0_c-1,in_c

         do j=1,l_nj
            if (y_usm_8(i,j0_c,k) <= Geomg_yv_8(j)) goto 801
         enddo

         call handle_error(-1,'SLICE','PREPARE INTERMEDIATE EULERIAN CONTROL VOLUME: PROBLEM with S_BIN')

     801 continue

         s_bin = j

         if (abs(y_usm_8(i,j0_c,k)-Geomg_yv_8(j-1)) <= EPS_8) then

            y_usm_8(i,j0_c,k) = Geomg_yv_8(j-1)

         endif 

         if (abs(y_usm_8(i,j0_c,k)-Geomg_yv_8(j)) <= EPS_8) then

            y_usm_8(i,j0_c,k) = Geomg_yv_8(j)

            s_bin = j+1

         endif

         j_ps = min(s_bin,j_ps)

      enddo

      !Find NORTH limits for y_usm_8(jn_c): Interval [yv_(j-1),yv(j)]
      !--------------------------------------------------------------
      do i=i0_c-1,in_c

         do j=l_nj,1,-1
            if (Geomg_yv_8(j) <= y_usm_8(i,jn_c,k)) goto 802
         enddo

         call handle_error(-1,'SLICE','PREPARE INTERMEDIATE EULERIAN CONTROL VOLUME: PROBLEM with N_BIN')

     802 continue

         n_bin = j+1

         if (abs(y_usm_8(i,jn_c,k)-Geomg_yv_8(j+1)) <= EPS_8) then

            y_usm_8(i,jn_c,k) = Geomg_yv_8(j+1)

         endif

         if (abs(y_usm_8(i,jn_c,k)-Geomg_yv_8(j)) <= EPS_8) then

            y_usm_8(i,jn_c,k) = Geomg_yv_8(j)

            n_bin = j

         endif

         j_pn = max(n_bin,j_pn)

      enddo

      !Find SOUTH limits for y_svm_8(j0_c-1): Interval [yv_(j-1),yv(j)]
      !-----------------------------------------------------------------
      do i=i0_c,in_c

         do j=1,l_nj
            if (y_svm_8(i,j0_c-1,k) <= Geomg_yv_8(j)) goto 901
         enddo

         call handle_error(-1,'SLICE','PREPARE INTERMEDIATE EULERIAN CONTROL VOLUME: PROBLEM with S_CIN')

     901 continue

         s_cin = j

         if (abs(y_svm_8(i,j0_c-1,k)-Geomg_yv_8(j-1)) <= EPS_8) then

            y_svm_8(i,j0_c-1,k) = Geomg_yv_8(j-1)

         endif

         if (abs(y_svm_8(i,j0_c-1,k)-Geomg_yv_8(j)) <= EPS_8) then

            y_svm_8(i,j0_c-1,k) = Geomg_yv_8(j)

            s_cin = j+1

         endif

         c1_s(i,k) = s_cin

         j_ps = min(s_cin,j_ps)

      enddo

      !Find NORTH limits for y_svm_8(jn_c): Interval [yv_(j-1),yv(j)]
      !--------------------------------------------------------------
      do i=i0_c,in_c

         do j=l_nj,1,-1
            if (Geomg_yv_8(j) <= y_svm_8(i,jn_c,k)) goto 902
         enddo

         call handle_error(-1,'SLICE','PREPARE INTERMEDIATE EULERIAN CONTROL VOLUME: PROBLEM with N_CIN')

     902 continue

         n_cin = j+1

         if (abs(y_svm_8(i,jn_c,k)-Geomg_yv_8(j+1)) <= EPS_8) then

            y_svm_8(i,jn_c,k) = Geomg_yv_8(j+1)

         endif

         if (abs(y_svm_8(i,jn_c,k)-Geomg_yv_8(j)) <= EPS_8) then

            y_svm_8(i,jn_c,k) = Geomg_yv_8(j)

            n_cin = j

         endif

         c1_n(i,k) = n_cin

         j_pn = max(n_cin,j_pn)

      enddo

   enddo

   !------------------------------------------------------------------------------------------
   !Find x_bin,z_bin such that the curve line (x,y,z)_usm(j) intersects the straigth line y=ys
   !------------------------------------------------------------------------------------------
   do k=k0,F_nk+1

      do j=j_ps,j_pn

         do i=i0_e-1,in_e

            !Find jp such that y_usm(i,jp,k) <= ys <= y_usm(i,jp+1,k) 
            !--------------------------------------------------------
            do jp=j0_e,jn_e-1

               if (y_usm_8(i,jp,k) <= Geomg_y_8(j) .and. Geomg_y_8(j) <= y_usm_8(i,jp+1,k)) goto 803

            enddo 

            call handle_error(-1,'SLICE','PREPARE INTERMEDIATE EULERIAN CONTROL VOLUME: PROBLEM with X_BIN')

     803    continue

            !Find Intersection (x_bin,ys)
            !----------------------------
            slope_8 = (Geomg_y_8(j)-y_usm_8(i,jp,k))/(y_usm_8(i,jp+1,k)-y_usm_8(i,jp,k))

            x_bin_8(i,j,k) = x_usm_8(i,jp,k) + slope_8 * (x_usm_8(i,jp+1,k)-x_usm_8(i,jp,k))

            z_bin_8(i,j,k) = z_usm_8(i,jp,k) + slope_8 * (z_usm_8(i,jp+1,k)-z_usm_8(i,jp,k))

         enddo

      enddo

   enddo

   !------------------------------------------------------------------------------------------
   !Find x_cin,z_cin such that the curve line (x,y,z)_svm(j) intersects the straigth line y=yv
   !------------------------------------------------------------------------------------------

   do k=k0,F_nk+1

      do j=j_ps-1,j_pn

         do i=i0_e,in_e

            !Find jp such that y_svm(i,jp,k) <= yv <= y_svm(i,jp+1,k)
            !--------------------------------------------------------
            do jp=j0_e-1,jn_e-1

               if (y_svm_8(i,jp,k) <= Geomg_yv_8(j) .and. Geomg_yv_8(j) <= y_svm_8(i,jp+1,k)) goto 903 

            enddo

            call handle_error(-1,'SLICE','PREPARE INTERMEDIATE EULERIAN CONTROL VOLUME: PROBLEM with X_CIN')

     903    continue

            !Find Intersection (x_cin,yv)
            !----------------------------
            slope_8 = (Geomg_yv_8(j)-y_svm_8(i,jp,k))/(y_svm_8(i,jp+1,k)-y_svm_8(i,jp,k))

            x_cin_8(i,j,k) = x_svm_8(i,jp,k) + slope_8 * (x_svm_8(i,jp+1,k)-x_svm_8(i,jp,k))

            z_cin_8(i,j,k) = z_svm_8(i,jp,k) + slope_8 * (z_svm_8(i,jp+1,k)-z_svm_8(i,jp,k))

         enddo

      enddo

   enddo

   !-------------------------------------------------------------------------------------------------------------
   !Prepare 1D V-remapping
   !-------------------------------------------------------------------------------------------------------------
   !Find vertical line (xs,ys,z_bve) intersecting surface defined by departure points (x,y,z)_usm and (x,y,z)_svm
   !-------------------------------------------------------------------------------------------------------------

   !-----------
   !3D Forecast
   !-----------
   if (.NOT.Schm_autobar_L) then

   !TO BE REVISED

   !-----------
   !2D Forecast
   !-----------
   else

      do k=k0,F_nk+1
         do j=j0_e,jn_e
            do i=i0_e,in_e
               z_bve_8(i,j,k) = Ver_z_8%m(k)
            enddo
         enddo
      enddo

   endif

   !----------------------------------------------------------------------------------------------------------
   !Prepare 1D EW-remapping: {m_cew,Boundaries(x_bin,yv)}(Mapping#2) from {m_cve,Boundaries(xu,yv)}(Mapping#1) 
   !----------------------------------------------------------------------------------------------------------
   !Find distance of (x_bin,ys) in sx_b2 and distance of (xu,ys) in sx_b1
   !----------------------------------------------------------------------------------------------------------

   do k=k0,F_nk !QUESTION (NK or NK+1)

      do j=j_ps,j_pn

         sx_b2_8(i0_e-1,j,k) = 0.0d0

         c2_w(j,k) = i0_e

         !Evaluate distance between boundary points of Mapping#2
         !------------------------------------------------------
         do i=i0_e-1,in_e-1

            sx_b2_8(i+1,j,k) = sx_b2_8(i,j,k) + distance_GC_8 (x_bin_8(i  ,j,k),Geomg_y_8(j), &
                                                               x_bin_8(i+1,j,k),Geomg_y_8(j))
         enddo

         c2_e(j,k) = in_e

         !Evaluate distance of boundary points of Mapping#1 with respect to boundary points of Mapping#2
         !----------------------------------------------------------------------------------------------

            !Find Mapping#1 boundary at WEST of Mapping#2 boundary  
            !-----------------------------------------------------
            do i=1,l_ni

               if (x_bin_8(i0_e-1,j,k) <= Geomg_xu_8(i)) goto 201 

            enddo

            call handle_error(-1,'SLICE','PREPARE 1D EW-remapping: PROBLEM WEST BOUNDARY')

   201      continue

            iL = i  

            if (abs(x_bin_8(i0_e-1,j,k)-Geomg_xu_8(i-1)) <= EPS_8) then

               x_bin_8(i0_e-1,j,k) = Geomg_xu_8(i-1)

            endif

            if (abs(x_bin_8(i0_e-1,j,k)-Geomg_xu_8(i)) <= EPS_8) then

               x_bin_8(i0_e-1,j,k) = Geomg_xu_8(i)

               iL = i+1

            endif

            c1_w(j,k) = iL

            sx_b1_8(iL-1,j,k) = sx_b2_8(i0_e-1,j,k) - distance_GC_8 (x_bin_8(i0_e-1,j,k),Geomg_y_8(j), &
                                                                     Geomg_xu_8(iL-1)   ,Geomg_y_8(j))

            !Find Mapping#1 boundary at EAST of Mapping#2 boundary
            !-----------------------------------------------------
            do i=l_ni,1,-1

               if (Geomg_xu_8(i) <= x_bin_8(in_e,j,k)) goto 203

            enddo

            call handle_error(-1,'SLICE','PREPARE 1D EW-remapping: PROBLEM EAST BOUNDARY')

   203      continue

            iR = i+1

            if (abs(x_bin_8(in_e,j,k)-Geomg_xu_8(i+1)) <= EPS_8) then

               x_bin_8(in_e,j,k) = Geomg_xu_8(i+1)

            endif

            if (abs(x_bin_8(in_e,j,k)-Geomg_xu_8(i)) <= EPS_8) then

               x_bin_8(in_e,j,k) = Geomg_xu_8(i)

               iR = i

            endif

            c1_e(j,k) = iR

            sx_b1_8(iR,j,k) = sx_b2_8(in_e,j,k) + distance_GC_8 (x_bin_8(in_e,j,k),Geomg_y_8(j), &
                                                                 Geomg_xu_8(iR)   ,Geomg_y_8(j))

            do i=iL,iR-1

               !Find ip such that x_bin(ip) <= xu(i)
               !------------------------------------
               do ip=in_e,i0_e-1,-1

                  if (x_bin_8(ip,j,k) <= Geomg_xu_8(i)) goto 202

               enddo

               call handle_error(-1,'SLICE','PREPARE 1D EW-remapping: PROBLEM MIDDLE BOUNDARY')

   202         continue

               sx_b1_8(i,j,k) = sx_b2_8(ip,j,k) + distance_GC_8 (x_bin_8(ip,j,k),Geomg_y_8(j), &
                                                                 Geomg_xu_8(i)  ,Geomg_y_8(j))

            enddo

      enddo
   enddo

   !############################################## 
   !Prepare Intermediate Lagrangian Control Volume
   !############################################## 

   !------------------------------------------------------------------------------------------------------------
   !Prepare 1D NS-remapping: {m_cns,Boundaries(x,y)_svm}(Mapping#2) from {m_cew,Boundaries(x_cin,yv)}(Mapping#1) 
   !------------------------------------------------------------------------------------------------------------
   !Find distance of (x,y)_svm in sy_b2 and distance of (x_cin,yv) in sy_b1
   !------------------------------------------------------------------------------------------------------------

   do k=k0,F_nk !QUESTION (NK or NK+1)

      do i=i0_c,in_c

         c2_s(i,k) = j0_c
         c2_n(i,k) = jn_c

         sy_b2_8(c2_s(i,k)-1,i,k) = 0.0d0

         !Evaluate distance between boundary points of Mapping#2
         !------------------------------------------------------
         do jp=c2_s(i,k)-1,c2_n(i,k)-1

            sy_b2_8(jp+1,i,k) = sy_b2_8(jp,i,k) + distance_GC_8 (x_svm_8(i,jp  ,k),y_svm_8(i,jp  ,k), &
                                                                 x_svm_8(i,jp+1,k),y_svm_8(i,jp+1,k))

         enddo

         !Evaluate distance of boundary points of Mapping#1 with respect to boundary points of Mapping#2
         !----------------------------------------------------------------------------------------------

            jL = c1_s(i,k) 
            jX = c2_s(i,k) 

            sy_b1_8(jL-1,i,k) = sy_b2_8(jX-1,i,k) - distance_GC_8 (x_svm_8(i,jX-1,k),y_svm_8(i,jX-1,k), &
                                                                   x_cin_8(i,jL-1,k),Geomg_yv_8(jL-1))
            jR = c1_n(i,k) 
            jY = c2_n(i,k) 

            sy_b1_8(jR,i,k) = sy_b2_8(jY,i,k) + distance_GC_8 (x_svm_8(i,jY,k),y_svm_8(i,jY,k), &
                                                               x_cin_8(i,jR,k),Geomg_yv_8(jR))

            do j=jL,jR-1

               !Find jp such that y_svm(jp) <= Geomg_yv_8(j)
               !--------------------------------------------
               do jp=c2_n(i,k),c2_s(i,k)-1,-1

                  if (y_svm_8(i,jp,k) <= Geomg_yv_8(j)) goto 302

               enddo

               call handle_error(-1,'SLICE','PREPARE 1D NS-remapping: PROBLEM MIDDLE BOUNDARY')

   302         continue

               sy_b1_8(j,i,k) = sy_b2_8(jp,i,k) + distance_GC_8(x_svm_8(i,jp,k),y_svm_8(i,jp,k), &
                                                                x_cin_8(i,j ,k),Geomg_yv_8(j))   

            enddo

      enddo

   enddo
