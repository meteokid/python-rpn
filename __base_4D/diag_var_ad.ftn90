!---------------------------------- LICENCE BEGIN -------------------------------
! GEM - Library of kernel routines for the GEM numerical atmospheric model
! Copyright (C) 1990-2010 - Division de Recherche en Prevision Numerique
!                       Environnement Canada
! This library is free software; you can redistribute it and/or modify it
! under the terms of the GNU Lesser General Public License as published by
! the Free Software Foundation, version 2.1 of the License. This library is
! distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
! without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
! PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
! You should have received a copy of the GNU Lesser General Public License
! along with this library; if not, write to the Free Software Foundation, Inc.,
! 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
!---------------------------------- LICENCE END ---------------------------------

!**s/r diag_var_ad - ADJ of diag_var_tl 
!
#include "model_macros_f.h"
!
      subroutine diag_var_ad (F_BsPq,F_mu,F_s,F_q,F_s_m,F_q_m,i0,in,j0,jn,k0,nk)
!     
      implicit none
#include <arch_specific.hf>
!     
      integer k0,nk
      real F_BsPq(LDIST_SHAPE,0:Nk+1), F_mu(LDIST_SHAPE,Nk+1)
      real F_s(LDIST_SHAPE),           F_q(LDIST_SHAPE,0:Nk+1)
!
      real F_s_m(LDIST_SHAPE),F_q_m(LDIST_SHAPE,0:Nk+1)
!
!author M.Tanguay
!
!revision
! v4_04 - Tanguay M.        - initial MPI version
! v4_04 - Tanguay M.        - Staggered version TL/AD 
! v4_12 - Tanguay M.        - OPENMP TL/AD 
! v4_40 - Tanguay M.        - Revision TL/AD
!
!object
!     see id section
!
!arguments
!  Name        I/O                 Description
!----------------------------------------------------------------
! F_BsPq       O    - perturbation ln(pressure)
! F_mu         O    - 
! F_s          I    - 
! F_q          I    - non-hydro perturbation of log(p)
! i0,in,j0,jn  I    - index over which computation will be made.
!----------------------------------------------------------------
!
!implicits
#include "lun.cdk"
#include "dcst.cdk"
#include "glb_ld.cdk"
#include "geomg.cdk"
#include "cstv.cdk"
#include "type.cdk"
#include "ver.cdk"
#include "schm.cdk"
!     
!     ---------------------------------------------------------------
      integer i,j,k,i0,in,j0,jn,nij
      real*8 ONE_8, xxx_8, ZERO_8, qbar_8
      parameter ( ONE_8=1.d0, ZERO_8=0.d0 )
      real*8, dimension(i0:in,j0:jn,0:NK+1):: xtmp_8, ytmp_8
      real*8, dimension(i0:in,j0:jn,0:NK+1):: xtmp_m_8, ytmp_m_8
!     ---------------------------------------------------------------
!
      if (.not.Schm_hydro_L) call handle_error(-1,'diag_var_ad','.not.Schm_hydro_L: need to be revised')
!
      if( &
           i0.lt.1-G_halox   .or. &
           in.gt.l_ni+G_halox.or. &
           j0.lt.1-G_haloy   .or. &
           jn.gt.l_nj+G_haloy &
           )then
         call handle_error(-1,'diag_var_ad','diag_var_ad : dimension error')
      endif
!
      nij = (in - i0 + 1)*(jn - j0 + 1)
!
!     Zero adjoint variables 
!     ----------------------
      xtmp_8 = 0.
      ytmp_8 = 0.
      qbar_8 = 0.
!
!$omp parallel shared (xtmp_8,ytmp_8,xtmp_m_8,ytmp_m_8,qbar_8) private (xxx_8)
!
      if (.not. Schm_hydro_L) then
!
!     TRAJECTORY
!     ----------
!$omp do
      do k=l_nk+1,max(k0-1,1),-1
            do j= j0, jn
            do i= i0, in
               xtmp_m_8(i,j,k) =ONE_8+ver_dbdz_8%t(k)*F_s_m(i,j)
            enddo
            enddo
!
            call vrec ( ytmp_m_8(i0,j0,k), xtmp_m_8(i0,j0,k), nij )
      enddo
!$omp enddo
!
!     ADJ
!     ---
!$omp do
      do j= j0, jn
            do k=l_nk+1,max(k0-1,1),-1
            do i= i0, in
               ytmp_8(i,j,k)  = Ver_idz_8%t(k)*( F_q_m(i,j,k)-F_q_m(i,j,k-1))*F_mu(i,j,k) + ytmp_8(i,j,k)
               F_q   (i,j,k)  = Ver_idz_8%t(k)*( F_mu (i,j,k))*ytmp_m_8(i,j,k)            + F_q   (i,j,k) 
               F_q   (i,j,k-1)= Ver_idz_8%t(k)*(-F_mu (i,j,k))*ytmp_m_8(i,j,k)            + F_q   (i,j,k-1)
               F_mu  (i,j,k)  = ZERO_8
            enddo
            enddo
      enddo
!$omp enddo
!
!$omp do
      do k=l_nk+1,max(k0-1,1),-1
            do j= j0, jn
            do i= i0, in
               xtmp_8(i,j,k) = - ytmp_8(i,j,k)/xtmp_m_8(i,j,k)**2 + xtmp_8(i,j,k)
               ytmp_8(i,j,k) = ZERO_8
            enddo
            enddo
      enddo
!$omp enddo
!
!$omp do
      do j= j0, jn
            do k=l_nk+1,max(k0-1,1),-1
            do i= i0, in
                F_s   (i,j)    = ver_dbdz_8%t(k)*xtmp_8(i,j,k) + F_s(i,j)
                xtmp_8(i,j,k)  = ZERO_8
            enddo
            enddo
      enddo
!$omp enddo
!
!$omp do
      do k=l_nk+1,k0-1,-1
            do j= j0, jn
            do i= i0, in
                F_q(i,j,k) = F_BsPq(i,j,k) + F_q(i,j,k)
            enddo
            enddo
      enddo
!$omp enddo
!
      endif
!
!$omp do
       do j= j0, jn
         do k=l_nk+1,k0-1,-1
         if(k.eq.0) then
            xxx_8=0.d0
         else
            xxx_8=Ver_b_8%m(k)
         endif
            do i= i0, in
               F_s   (i,j)   = xxx_8* F_BsPq(i,j,k) + F_s(i,j)
               F_BsPq(i,j,k) = ZERO_8
            enddo
         enddo
      enddo
!$omp enddo
!      
!$omp end parallel
!
!     ---------------------------------------------------------------
!
      return
      end
